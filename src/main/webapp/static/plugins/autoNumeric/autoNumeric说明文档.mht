From: =?gb2312?B?08kgV2luZG93cyBJbnRlcm5ldCBFeHBsb3JlciA5ILGjtOY=?=
Subject: autoNumeric
Date: Mon, 28 Jan 2013 11:08:13 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CDFD47.C3D51740"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7600.16807

这是 MIME 格式的多方邮件。

------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://decorplanit.com/plugin/

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!DOCTYPE html><HTML><HEAD>
<META content=3D"text/html; charset=3DUTF-8" =
http-equiv=3D"Content-Type">
<META content=3D"autoNumeric,number,numbers,currency,Dollar,Euro,format" =

name?keywords?=3D""><TITLE>autoNumeric</TITLE>
<SCRIPT type=3D"text/javascript" =
src=3D"http://decorplanit.com/plugin/jquery.js"></SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://decorplanit.com/plugin/autoNumeric-1.8.1.js"></SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://decorplanit.com/plugin/autoNumeric-1.8.0-sample.js"></SCRIP=
T>

<SCRIPT type=3D"text/javascript" =
src=3D"http://decorplanit.com/plugin/json2.js"></SCRIPT>

<SCRIPT type=3D"text/javascript" =
src=3D"http://decorplanit.com/plugin/smoothScroll.js"></SCRIPT>
<LINK rel=3D"stylesheet" type=3D"text/css" =
href=3D"http://decorplanit.com/plugin/styles/prettify.css">
<SCRIPT type=3D"text/javascript" =
src=3D"http://decorplanit.com/plugin/scripts/prettify.js"></SCRIPT>

<STYLE>=0A=
body {=0A=
	font-family: Verdana, Geneva, sans-serif;=0A=
	font-size: 14px;=0A=
	margin: 0;=0A=
	margin-bottom:0px;=0A=
	padding: 0;=0A=
	background-image:url(image/carbon.png);=0A=
}=0A=
p {=0A=
	line-height:1.5;=0A=
}=0A=
div.bodyContainer {=0A=
	width:925px;=0A=
	border-style:solid;=0A=
	border-width:3px;=0A=
	border-color:#000;=0A=
	padding: 0px 0px 0px 0px;=0A=
	margin: 0 auto;=0A=
	background-color: #F8F8FF;=0A=
}=0A=
div.mainContainer {=0A=
	background:#F8F8FF;=0A=
	padding: 20px 30px 20px 20px;=0A=
}=0A=
div.subContainer {=0A=
	border-style:solid;=0A=
	border-width: 1px;=0A=
	border-color:#808080;=0A=
	padding: 10px 5px 30px 15px;=0A=
	background-color:#F8F8FF;=0A=
	-moz-box-shadow:    3px 3px 5px 6px #ccc;=0A=
	-webkit-box-shadow: 3px 3px 5px 6px #ccc;=0A=
	box-shadow:         3px 3px 5px 6px #ccc;=0A=
	margin-top: 35px;=0A=
	margin-bottom: 35px;=0A=
}=0A=
=0A=
.mainTable {=0A=
	border-width: 0px;=0A=
	border-spacing: 0px;=0A=
	border-style: none;=0A=
	border-color: #EBEBEB;=0A=
	border-collapse: collapse;=0A=
	background-color: #F8F8FF;=0A=
}=0A=
.mainTable th {=0A=
	border-width: 1px;=0A=
	padding: 1px;=0A=
	border-style: inset;=0A=
	border-color: gray;=0A=
	background-color: white;=0A=
}=0A=
.mainTable td {=0A=
	border-width: 1px;=0A=
	padding: 3px 10px 3px 5px;=0A=
	border-style: inset;=0A=
	border-color: #999;=0A=
}=0A=
.mainTable tr {=0A=
	height:35px;=0A=
}=0A=
=0A=
.mRoundDemo {=0A=
	border-width: 0px;=0A=
	border-spacing: 0px;=0A=
	border-style: none;=0A=
	border-color: #EBEBEB;=0A=
	border-collapse: collapse;=0A=
	background-color: #F8F8FF;=0A=
}=0A=
=0A=
.mainTable .mRoundDemoR2 {=0A=
	padding-right:20px	=0A=
}=0A=
=0A=
.mainTable .mRoundDemoR3 {=0A=
	padding-left:20px	=0A=
}=0A=
		=0A=
li {=0A=
	line-height:25px;=0A=
}=0A=
=0A=
ul li.caution {=0A=
	background-image:url(image/caution.png);=0A=
}=0A=
=0A=
input[type=3D"text"] {=0A=
	text-align:right;=0A=
}=0A=
=0A=
hr {=0A=
	margin-top: 35px;=0A=
	margin-bottom: 35px;=0A=
}=0A=
=0A=
.contentHeader {=0A=
	background-color:#161616;=0A=
	/*background-image:url(../images/anb170.png);*/=0A=
	height:150px;=0A=
}=0A=
.banner_Main {=0A=
	float:left;=0A=
	position:absolute;=0A=
	top:0px;=0A=
	padding: 0px;=0A=
}=0A=
.banner_Main h1 {=0A=
	font-family:'Comic Sans MS', cursive;=0A=
	font-size:36px;=0A=
	color:#39424b;=0A=
	padding:25px 0px 0px 29px;=0A=
}=0A=
.codeTable th tr td {=0A=
	border-width: 0px;=0A=
	border-spacing: 0px;=0A=
	border-style: none;=0A=
	border-color: #FFFFFF;=0A=
	border-collapse: collapse;=0A=
}=0A=
.demoTable td {=0A=
	padding-left:15px;=0A=
	border:none;=0A=
	vertical-align:bottom;=0A=
}=0A=
.tableWrap {=0A=
	-moz-box-shadow:    3px 3px 5px 6px #ccc;=0A=
	-webkit-box-shadow: 3px 3px 5px 6px #ccc;=0A=
	box-shadow:         3px 3px 5px 6px #ccc;=0A=
}=0A=
</STYLE>

<META name=3D"GENERATOR" content=3D"MSHTML 9.00.8112.16457"></HEAD>
<BODY onload=3D"prettyPrint()">
<DIV class=3D"bodyContainer"> <IMG =
src=3D"http://decorplanit.com/plugin/image/autoNumeric.png"=20
width=3D"925" height=3D"150">
<DIV class=3D"mainContainer">
<P style=3D"margin-top: 0px;"><STRONG>autoNumeric 1.8.1</STRONG> is a =
jQuery=20
plugin that automatically formats currency and numbers as you type on =
form=20
inputs. It supports most International numeric formats and currency =
signs=20
including those used in Europe, North and South America, Asia and India=20
(lakhs**). </P>
<P>Any number of currency formats can reside on the same page and are =
configured=20
by options that can be placed as HTML5 data attribu te or passed as an =
argument.=20
These settings can easily be changed at any time using the new =
=E2=80=98update=E2=80=99 method=20
or via the callback feature. utoNumeric to many other elements,  =
allowing you to=20
place formatted numbers and currency on just about any part of the =
page.</P>
<P>Seven  built in methods gives you   the flexibility needed to use =
autoNumeric=20
to its maximum potential. You can now easily start and stop autoNumeric, =
update=20
the settings and remove the formatting from multiple inputs, preparing =
the=20
values for manipulation or form submission.</P>
<P>There are fifteen options which controls the behavior and format of =
the form =20
input field. These options are easy to implement with the data/argument =
code=20
generator located below.</P>
<P>If you are developing sites that span across International lines that =
use=20
different currency symbols and formats you will find autoNumeric() the =
ideal=20
tool to shorten your development time. </P>
<DIV style=3D"margin-top: 5px; float: right;">
<FORM style=3D"display: inline;" method=3D"post" =
action=3D"https://www.paypal.com/cgi-bin/webscr"><INPUT=20
name=3D"cmd" value=3D"_s-xclick" type=3D"hidden"><INPUT =
name=3D"hosted_button_id" value=3D"NCW5699RY8NN2"=20
type=3D"hidden"><INPUT border=3D"0" name=3D"submit" alt=3D"PayPal - The =
safer, easier way to pay online!"=20
src=3D"https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif"=20
type=3D"image"><IMG style=3D"display: inline;" border=3D"0" =
alt=3D"PayPal" =
src=3D"https://www.paypalobjects.com/en_US/i/scr/pixel.gif"=20
width=3D"1" height=3D"1"></FORM>
<P style=3D"margin: 0px; line-height: 2;">Donations allow me to keep<BR> =
      =20
hosting &amp; updating autoNumeric() </P></DIV>
<P>Authors:</P>
<UL>
  <LI>Robert Knothe       =20
  <UL>
    <LI>Contact  - bob{@}decorplanit.com (remove brackets)</LI>
    <LI>github - coming soon</LI></UL></LI>
  <LI>Sokolov Yura- aka funny_falcon</LI></UL><BR>
<P style=3D"font-size: 14px; margin-bottom: =
0px;">Download:&nbsp;<STRONG><A =
href=3D"http://decorplanit.com/plugin/autoNumeric-1.8.1.js.txt">autoNumer=
ic-1.8.1.js</A></STRONG>&nbsp;'heavy=20
on comments'</P>
<P style=3D"margin-top: 0px;">Last update: 2013-1-17 GMT 10:30 =
PM</P><BR>
<P><STRONG>Demonstration of autoNumeric()'s flexibility</STRONG></P>
<DIV class=3D"tableWrap">
<FORM method=3D"post" name=3D"demoForm" action=3D"">
<TABLE class=3D"demoTable" width=3D"100%">
  <TBODY>
  <TR style=3D"height: 60px;">
    <TD colSpan=3D"3">The following three inputs show various formatts =
and=20
      currency signs.</TD></TR>
  <TR style=3D"height: 60px;">
    <TD width=3D"30%">Euro- Germany<BR><INPUT id=3D"demoEuro" =
class=3D"demo" name=3D"demoEuro"=20
      type=3D"text" data-a-sep=3D"." data-a-dec=3D"," =
data-a-sign=3D"=E2=82=AC "></TD>
    <TD style=3D"border: currentColor;" width=3D"30%">Franc - =
Swiss<BR><INPUT id=3D"demoFranc"=20
      class=3D"demo" name=3D"demoFranc" type=3D"text" data-a-sep=3D"'" =
data-a-sign=3D" CHF"=20
      data-p-sign=3D"s"></TD>
    <TD width=3D"40%">India's Lakh number format<BR><INPUT =
id=3D"demoLakh" class=3D"demo"=20
      name=3D"demoLakh" type=3D"text" data-a-sign=3D"Rs. " =
data-d-group=3D"2"></TD></TR>
  <TR style=3D"height: 60px;">
    <TD colSpan=3D"3">These three show  min/max levels, per-cent sign =
brackets=20
      on negitive value.</TD></TR>
  <TR style=3D"height: 60px;">
    <TD width=3D"30%">Min/Max values (-10000 to 10000)<BR><INPUT =
id=3D"demoMinMax"=20
      class=3D"demo" name=3D"demoMinMax" value=3D"-9999" type=3D"text" =
data-v-max=3D"10000"=20
      data-v-min=3D"-10000"></TD>
    <TD width=3D"30%">Percentage sign<BR><INPUT id=3D"demoPercentage" =
class=3D"demo"=20
      name=3D"demoPercentage" type=3D"text" data-a-sign=3D" %" =
data-p-sign=3D"s"></TD>
    <TD width=3D"40%">Brackets when negative &amp; no focus<BR><INPUT =
id=3D"demoBracket"=20
      class=3D"demo" name=3D"demoBracket" value=3D"-9999.99" =
type=3D"text" data-v-min=3D"-9999999999.99"=20
      data-n-bracket=3D"()"></TD></TR>
  <TR style=3D"height: 75px;">
    <TD colSpan=3D"3">The example below demonstrates  the 'get' and =
'set'=20
      methods. Type in the first input field and the other two fields =
will be=20
      updated on the "blur", "focusout", "keypress" and "keyup" =
events.</TD></TR>
  <TR style=3D"height: 60px;">
    <TD width=3D"30%">Enter here:<BR><INPUT id=3D"demoDefaults" =
class=3D"demo" name=3D"demoDefaults"=20
      type=3D"text"></TD>
    <TD width=3D"30%">$(selector).autoNumeric('get');<BR><INPUT =
id=3D"demoGet"=20
      name=3D"demoGet" readOnly=3D"" type=3D"text"></TD>
    <TD width=3D"40%">$(selector).autoNumeric('set', value);<BR><INPUT =
id=3D"demoSet"=20
      class=3D"demo" name=3D"demoSet" readOnly=3D"" =
type=3D"text"></TD></TR>
  <TR style=3D"height: 75px;">
    <TD colSpan=3D"3">autoNumeric now supports many non-input elements =
allowing=20
      you to place formatted strings  where  jQuery's ".text()" method =
is=20
      supported. This can be done on page ready or placed at anytime via =
the=20
      "set" method.</TD></TR>
  <TR style=3D"height: 85px;">
    <TD width=3D"30%"><SPAN>&lt;p&gt; &amp; &lt;span&gt;=20
      tags</SPAN><BR><BR><SPAN class=3D"demo" data-a-sign=3D"=C2=A5 "=20
      data-d-group=3D"2">1234567.89</SPAN></TD>
    <TD width=3D"30%">&lt;label&gt; tags<BR><BR><LABEL class=3D"demo" =
for=3D"demoTest">12345.78</LABEL>=20
                   &nbsp;              <INPUT id=3D"demoCheckBox" =
name=3D"demoCheckBox"=20
      type=3D"checkbox"></TD>
    <TD style=3D"border: currentColor;" width=3D"40%">
      <TABLE class=3D"tableSample" width=3D"210">
        <TBODY>
        <TR>
          <TD>&lt;th&gt; &amp; &lt;td&gt; table tags</TD></TR>
        <TR>
          <TD class=3D"demo" data-a-sep=3D"." data-a-dec=3D","=20
            data-a-sign=3D"=E2=82=AC =
">1234.56</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD width=3D"30%">&nbsp;</TD>
    <TD width=3D"30%">&nbsp;</TD>
    <TD width=3D"40%">&nbsp;</TD></TR></TBODY></TABLE></FORM></DIV>
<P style=3D"margin-top: 30px;" id=3D"testTag"><STRONG>Key features of=20
autoNumeric()</STRONG></P>
<UL>
  <LI> Compatible with jQuery-1.7.2 and higher. </LI>
  <LI> Supports multiple international numeric formats including those =
used   in=20
  most of Europe, North and South America, Asia and India  (lakhs on =
values=20
  below 1 billion). </LI>
  <LI> Most currency symbols are supported and can be placed as a prefix =
or=20
  suffix in the input field. </LI>
  <LI>Precision control of minimum &amp; maximum values  to the =
n<SUP>th</SUP>=20
  decimal places! </LI>
  <LI> The number of decimal places and negative sign are now set via =
the=20
  min/max values. Also positive and negative values are easily toggled =
from any=20
  caret position within the input field.</LI>
  <LI> Supports nine different rounding methods  (Round-Half-Up =
Symmetric  =20
  &amp; Asymmetric, Round-Half-Down Symmetrical &amp; Asymmetric,  =20
  Round-Half-Even "Bankers Rounding", Round Up, Round Down, Round to   =
Ceiling=20
  &amp; Round to Floor). </LI>
  <LI> Callback function is supported and can be done via options or =
HTML5 data.=20
  </LI>
  <LI> <SPAN style=3D"color: rgb(255, 0, 0);">NEW</SPAN> - Added 7 =
methods for=20
  greater control.</LI>
  <LI> <SPAN style=3D"color: rgb(255, 0, 0);">NEW</SPAN> - Added  HTML 5 =
data=20
  support and eliminated the metadata plugin dependency.</LI>
  <LI><SPAN style=3D"color: rgb(255, 0, 0);">NEW</SPAN> - autoNumeric =
can be=20
  attached to the following elements: 'dd', 'dt', 'h1', 'h2', 'h3', =
'h4', 'h5',=20
  'h6', 'input', 'label', 'p', 'span', 'td', 'th'.</LI>
  <LI><SPAN style=3D"color: rgb(255, 0, 0);">NEW</SPAN> - Added 'lZero' =
to the=20
  defaults which controls the leading zero behavior.</LI>
  <LI><SPAN style=3D"color: rgb(255, 0, 0);">NEW</SPAN> - Added =
'nBracket' to=20
  settings - controls negative numbers being shown with brackets. =
Example=20
  "-$99.00 =3D ($99.00)". The brackets are only visible when the input =
field does=20
  NOT have focus.</LI>
  <LI> Pasting is supported as long as the values being pasted conform =
to the=20
  format set for that target field. </LI></UL>
<P><STRONG>Guide on how the balance of this  page is =
organized:</STRONG></P>
<UL>
  <LI>Methods supported by autoNumeric</LI>
  <LI>Settings defaults and options with code generator</LI>
  <LI>Tutorial on implementing  autoNumeric</LI>
  <LI>Callback function details</LI>
  <LI>Methods examples</LI>
  <LI>Options examples</LI>
  <LI>Supported Browsers</LI>
  <LI>Known issues</LI>
  <LI>Change notes &amp; History log</LI></UL><A =
id=3D"methodAnchor"></A>
<P><STRONG>Deploying  autoNumeric can be accomplished in  just a few=20
steps.</STRONG> The   methods listed below gives you the ability to =
start, stop=20
and update options of autoNumeric as well as format or remove the =
formatting=20
from input fields for use in other scripts and or  form submissions. =
Click on=20
the links for details and demos on each method.</P>
<DIV class=3D"tableWrap">
<TABLE class=3D"mainTable" width=3D"874">
  <TBODY>
  <TR style=3D"background-color: rgb(153, 153, 153);">
    <TD width=3D"90"><STRONG>Method(s)</STRONG></TD>
    <TD width=3D"385"><STRONG>Description</STRONG></TD>
    <TD><STRONG>Format</STRONG></TD></TR>
  <TR>
    <TD width=3D"90"><A=20
      href=3D"http://decorplanit.com/plugin/#initAnchor">'init'</A></TD>
    <TD width=3D"385">initializes autoNumeric</TD>
    <TD>$(selector).autoNumeric('init', {options});</TD></TR>
  <TR>
    <TD width=3D"90"><A=20
      =
href=3D"http://decorplanit.com/plugin/#destroyAnchor">'destroy'</A></TD>
    <TD width=3D"385">disables autoNumeric for the selected element =
</TD>
    <TD>$(selector).autoNumeric('destroy');</TD></TR>
  <TR>
    <TD width=3D"90"><A=20
      =
href=3D"http://decorplanit.com/plugin/#updateAnchor">'update'</A></TD>
    <TD width=3D"385">updates options - can be called multiple =
times</TD>
    <TD>$(selector).autoNumeric('update', {options});</TD></TR>
  <TR>
    <TD width=3D"90"><A=20
    href=3D"http://decorplanit.com/plugin/#setAnchor">'set'</A></TD>
    <TD width=3D"385">returns a formatted string via ".val()" or =
".text'</TD>
    <TD>$(selector).autoNumeric('set', value);</TD></TR>
  <TR>
    <TD width=3D"90"><A=20
    href=3D"http://decorplanit.com/plugin/#getAnchor">'get'</A></TD>
    <TD width=3D"385">returns un-formatted object  via ".val()" or =
".text()"</TD>
    <TD>$(selector).autoNumeric('get');</TD></TR>
  <TR>
    <TD width=3D"90"><A=20
      =
href=3D"http://decorplanit.com/plugin/#getStringAnchor">'getString'</A></=
TD>
    <TD width=3D"385">returns a string 'URL encoded' from the selected =
form</TD>
    <TD>$(selector).autoNumeric('getString');</TD></TR>
  <TR>
    <TD width=3D"90"><A=20
      =
href=3D"http://decorplanit.com/plugin/#getArrayAnchor">'getArray'</A></TD=
>
    <TD width=3D"385">returns a array of objects from the selected =
form</TD>
    <TD>$(selector).autoNumeric('getArray');</TD></TR>
  <TR>
    <TD width=3D"90"><A=20
      =
href=3D"http://decorplanit.com/plugin/#getSettingsAnchor">'getSettings'</=
A></TD>
    <TD width=3D"385">returns  settings for the selected element</TD>
    =
<TD>$(selector).autoNumeric('getSettings');</TD></TR></TBODY></TABLE></DI=
V><BR>
<P><STRONG>Configuring autoNumeric settings</STRONG>: The are a total of =
15 =20
settings/options that control the format and the behavior of the input =
field.=20
For your convenience I have created a HTML5 data and option code =
generator - all=20
you need to do is select the desired option and the code will be shown =
at the=20
bottom for you to copy and paste into the appropriate document.    =
<BR></P>
<DIV class=3D"tableWrap">
<FORM id=3D"CodeGenerator" method=3D"post">
<TABLE class=3D"mainTable" width=3D"874">
  <TBODY>
  <TR style=3D"background-color: rgb(153, 153, 153);">
    <TD style=3D"text-align: left;" colSpan=3D"2" =
align=3D"center"><STRONG>Settings=20
      - </STRONG>name and value</TD>
    <TD><STRONG>Discription</STRONG></TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>aSep</STRONG> - controls the thousand separator (note - =
 the=20
      thousand &amp; decimal separators can not be the =
same)</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aSepDefault" =
class=3D"md" name=3D"aSep"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170">aSep: ',' </TD>
    <TD> comma (<STRONG>default</STRONG>)</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aSepApostrophe" =
class=3D"md" name=3D"aSep"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">aSep: '\''</TD>
    <TD> apostrophe (note: the apostrophe is escaped)</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aSepPeriod" =
class=3D"md" name=3D"aSep"=20
      value=3D"2" type=3D"radio"></TD>
    <TD width=3D"170">aSep: '.'</TD>
    <TD> period</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aSepSpace" =
class=3D"md" name=3D"aSep"=20
      value=3D"3" type=3D"radio"></TD>
    <TD width=3D"170">aSep: ' '</TD>
    <TD> space</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aSepNone" =
class=3D"md" name=3D"aSep"=20
      value=3D"4" type=3D"radio"></TD>
    <TD width=3D"170">aSep: ''</TD>
    <TD> none</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>dGroup</STRONG> - controls the digital grouping - the =
placement=20
      of the thousand separator</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"dGroupDefault" =
class=3D"md" name=3D"dGroup"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170"><SPAN style=3D"vertical-align: top;">dGroup: =
'3'</SPAN></TD>
    <TD><SPAN style=3D"vertical-align: top;">&nbsp;produces 333,333,333  =

      (<STRONG>default</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"dGroup2" class=3D"md" =
name=3D"dGroup"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">dGroup: '2'</TD>
    <TD>&nbsp;produces 22,22,22,333 (India's  lakhs format on values =
below 1=20
      billion)</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"adGroup4" =
class=3D"md" name=3D"dGroup"=20
      value=3D"2" type=3D"radio"></TD>
    <TD width=3D"170">dGroup: '4'</TD>
    <TD>&nbsp;produces 4,4444,4444 used in some Asian =
country's</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>aDec</STRONG> - controls the decimal (note -  the =
thousand=20
      &amp; decimal separators can not be the same)</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aDecDefault" =
class=3D"md" name=3D"aDec"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170">aDec: '.' </TD>
    <TD> period (<STRONG>default</STRONG>) </TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aDecComma" =
class=3D"md" name=3D"aDec"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">aDec: ','</TD>
    <TD> comma </TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>altDec</STRONG> - This was developed to accommodate =
different=20
      keyboard layouts. altDec allows you to declare an alternative key =
to enter=20
      the decimal separator  assigned in aDec.   Word of caution - use =
with=20
      discretion because it has the potential of being very confusing to =
your=20
      users.</P>
      <P>Please note that the full stop on the numeric pad will enter =
the=20
      decimal separator even when the comma is assigned as the decimal =
separator=20
      (aDec: ',').</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"altDecDefault" =
class=3D"md" name=3D"altDec"=20
      value=3D"" type=3D"radio"></TD>
    <TD width=3D"170"><SPAN style=3D"vertical-align: top;">altDec: null=20
      &nbsp;</SPAN></TD>
    <TD><SPAN=20
      style=3D"vertical-align: =
top;">&nbsp;(<STRONG>default</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"altDecUserDefined" =
class=3D"md"=20
      name=3D"altDec" type=3D"radio"></TD>
    <TD width=3D"170"><INPUT style=3D"text-align: left;" =
id=3D"altDecInput" class=3D"get md"=20
      maxLength=3D"1" size=3D"8" type=3D"text"></TD>
    <TD>&nbsp;limited to one non-numeric character. Do not add quote=20
  marks.</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>aSign </STRONG>- desired currency symbol (examples:  =
=E2=82=AC or =20
      EUR). Note: other symbols can be used, such as %, =C2=B0C, =
=C2=B0F, km/h &amp; MPH=20
      the possibilities are endless.</P>
      <UL>
        <LI>Note: the currency symbol <STRONG>cannot</STRONG> contain an =
<SPAN=20
        style=3D"text-decoration: underline;">apostrophe</SPAN>, <SPAN =
style=3D"text-decoration: underline;">comma</SPAN>=20
        or <SPAN style=3D"text-decoration: underline;">numeric =
character</SPAN>.=20
        </LI>
        <LI>Note: Some  currency symbols that are not supported by =
common fonts=20
        (Arial &amp; Tahoma) - I have put together a table you may find =
useful=20
        (<A href=3D"http://decorplanit.com/plugin/symbols.htm">Click =
here to=20
        view</A>) of the symbols that are supported by the =
aforementioned=20
        fonts.</LI>
        <LI>Note:  Spacing between the currency symbol and numeric =
characters=20
        are set using the aSign option. Example no spacing '$' and with =
spacing=20
        '$ ' or ' $' depending on the location (prefix or suffix) of the =

        symbol.</LI></UL></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aSignDefault" =
class=3D"md" name=3D"aSign"=20
      type=3D"radio"></TD>
    <TD width=3D"170"><SPAN style=3D"vertical-align: top;">aSign: =
''</SPAN></TD>
    <TD><SPAN style=3D"vertical-align: top;"> none=20
      (<STRONG>default</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aSignUserDefined" =
class=3D"md"=20
      name=3D"aSign" type=3D"radio"></TD>
    <TD width=3D"170"><INPUT style=3D"text-align: left;" =
id=3D"aSignInput" class=3D"get md"=20
      size=3D"8" type=3D"text"></TD>
    <TD> enter the desired symbol. Do not add quote marks, they are=20
      automatically added.</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>pSign</STRONG> - controls the placement of the currency =

      symbol.</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"pSignDefault" =
class=3D"md" name=3D"pSign"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170"><SPAN style=3D"vertical-align: top;">pSign: =
'p'</SPAN></TD>
    <TD><SPAN style=3D"vertical-align: top;"> prefix to the left=20
      (<STRONG>default</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"pSignSuffix" =
class=3D"md" name=3D"pSign"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170"><SPAN style=3D"vertical-align: top;">pSign: =
's'</SPAN></TD>
    <TD> suffix to the right</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>Notes on the minimum (vMin) / maximum (vMax)=20
      values:</STRONG></P>
      <UL>
        <LI>The maximum value should always be greater than the minimum =
value -=20
        sorry I had to list this rule!</LI>
        <LI>If the minimum / maximum values are both positive or =
negative you=20
        MUST have a default value assigned to the field that is greater =
than or=20
        equal to  the minimum value and less than or equal to  the =
maximum=20
        value.</LI>
        <LI><STRONG>IMPORTANT</STRONG> - please understand that  vMin =
&amp; vMax=20
        settings are limits. Meaning the user cannot enter a value =
greater than=20
        the vMax value and cannot enter or delete a value below the vMin =

        setting. When setting the vMin &amp; vMax values to both =
positive or=20
        negative you could create a paradoxical situation which limits =
the user=20
        ability to enter values. Consider the following:                 =
  =20
        <UL>
          <LI>vMin:'5' &amp; vMax:'10' - you can never enter the number =
10.=20
</LI>
          <LI>vMin:'10' &amp; vMax:'100' and no default value - you can =
never=20
          enter any value.</LI>
          <LI>vMin:'0.01' &amp; vMax:'9.99' and no default value - you =
can not=20
          start to enter number less than 1.</LI>
          <LI>vMin:'0.00' &amp; vMax:'-9.99' and no default value - you =
can not=20
          enter any value.</LI>
          <LI>To avoid many of these scenarios I recommend that you  set =
vMin or=20
          vMax to "0" and validate later.</LI></UL></LI>
        <LI>The number of decimal places is determined from the minimum =
/=20
        maximum values - whichever has value has the greater number of =
decimal=20
        places.</LI>
        <LI>The values can contain only numeric characters and one =
decimal (full=20
        stop) character. This metadata code generator automatically =
places quote=20
        marks on the value. If you manually write the metadata code =
these quote=20
        marks are required.</LI>
        <LI>The limits of the code generator are 10 significant digits =
and 5=20
        decimal places - if your requirements exceed these limits you =
will need=20
        to manually adjust the  values.</LI></UL></TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>vMin </STRONG>- Enter the minimum value allowed. Values =
can be=20
      whole numbers, floating point, positive, zero or =
negative.</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"vMinDefault" =
class=3D"md" name=3D"vMin"=20
      type=3D"radio"></TD>
    <TD width=3D"170"><SPAN style=3D"vertical-align: top;">vMin: =
'0.00'</SPAN></TD>
    <TD><SPAN style=3D"vertical-align: top;">=20
    (<STRONG>default</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"vMinUserDefined" =
class=3D"md" name=3D"vMin"=20
      value=3D"x" type=3D"radio"></TD>
    <TD style=3D"padding: 0px;" width=3D"170"><INPUT =
style=3D"text-align: left;" id=3D"vMinInput"=20
      class=3D"auto md" size=3D"20" type=3D"text" data-a-sep=3D"" =
data-v-max=3D"9999999999.99999"=20
      data-v-min=3D"-99999999999.99999" data-a-pad=3D"false"></TD>
    <TD>select the option then enter the desired value to the =
left.</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>vMax </STRONG>- Enter the maximum value allowed. Values =
can be=20
      whole numbers, floating point, positive, zero or =
negative.</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"vMaxDefault" =
class=3D"md" name=3D"vMax"=20
      type=3D"radio"></TD>
    <TD style=3D"padding-right: 0px;" width=3D"170"><SPAN =
style=3D"vertical-align: top;">vMax:=20
      '999999999.99'</SPAN></TD>
    <TD><SPAN=20
  style=3D"vertical-align: =
top;">(<STRONG>default</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"vMaxUserDefined" =
class=3D"md" name=3D"vMax"=20
      value=3D"x" type=3D"radio"></TD>
    <TD style=3D"padding: 0px;" width=3D"170"><INPUT =
style=3D"text-align: left;" id=3D"vMaxInput"=20
      class=3D"auto md" size=3D"20" type=3D"text" data-a-sep=3D"" =
data-v-max=3D"9999999999.99999"=20
      data-v-min=3D"-99999999999.99999" data-a-pad=3D"false"></TD>
    <TD>select the option then enter the desired value to the =
left.</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>mDec </STRONG>- Only needed if you want to override the =
number=20
      of decimal places that are set by the vMin &amp; vMax =
values.</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mDecDefault" =
class=3D"md" name=3D"mDec"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170"><SPAN style=3D"vertical-align: top;">mDec: =
null</SPAN></TD>
    <TD><SPAN style=3D"vertical-align: top;">decimal places set via vMin =
&amp;=20
      vMax values (<STRONG>default method</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mDecUserDefined" =
class=3D"md" name=3D"mDec"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170"><INPUT style=3D"text-align: left;" =
id=3D"mDecInput" class=3D"auto md"=20
      size=3D"10" type=3D"text" data-v-max=3D"99" data-v-min=3D"0"></TD>
    <TD>enter the  number of decimal places - this will over ides values =
set=20
      by vMin &amp; vMax</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG><A id=3D"mRoundCode" =
href=3D"http://decorplanit.com/plugin/#mRoundExample">mRound</A></STRONG>=
=20
      - controls the rounding method. To test the various rounding =
methods=20
      please see below. For in depth details on rounding methods visit =
the <A=20
      href=3D"http://www.diycalculator.com/popup-m-round.shtml"=20
      target=3D"_blank">DIY     Calculator</A> site.</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mRoundDefault" =
class=3D"md" name=3D"mRound"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 'S'</TD>
    <TD>Round-Half-Up Symmetric  (<STRONG>default</STRONG>)</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mRoundA" class=3D"md" =
name=3D"mRound"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 'A'</TD>
    <TD>Round-Half-Up Asymmetric</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mRounds" class=3D"md" =
name=3D"mRound"=20
      value=3D"2" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 's'</TD>
    <TD> Round-Half-Down Symmetric (lower case s)</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mRounda" class=3D"md" =
name=3D"mRound"=20
      value=3D"3" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 'a'</TD>
    <TD> Round-Half-Down Asymmetric (lower case a)</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mRoundB" class=3D"md" =
name=3D"mRound"=20
      value=3D"4" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 'B'</TD>
    <TD> Round-Half-Even "Bankers Rounding"</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"amRoundU" =
class=3D"md" name=3D"mRound"=20
      value=3D"5" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 'U'</TD>
    <TD> Round Up "Round-Away-From-Zero"</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mRoundD" class=3D"md" =
name=3D"mRound"=20
      value=3D"6" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 'D'</TD>
    <TD> Round Down "Round-Toward-Zero" - same as truncate</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mRoundC" class=3D"md" =
name=3D"mRound"=20
      value=3D"7" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 'C'</TD>
    <TD><SPAN style=3D"vertical-align: top;"> Round to Ceiling "Toward =
Positive=20
      Infinity"</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"mRoundF" class=3D"md" =
name=3D"mRound"=20
      value=3D"8" type=3D"radio"></TD>
    <TD width=3D"170">mRound: 'F'</TD>
    <TD> Round to Floor "Toward Negative Infinity"</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>aPad</STRONG> - controls padding of the decimal=20
  places.</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aPadDefault" =
class=3D"md" name=3D"aPad"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170">aPad: true</TD>
    <TD> always pads the decimal with zeros =
(<STRONG>default</STRONG>)</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aPadFalse" =
class=3D"md" name=3D"aPad"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">aPad: false</TD>
    <TD> no padding - rounding occurs when the decimal length exceeds =
the=20
      decimal places</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG><A id=3D"nBracketCode" =
href=3D"http://decorplanit.com/plugin/#nBracketExample">nBracket</A></STR=
ONG>=20
      - Controls if negative values are display with brackets when the =
input=20
      does NOT have focus.</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"nBracketDefault" =
class=3D"md" name=3D"nBracket"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170">nBracket:null</TD>
    <TD><SPAN style=3D"vertical-align: top;"> no brackets use for =
negative=20
      values (<STRONG>default</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"nBracketParentheses" =
class=3D"md"=20
      name=3D"nBracket" value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">nBracket: '()'</TD>
    <TD>Parentheses visable on 'focusout'</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG>wEmpty</STRONG> - controls input display =
behavior.</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"wEmptyDefault" =
class=3D"md" name=3D"wEmpty"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170">wEmpty: 'empty'</TD>
    <TD> allows input to be empty (no value) =
(<STRONG>default</STRONG>)</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"wEmptyZero" =
class=3D"md" name=3D"wEmpty"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">wEmpty: 'zero'</TD>
    <TD> input field will have at least a zero value</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"wEmptySign" =
class=3D"md" name=3D"wEmpty"=20
      value=3D"2" type=3D"radio"></TD>
    <TD width=3D"170">wEmpty: 'sign'</TD>
    <TD> the currency symbol is always present</TD></TR>
  <TR>
    <TD colSpan=3D"3">
      <P><STRONG><A id=3D"lZeroCode" =
href=3D"http://decorplanit.com/plugin/#lZeroExample">lZero</A></STRONG>=20
      - Controls if leading zeros are allowed</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"lZeroDefault" =
class=3D"md" name=3D"lZero"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170">lZero: 'allow'</TD>
    <TD> allows leading zero to be entered. They are removed on focusout =
event=20
      <SPAN style=3D"vertical-align: =
top;">(<STRONG>default</STRONG>)</SPAN></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"lZeroDeny" =
class=3D"md" name=3D"lZero"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">lZero: 'deny'</TD>
    <TD> leading zeros not allowed.</TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"lZeroKeep" =
class=3D"md" name=3D"lZero"=20
      value=3D"2" type=3D"radio"></TD>
    <TD width=3D"170">lZero: 'keep'</TD>
    <TD> leading zeros allowed and will be retained on the focusout=20
event</TD></TR>
  <TR>
    <TD height=3D"50" vAlign=3D"bottom" colSpan=3D"3">
      <P><STRONG>aForm</STRONG>- Controls if default values are =
formatted on=20
      page ready (load)</P></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aFormDefault" =
class=3D"md" name=3D"aForm"=20
      value=3D"0" type=3D"radio"></TD>
    <TD width=3D"170">aForm: true</TD>
    <TD> default values are formatted on page ready=20
    <STRONG>(default)</STRONG></TD></TR>
  <TR>
    <TD width=3D"40" align=3D"center"><INPUT id=3D"aFormFalse" =
class=3D"md" name=3D"aForm"=20
      value=3D"1" type=3D"radio"></TD>
    <TD width=3D"170">aForm: false</TD>
    <TD> default values are NOT formatted on page=20
ready</TD></TR></TBODY></TABLE><BR><INPUT style=3D"margin-left: 14px;" =
id=3D"rd" value=3D"Reset defaults" type=3D"reset">
<DIV style=3D"height: 90px; padding-left: 15px;">
<P>The options and data codes will appear in Red - copy and paste  as=20
needed.</P>
<P style=3D"color: rgb(255, 0, 0); font-size: 12px;"><SPAN=20
id=3D"optionCode"></SPAN>&nbsp;</P>
<P style=3D"color: rgb(255, 0, 0); font-size: 12px;"><SPAN=20
id=3D"dataCode"></SPAN>&nbsp;</P></DIV><BR></FORM></DIV><BR><BR><A =
id=3D"tutorial"=20
href=3D"http://decorplanit.com/plugin/#nav">back</A><BR>
<DIV class=3D"subContainer">
<P><STRONG>The basics on getting autoNumeric() up and running with the=20
initialize 'init' method and default settings</STRONG>:</P>
<P><STRONG>First&nbsp;</STRONG>- include  jQuery.js and  =
autoNumeric-1.8.0.js=20
javascript files in the header.</P><PRE class=3D"prettyprint lang-html"> =
     =0A=
  &lt;script src=3D"http://code.jquery.com/jquery-latest.min.js" =
type=3D"text/javascript"&gt; &lt;/script&gt;=0A=
  &lt;script src=3D"autoNumeric-1.8.0.js" type=3Dtext/javascript&gt; =
&lt;/script&gt;=0A=
  </PRE><BR>
<P><STRONG>Second</STRONG> - insert a form and input field on the HTML=20
document.</P>
<UL>
  <LI>The input type attribute must equal text "&lt;input=20
  type=3D"text"&gt;".&nbsp;<STRONG>Other input types are NOT supported =
including=20
  HTML 5 number type.</STRONG></LI></UL><PRE class=3D"prettyprint =
lang-html">      =0A=
  &lt;!-- input field with no HTML 5 data options --&gt;=0A=
  &lt;form&gt;=0A=
  &lt;input type=3D"text" id=3D"someID_defaults"&gt;=0A=
  &lt;/form&gt;=0A=
  </PRE><BR>
<P><STRONG>Third</STRONG> - in a separate script initialize autoNumeric=20
$('selector').autoNumeric('init').</P>
<UL>
  <LI>Selector&nbsp;- is any valid jQuery selector</LI></UL><PRE =
class=3D"prettyprint lang-js">      =0A=
  // this example uses the id selector &amp; no options passed    =0A=
  jQuery(function($) {=0A=
      $('#someID_defaults').autoNumeric('init');    =0A=
  });=0A=
  </PRE><BR>
<P><STRONG>Finished - an  input field with autoNumeric default settings. =

</STRONG>Now  add CSS styling if desired and  test the results. </P>
<FORM method=3D"post" action=3D""><INPUT style=3D"text-align: right;" =
id=3D"someID_defaults"=20
type=3D"text"></FORM>
<P><STRONG>Changing  autoNumeric's default settings using HTML5 data =
attributes=20
or options is just as easy!</STRONG> First a couple notes prior to =
proceeding=20
with the examples.</P>
<UL>
  <LI>The loading order for autoNumeric settings is defaults, HTML5 data =
and=20
  then Options. Where defaults are overridden by the HTML5 data and =
options=20
  overrides both the defaults and HTML5 data.</LI>
  <LI>Understand that different formats are used for  HTML5 data =
attribute and=20
  options. Let say you want to change the decimal point from "." period =
to a ","=20
  comma and  change  the thousand separator from a "," comma to a "." =
period.   =20
     =20
  <UL>
    <LI>Options example:  $('#someID').autoNumeric('init', {aSep: '.', =
aDec:=20
    ','}); - options are written in "camelCase notation" which is =
identically to=20
    that of the settings defaults. A colon is used to separate the name =
of the=20
    option and the value which should be enclosed with quotes. If =
multiple=20
    options are being sent they should be separated by a comma. All =
options need=20
    to be enclosed braces (curly brackets).</LI>
    <LI>HTML5 data example: &lt;input type=3D"text" id=3D"someID" =
data-a-dec=3D","=20
    data-a-sep=3D","&gt;. By convention the data attribute is written in =

    lowercase. Compound words (example: "aDec") need to be split and =
separated=20
    by a dash. The equal sign separates the name and value. The value =
should be=20
    enclosed with quote marks. If multiple options are being used they =
each need=20
    to have the own data attribute.</LI>
    <LI>Do not worry - I have created a <A =
href=3D"http://decorplanit.com/plugin/#codeGenerator">option/HTML5=20
    code generator</A> below that you just copy and =
paste.</LI></UL></LI></UL>
<P><STRONG>First&nbsp;</STRONG>- include  jQuery.js and  =
autoNumeric-1.8.0.js=20
javascript files in the header.</P><PRE class=3D"prettyprint lang-html"> =
     =0A=
  &lt;script src=3D"http://code.jquery.com/jquery-latest.min.js" =
type=3D"text/javascript"&gt; &lt;/script&gt;=0A=
  &lt;script src=3D"autoNumeric-1.8.0.js" type=3Dtext/javascript&gt; =
&lt;/script&gt;=0A=
    </PRE><BR>
<P><STRONG>Second</STRONG> - insert a form and input field on the HTML =
page with=20
the desired HTML5 data.</P><PRE class=3D"prettyprint lang-html">      =0A=
  &lt;!-- input field with  HTML 5 data for the German Euro --&gt;=0A=
  &lt;form&gt;=0A=
  &lt;input type=3D"text" id=3D"someID_HTML5" data-a-sign=3D"=E2=82=AC " =
data-a-dec=3D"," data-a-sep=3D"."&gt;=0A=
  &lt;/form&gt;=0A=
    </PRE><BR>
<P><STRONG>Third</STRONG> - in a separate script initialize autoNumeric=20
$('selector').autoNumeric('init');</P><PRE class=3D"prettyprint =
lang-js">      =0A=
  // this example uses the id selector &amp; no options passed    =0A=
  jQuery(function($) {=0A=
      $('#someID_HTML5').autoNumeric('init');    =0A=
  });=0A=
    </PRE><BR>
<P><STRONG>Completed</STRONG> - an input field with HTML5 data being =
passed to=20
autoNumeric. </P>
<FORM method=3D"post" action=3D""><INPUT style=3D"text-align: right;" =
id=3D"someID_HTML5"=20
type=3D"text" data-a-sep=3D"." data-a-dec=3D"," data-a-sign=3D"=E2=82=AC =
"></FORM><BR>
<P><STRONG>This example uses both HTML5 data and options. </STRONG></P>
<P><STRONG>First - </STRONG>repeat step 1 in the previous examples.</P>
<P><STRONG>Second</STRONG> - repeat step 2 and insert a form and input =
field on=20
the HTML page with the same  HTML5 data.</P>
<P><STRONG>Third - </STRONG>initialize autoNumeric with options being =
passed.=20
Please note that setting "aSign" was passed </P><PRE =
class=3D"prettyprint lang-js">      =0A=
  // this shows options being passed - details on allowed options are =
below=0A=
  jQuery(function($) {=0A=
      $('#someID_options').autoNumeric('init', {aSign:' EUR', pSign:'s' =
}); =0A=
  });=0A=
      </PRE><BR>
<P><STRONG>Completed</STRONG> - this demonstrates the options overrides =
both=20
defaults and HTML5 data. </P>
<FORM method=3D"post" action=3D""><INPUT style=3D"text-align: right;" =
id=3D"someID_options"=20
type=3D"text" data-a-sep=3D"." data-a-dec=3D","=20
data-a-sign=3D"=E2=82=AC "></FORM><BR><BR></DIV><BR><A id=3D"callback" =
href=3D"http://decorplanit.com/plugin/#nav">back</A><BR>
<DIV class=3D"subContainer">
<P><STRONG>Callback function</STRONG> - allows the  returned value to be =
taken=20
as parameter to the default/options settings. You can pass the function =
via=20
options or HTML5 data and can be used  on any of the 15 options.</P>
<P>The following shows the the function being passed via options with =
the mDec=20
setting.</P><PRE class=3D"prettyprint lang-js">		=0A=
 &lt;script type=3D"text/javascript"&gt;=0A=
 =0A=
 /* the callback function must be defined prior to initiating =
autoNumeric */ =0A=
 =0A=
 var functionName =3D function(){=0A=
    /* your code here */  =0A=
    var value =3D 4; /* example only */=0A=
    return value; =0A=
 }=0A=
=0A=
 /* initiates autoNumeric and passes a function */	=0A=
																				=0A=
 $('selector').autoNumeric('init', {mDec: functionName})  =0A=
 =0A=
 &lt;/script&gt; =0A=
																				=0A=
    </PRE>
<P>This shows the the function name being passed via HTML5 data with the =
mDec=20
setting.</P><PRE class=3D"prettyprint">		=0A=
 &lt;script type=3D"text/javascript"&gt;=0A=
 =0A=
 /* the callback function must be defined prior to initiating =
autoNumeric */ =0A=
 /* please note that the function is namespaced and defined prior to =
autoNumeric being initiated */ =0A=
 =0A=
 $.fn.autoNumeric.functionName =3D function(){=0A=
    /* your code here */  =0A=
    var value =3D 4; /* example only */=0A=
    return value; =0A=
 }=0A=
=0A=
 /* initiates autoNumeric and passes a function */	=0A=
																				=0A=
 $('selector').autoNumeric('init', {mDec: functionName})  =0A=
 =0A=
 &lt;/script&gt; =0A=
=0A=
=0A=
 &lt;input type=3D"text" data-m-dec=3D"functionName"/&gt;																=
				=0A=
    </PRE></DIV><BR><A=20
id=3D"initAnchor" =
href=3D"http://decorplanit.com/plugin/#methodAnchor">back</A><BR>
<FORM id=3D"initForm" method=3D"post" name=3D"initForm" action=3D"">
<DIV class=3D"subContainer">
<P><STRONG>'init' method </STRONG><STRONG> - </STRONG>initializes =
autoNumeric=20
and must be run before other methods can be called. </P>
<P><STRONG>The following are valid ways to configure the 'init' =
method</STRONG>.=20
</P>
<UL>
  <LI>$(selector).autoNumeric('init'); <EM>"initialized with defaults=20
  only"</EM></LI>
  <LI>$(selector).autoNumeric(); <EM>"initialized with defaults =
only"</EM></LI>
  <LI>$(selector).autoNumeric('init', {options}); <EM>"initialized with=20
  options"</EM></LI>
  <LI>$(selector).autoNumeric({options}); <EM>"initialized with=20
  options"</EM></LI>
  <LI>$(selector).autoNumeric('init', someOptions); <EM>"options placesd =
as=20
  variable </EM>var someOptions =3D {options}<EM>;"</EM></LI>
  <LI>$(selector).autoNumeric(someOptions); </LI></UL>
<P><STRONG>Note the following</STRONG></P>
<UL>
  <LI>Using <STRONG>'init'</STRONG> is optional on the initialize method =
all=20
  other methods require being declared.</LI>
  <LI>'init' is case sensitive.</LI>
  <LI>The input type attribute must equal text "&lt;input =
type=3D"text"&gt;".=20
  <STRONG>Other input types are NOT supported including HTML 5 number=20
  type.</STRONG></LI>
  <LI>Non-input tags supported ('DD', 'DT', 'H1', 'H2', 'H3', 'H4', =
'H5', 'H6',=20
  'INPUT', 'LABEL', 'P', 'SPAN', 'TD', 'TH').</LI>
  <LI>The input element is the only tag that supports auto formatting as =
you=20
  type.</LI>
  <LI>Any valid selector is supported.</LI></UL>
<P><STRONG>Changing settings (Defaults) with  HTML5 data and / or=20
options</STRONG></P>
<P>To override defaults you  can use either HTML5 data attribute and/or =
options=20
sent as an argument. The below example shows the settings order of =
precedence -=20
default value for aSign =3D '',  data-a-sign =3D "$ " and options =3D =
'=E2=82=AC ',=20
<STRONG>where defaults are overridden by the HTML5 data and options =
overrides=20
both the defaults and HTML5 data.</STRONG></P>
<P>To use the HTML data attribute find the default you want to override =
and=20
place in the input tag using the standard data format. An example for =
changing=20
the currency sign from the default (aSign:'') to the dollar sign =
(data-a-sign=3D"$=20
"). To change multiple defaults you will need to use multiple data =
attributes=20
"&lt;input type=3D"text" data-v-min=3D"-999999999.99"  =20
data-n-bracket=3D"()"&gt;".</P>
<P>HTML data is set as follows: &lt;input type=3D"text" class=3D"auto" =
id=3D"ai1"=20
data-a-sign=3D"$ "&gt;. </P>
<P>Options are sent as an argument in the following ways: </P>
<UL>
  <LI>$(selector).autoNumeric('init', {aSep: '.', aDec: ',', aSign: =
'=E2=82=AC '});</LI>
  <LI>As a variable:</LI>
  <UL>
    <LI>var someOptions =3D   {aSep: '.', aDec: ',', aSign: '=E2=82=AC =
'}; </LI>
    <LI>Then $(selector).autoNumeric('init', someOptions);</LI></UL>
  <LI>You can also create an object and then use jQuery.parseJSON as in =
the=20
  following example</LI>
  <UL>
    <LI>var getDecimal =3D 3;</LI>
    <LI>var getOption =3D $.parseJSON('{"mDec":  "' + getDecimal + =
'"}');</LI>
    <LI>Then $(selector).autoNumeric('init', getOptions); </LI></UL>
  <LI></LI></UL>
<P><STRONG>Default values</STRONG></P>
<P>The option "aForm" controls how default values are handled on page =
ready.=20
When "aForm: true"  is true  the defaults values of  the the supported =
elements=20
that are controlled by autoNumeric are formatted on page ready. When =
"aForm:=20
false" is false the values are not formatted on page ready, but input =
fields=20
will be formatted when they have focus on the first keypress event is =
fired.</P>
<P>So when aForm is set to true "aForm: true"  the defaults value should =
be=20
un-formulated as follows: <BR>          &lt;input type=3D"text"=20
value=3D"99999.99"&gt; or &lt;span&gt;9999.99&lt;/span&gt;. </P>
<P>When aForm is set to false "aForm: False" the defaults values should =
be=20
pre-formatted           as follows:<BR>          &lt;input type=3D"text" =
value=3D"=E2=82=AC=20
99.999,99"&gt;.</P>
<P><STRONG>Demo</STRONG></P>
<OL>
  <LI>This example is initialized on page ready and is loaded with  =
HTML5 data=20
  and options.           =20
  <UL>
    <LI>$('#demoInit').autoNumeric('<STRONG>init</STRONG>', {aSign: =
"=E2=82=AC "});</LI>
    <LI>&lt;input type=3D"text"  id=3D"demoInit" data-a-sign=3D"$ =
"&gt;</LI></UL></LI>
  <LI>Enter any value and see </LI></OL>
<P><INPUT style=3D"width: 160px;" id=3D"demoInit" type=3D"text" =
data-a-sign=3D"$ "></P>
<P><STRONG>Note</STRONG></P>
<UL>
  <LI>Notice that options supercede defaults &amp; HTML5 data</LI></UL>
<P><STRONG>Warning</STRONG></P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the "init" method on a element more =
the once will=20
cause an error message  to be thrown to the javascript console. </P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the "init" method on a element where =
the decimal=20
point "aDec" and the thousand separator "aSep" are equal  will cause an =
error=20
message  to be thrown to the javascript console. </P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'init' methods on a element that =
is not=20
supported by autoNumeric will cause an error message  to be thrown to =
the=20
javascript console. </P></DIV></FORM><A id=3D"destroyAnchor" =
href=3D"http://decorplanit.com/plugin/#methodAnchor">back</A>
<FORM id=3D"destroyForm" method=3D"post" name=3D"destroyForm" =
action=3D"">
<DIV class=3D"subContainer">
<P><STRONG>'destroy' method </STRONG> - removes autoNumeric from the =
selected=20
element(s). </P>
<P><STRONG> Proper format for the 'destroy' method</STRONG>.</P>
<UL>
  <LI>$(selector).autoNumeric('destroy');&nbsp;</LI></UL>
<P><STRONG>Note the following</STRONG></P>
<UL>
  <LI>The method name 'destroy' is required=20
  "$(selector).autoNumeric('destroy');".</LI>
  <LI>'destroy' is case sensitive.</LI>
  <LI>Options  and arguments are NOT accepted.</LI>
  <LI>Existing values are NOT modified or deleted. If you need to remove =
the=20
  formatting you should do so prior to calling the destroy method via =
the 'get'=20
  method described later. </LI>
  <LI>The selected fields or elements can be re-initialized at any =
time.</LI></UL>
<P><STRONG>Demo</STRONG></P>
<OL>
  <LI>Enter a value including try entering alpha characters.</LI>
  <LI>After a value has been entered press the 'destroy' button - notice =
the=20
  value is unchanged.</LI>
  <LI>Next try entering alpha characters.</LI>
  <LI>After you have entered alpha characters press the 'init' button. =
</LI>
  <LI>Please try multiple combinations so you understand the behavior of =
the=20
  'destroy' and 'init' methods. </LI></OL><INPUT style=3D"width: 160px;" =
id=3D"demoDestroyInput"=20
type=3D"text">        &lt;input type=3D"text" =
id=3D"demoDestroyInput"&gt;       =20
<P><INPUT style=3D"width: 165px;" id=3D"demoDestroyButton" =
value=3D"'destroy'" type=3D"button">=20
         on click =3D $('#demoDestroyInput').autoNumeric('destroy');</P>
<P><INPUT style=3D"width: 165px;" id=3D"demoInitButton" value=3D"'init'" =
type=3D"button">=20
         on click =3D $('#demoDestroyInput').autoNumeric('init');</P>
<P><STRONG>Note</STRONG></P>
<UL>
  <LI>If the field contains only alpha characters at the time the field =
is=20
  initalized  the result will be '0.00'</LI>
  <LI>If the field contains multiple decimal points on the first is=20
  reconized</LI></UL></DIV></FORM><A id=3D"updateAnchor" =
href=3D"http://decorplanit.com/plugin/#methodAnchor">back</A>
<FORM id=3D"updateForm" method=3D"post" name=3D"updateForm" action=3D"">
<DIV class=3D"subContainer">
<P><STRONG>"update' method </STRONG>- easily update element(s) that have =
been=20
previously initialized 'init' by autoNumeric. </P>
<P><STRONG>Proper format for the 'update' method</STRONG>.</P>
<UL>
  <LI>$(selector).autoNumeric('update', {options});&nbsp;</LI></UL>
<P><STRONG>Please note the following</STRONG></P>
<UL>
  <LI>The 'update' method name is required =
"$(selector).autoNumeric('update',=20
  {options});".</LI>
  <LI>'update' is case sensitive.</LI>
  <LI>Options are required and are accepted as an argument or variable =
(see the=20
  'init' method description).</LI>
  <LI>The 'update' method will function on all elements supported by=20
  autoNumeric.</LI>
  <LI>The 'update' method can be called repeatably with one or more =
options at a=20
  time.</LI>
  <LI>Existing values will be stripped, preserved and reformatted to the =
new=20
  settings. </LI>
  <LI>Values that fall outside the range of the new min/max range will =
be=20
  returned as "0.00"  (depending on the number of decimal places and the =
decimal=20
  separator character in the settings).</LI></UL>
<P><STRONG>Demo</STRONG></P>
<OL>
  <LI>The demo sample below is 'init' with defaults on page ready.</LI>
  <LI>Enter a value and then press either of the buttons to change the =
"aSign"=20
  option. </LI>
  <LI>Please press either button multiple times. </LI></OL>
<P><INPUT style=3D"width: 160px;" id=3D"demoUpdateInput" type=3D"text">  =
       =20
$('#demoUpdateInput').autoNumeric('init');</P>
<P><INPUT style=3D"width: 165px;" id=3D"demoUpdateButton1" =
value=3D"'update', {aSign: '$ '}" type=3D"button">=20
         on click =3D $('#demoUpdateInput').autoNumeric('update', =
{aSign: '$=20
'});</P>
<P><INPUT style=3D"width: 165px;" id=3D"demoUpdateButton2" =
value=3D"'update', {aSign: '=E2=82=AC '}" type=3D"button">=20
         on click =3D $('#demoUpdateInput').autoNumeric('update', =
{aSign: '=E2=82=AC '});=20
</P>
<P><STRONG>Note</STRONG></P>
<UL>
  <LI>The value is unchanged unless the min/max, rounding and or the max =
decimal=20
  places are modified and the value fall outside the new =
range.</LI></UL>
<P><STRONG>Warning</STRONG></P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'update' method prior to the =
'init' method=20
will cause a error message to be thrown to the Javascript console.</P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the "update" method on a element =
where the=20
decimal point "aDec" and the thousand separator "aSep" are equal  will =
cause an=20
error message  to be thrown to the javascript console. </P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'update' method on a element that =
is not=20
supported by autoNumeric will cause an error message  to be thrown to =
the=20
javascript console. </P></DIV></FORM><A id=3D"setAnchor" =
href=3D"http://decorplanit.com/plugin/#methodAnchor">back</A>
<FORM id=3D"setGetForm" method=3D"post" name=3D"setGetForm" action=3D"">
<DIV class=3D"subContainer">
<P><STRONG>'set' method </STRONG>- The 'set' method allows you to easily =
format=20
number and numeric strings </P>
<P><STRONG>Proper format for the 'set' method</STRONG>.</P>
<UL>
  <LI>$(selector).autoNumeric('set', value);&nbsp;</LI></UL>
<P><STRONG>Please note the following</STRONG></P>
<UL>
  <LI>The 'set' method name is required "$(selector).autoNumeric('set',=20
  value);".</LI>
  <LI>'set' is case sensitive.</LI>
  <LI>Options  are NOT accepted.</LI>
  <LI>The 'set'  method can be used on any element that are supported by =

  autoNumeric.</LI>
  <LI>The value can be sent as a string or variable           =20
  <UL>
    <LI>$(selector).autoNumeric('set', '1234.56');</LI>
    <LI>var someValue =3D 1234.56 then $(selector).autoNumeric('set',=20
    someValue);</LI></UL></LI>
  <LI>Returns a string</LI></UL>
<P><STRONG>Demo</STRONG></P>
<TABLE width=3D"800">
  <TBODY>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">1.</TD>
    <TD style=3D"border: currentColor;" width=3D"155"><INPUT =
id=3D"demoSetValue"=20
      class=3D"auto" type=3D"text" data-a-sep=3D"" =
data-v-max=3D"999999999.99999"=20
      data-v-min=3D"-999999999.99999" data-a-pad=3D"false"></TD>
    <TD style=3D"border: currentColor;">Enter a value between =
-999999999.99999=20
      and 999999999.99999</TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">2.</TD>
    <TD style=3D"border: currentColor;" width=3D"155"><INPUT =
style=3D"width: 155px; height: 25px;" id=3D"demoSetButton" =
value=3D"=E2=80=98set=E2=80=99" type=3D"button"></TD>
    <TD style=3D"border: currentColor;">on click =3D=20
      $('.demoSet').autoNumeric('<STRONG>set</STRONG>', =
someValue)</TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">3.</TD>
    <TD style=3D"border: currentColor;" width=3D"155"><INPUT =
id=3D"demoSetInput"=20
      class=3D"demoSet" readOnly=3D"" type=3D"text" data-a-sign=3D"$ =
"></TD>
    <TD style=3D"border: currentColor;">&lt;input type=3D"text" =
class=3D"demoSet" =20
      data-a-sign=3D"$ " readonly&gt;</TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">4.</TD>
    <TD style=3D"border: currentColor;" width=3D"155" =
align=3D"right"><SPAN id=3D"demoSetSpan"=20
      class=3D"demoSet" data-a-sign=3D"=C2=A5 " =
data-a-form=3D"false">Number placed=20
      here:</SPAN></TD>
    <TD style=3D"border: currentColor;"><SPAN>&lt;span class=3D"demoSet" =
id=3D"p1"  =20
      data-a-sign=3D"=C2=A5 " =
&gt;&lt;/span&gt;</SPAN></TD></TR></TBODY></TABLE>
<P><STRONG>Note: </STRONG></P>
<UL>
  <LI>Values that fall outside the  min/max range will not be 'set' and =
a error=20
  message will be thrown to the javascript console.</LI></UL>
<P><STRONG>Warning</STRONG></P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'set' method prior to the 'init' =
method will=20
cause a error message to be thrown to the Javascript console.</P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'set' method on a element that is =
not=20
supported by autoNumeric will cause an error message  to be thrown to =
the=20
javascript console. </P></DIV></FORM>
<P><A id=3D"getAnchor"=20
href=3D"http://decorplanit.com/plugin/#methodAnchor">back</A></P>
<FORM id=3D"setGetForm2" method=3D"post" name=3D"setGetForm" =
action=3D"">
<DIV class=3D"subContainer">
<P><STRONG>'get' method - </STRONG> The 'get' method allows you to =
easily remove=20
the formating from a string  on a  autoNumeric controlled element and =
returns a=20
number.</P>
<P><STRONG>Proper format for the 'get' method</STRONG>.</P>
<UL>
  <LI>$(selector).autoNumeric('get');&nbsp;</LI></UL>
<P><STRONG>Please note the following</STRONG></P>
<UL>
  <LI>The 'get' method name is required =
"$(selector).autoNumeric('get');".</LI>
  <LI>'get' is case sensitive.</LI>
  <LI>Options and values are NOT accepted.</LI>
  <LI>Works on any element supported by autoNumeric.</LI>
  <LI>Returns  only the first element of the selector.</LI>
  <LI>Returns a number.</LI></UL>
<P><STRONG>Demo</STRONG></P>
<TABLE width=3D"850">
  <TBODY>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">1.</TD>
    <TD style=3D"border: currentColor;" width=3D"155"><INPUT =
id=3D"demoGetInput"=20
      class=3D"auto" type=3D"text" data-a-sep=3D"." data-a-dec=3D","=20
data-a-sign=3D"=E2=82=AC "></TD>
    <TD style=3D"border: currentColor;">Enter a value from 0 to=20
  999999999.99</TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">2.</TD>
    <TD style=3D"border: currentColor;" width=3D"155"><INPUT =
style=3D"width: 155px; height: 25px;" id=3D"demoGetButton1" =
value=3D"=E2=80=98get=E2=80=99" type=3D"button"></TD>
    <TD style=3D"border: currentColor;">on click =3D=20
      $('#demoGetInput').autoNumeric('<STRONG>get</STRONG>')</TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">3.</TD>
    <TD style=3D"border: currentColor;" width=3D"155"><INPUT =
id=3D"demoGetValue1"=20
      readOnly=3D"" type=3D"text"></TD>
    <TD style=3D"border: currentColor;">the returned number from the =
above input=20
      is placed here</TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">4.</TD>
    <TD style=3D"border: currentColor; padding-left: 45px;" =
id=3D"demoGetTd" class=3D"auto"=20
    width=3D"155" data-a-sign=3D"=C2=A5 ">1234567.89</TD>
    <TD style=3D"border: currentColor;">the 'get' method works on al =
supported=20
      elements. This example uses the &lt;td&gt; tag</TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">5.</TD>
    <TD style=3D"border: currentColor;" width=3D"155"><INPUT =
style=3D"width: 155px; height: 25px;" id=3D"demoGetButton2" =
value=3D"=E2=80=98get=E2=80=99" type=3D"button"></TD>
    <TD style=3D"border: currentColor;">on click =3D=20
      $('#demoGetTd').autoNumeric('<STRONG>get</STRONG>')</TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"15">6.</TD>
    <TD style=3D"border: currentColor;" width=3D"155"><INPUT =
id=3D"demoGetValue2"=20
      readOnly=3D"" type=3D"text"></TD>
    <TD style=3D"border: currentColor;">the returned number from the =
table cell=20
      &lt;td&gt; tag is placed here</TD></TR></TBODY></TABLE>
<P><STRONG>Note: </STRONG></P>
<UL>
  <LI>If the selected cell has no value 0 will be returned.</LI></UL>
<P><STRONG>Warning</STRONG></P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'get' method prior to the 'init' =
method will=20
cause a error message to be thrown to the Javascript console. </P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'get' method on a element that is =
not=20
supported by autoNumeric will cause an error message  to be thrown to =
the=20
javascript console. </P></DIV></FORM>
<P><A id=3D"getStringAnchor"=20
href=3D"http://decorplanit.com/plugin/#methodAnchor">back</A> </P>
<DIV class=3D"subContainer">
<P><STRONG>'</STRONG><STRONG>getString' method </STRONG>- this basically =
uses=20
jQuery's .serialize() method which creates a text string (URL-encoded =
notation)=20
from a set of form elements that is ready for submission. The extra step =
taken=20
here is the string is split and iterated through and  the formatted =
values are=20
replaced with unformatted values. The string is then joined back =
together and=20
returned. </P>
<P><STRONG>Proper format for the 'getString' method</STRONG>.</P>
<UL>
  <LI>$(selector).autoNumeric('getString');&nbsp;</LI></UL>
<P><STRONG>Please note the following</STRONG></P>
<UL>
  <LI>The 'getString' method name is required=20
  "$(selector).autoNumeric('getString');".</LI>
  <LI>Options  and value are NOT accepted.</LI>
  <LI>The "getString" method does NOT validate the form inputs. It will =
return=20
  what has been entered including empty strings.</LI>
  <LI>If your selector includes non-autoNumeric fields they will be =
returned=20
  untouched.</LI>
  <LI>Only <A=20
  =
href=3D"http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2">"succ=
essful=20
  controls</A>" are serialized to the string. Please read more about <A =
href=3D"http://api.jquery.com/serialize/">jQuery's=20
  .serialize() method</A> to see if "getString" method will work for =
your=20
  application.</LI>
  <LI>Returns a string</LI></UL>
<P><STRONG>Demo</STRONG></P>
<OL>
  <LI>To view the method results open your browser's console (you may =
need to=20
  reload the page). </LI>
  <LI>Press the "getString" button. Two strings should be appear. </LI>
  <LI>The first string was created to show jQuery's .serialize() method =
with no=20
  modifications.</LI>
  <LI>The second string is from the "getString" method. </LI></OL>
<FORM method=3D"post" name=3D"getStringForm" id?getStringForm?=3D"">
<TABLE border=3D"0" width=3D"800">
  <TBODY>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"100" =
align=3D"right">First name:</TD>
    <TD style=3D"border: currentColor;"><INPUT name=3D"FirstName" =
value=3D"John"=20
      width=3D"165" type=3D"text"></TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"100" =
align=3D"right">Last name:</TD>
    <TD style=3D"border: currentColor;"><INPUT name=3D"LastName" =
value=3D"Smith"=20
      width=3D"165" type=3D"text"></TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"100" =
align=3D"right">2012 sales:=20
</TD>
    <TD style=3D"border: currentColor;"><INPUT class=3D"demo" =
name=3D"income2012"=20
      value=3D"72874.00" width=3D"165" type=3D"text" =
data-a-sign=3D"=C2=A3 "></TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"100" =
align=3D"right">2011 sales:=20
</TD>
    <TD style=3D"border: currentColor;"><INPUT class=3D"demo" =
name=3D"income2011"=20
      value=3D"63667.00" width=3D"165" type=3D"text" =
data-a-sign=3D"=C2=A3 "></TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"100" =
align=3D"right">2010 sales:=20
</TD>
    <TD style=3D"border: currentColor;"><INPUT class=3D"demo" =
name=3D"income2010"=20
      value=3D"44567.89" width=3D"165" type=3D"text" =
data-a-sign=3D"=C2=A3 "></TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"100" =
align=3D"right">&nbsp;</TD>
    <TD style=3D"border: currentColor;"><INPUT style=3D"width: 158px;" =
id=3D"getStringButton" value=3D'"getString"' =
type=3D"button"></TD></TR></TBODY></TABLE></FORM>
<P><STRONG>                Note</STRONG></P>
<UL>
  <LI>The 'getString' method returns numbers </LI></UL>
<P><STRONG>Warning</STRONG>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'getSting'  method prior to the =
'init' will=20
cause a error message to be thrown the the Javascript console. =
</P></DIV><A id=3D"getArrayAnchor"=20
href=3D"http://decorplanit.com/plugin/#methodAnchor">back</A>
<DIV class=3D"subContainer">
<P><STRONG>'getArray' method </STRONG>- this basically uses jQuery's=20
.serializeArray() method which returns a Javascript array of objects, =
ready to=20
be encoded as a JSON string. The extra step taken here is the the object =
array=20
is iterated through and  formatted values are replaced with un-formatted =
values=20
and  returned. </P>
<P><STRONG>Proper format for the 'getArray' method</STRONG>.</P>
<UL>
  <LI>$(selector).autoNumeric('getArray');&nbsp;</LI></UL>
<P><STRONG>Please note the following</STRONG></P>
<UL>
  <LI>The 'getArray' method name is required=20
  "$(selector).autoNumeric('getArray');".</LI>
  <LI>Options  are NOT accepted.</LI>
  <LI>An object is returned. If you want this converted to a valid JSON =
string=20
  to submit to the server you should consider <A =
href=3D"https://github.com/douglascrockford/JSON-js">JSON2.js</A>=20
  as I did in this demo.</LI>
  <LI>The "getArray" method does NOT validate the form inputs. It will =
return=20
  what has been entered including empty strings.</LI>
  <LI>If your selector includes non-autoNumeric fields they will be =
returned=20
  untouched.</LI>
  <LI>Only <A=20
  =
href=3D"http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2">"succ=
essful=20
  controls</A>" are serialized to the string. Please read more about <A =
href=3D"http://api.jquery.com/serializeArray/">jQuery's=20
  .serializeArray() method</A> to see if "getArray" method will work for =
your=20
  application.</LI></UL>
<P><STRONG>Demo</STRONG></P>
<OL>
  <LI>To view the "getArray" method open your browser's console (you may =
need to=20
  reload the page). Fill in the inputs above and then press the =
"getArray"=20
  button. The following lines  should be appear so you can see the =
differences.=20
  </LI>
  <LI>The first string was created to show jQuery's .serializeArray() =
method=20
  with no modifications.</LI>
  <LI>The second object is from the "getArray" method</LI>
  <LI>The third line takes the return object from the "getArray" method =
and=20
  converts to a valid JSON string via JSON.stringify. </LI></OL>
<FORM method=3D"post" name=3D"getArrayForm" id?getArrayForm?=3D"">
<TABLE border=3D"0" width=3D"800">
  <TBODY>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"130" =
align=3D"right"><LABEL for=3D"widgets">Number=20
      widgets</LABEL></TD>
    <TD style=3D"border: currentColor;"><INPUT style=3D"width: 160px;" =
id=3D"widget"=20
      class=3D"demo" name=3D"widget" value=3D"547635" type=3D"text" =
data-v-max=3D"1000000"=20
      data-v-min=3D"0"></TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"130" =
align=3D"right"><SPAN style=3D"border: currentColor; text-align: =
center;"><LABEL=20
      for=3D"cost2">Cost per widgets</LABEL></SPAN></TD>
    <TD style=3D"border: currentColor;"><INPUT style=3D"width: 160px;" =
id=3D"cost"=20
      class=3D"demo" name=3D"cost" value=3D"0.59" type=3D"text" =
data-a-sign=3D""></TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"130" =
align=3D"right"><LABEL for=3D"total2">Total=20
      order cost</LABEL></TD>
    <TD style=3D"border: currentColor;"><INPUT style=3D"width: 160px;" =
id=3D"total"=20
      class=3D"demo" name=3D"total" type=3D"text" data-a-sign=3D"U$D =
"></TD></TR>
  <TR>
    <TD style=3D"border: currentColor; height: 50px;" vAlign=3D"top" =
width=3D"130"=20
    align=3D"right">Order notes:</TD>
    <TD style=3D"border: currentColor;"><TEXTAREA id=3D"comments" =
cols=3D"52" rows=3D"2" name=3D"comments">Please call before =
shipping</TEXTAREA></TD></TR>
  <TR>
    <TD style=3D"border: currentColor;" width=3D"130" =
align=3D"right">&nbsp;</TD>
    <TD style=3D"border: currentColor;"><INPUT style=3D"width: 165px;" =
id=3D"getArrayButton" value=3D'"getArray"' =
type=3D"button"></TD></TR></TBODY></TABLE></FORM>
<P><STRONG>Note</STRONG></P>
<UL>
  <LI>jQuery does not have a native stringify method.</LI></UL>
<P><STRONG>Warning</STRONG>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'getArray'  method prior to the =
'init' will=20
cause a error message to be thrown the the Javascript console. =
</P></DIV><A id=3D"getSettingsAnchor"=20
href=3D"http://decorplanit.com/plugin/#methodAnchor">back</A>
<FORM id=3D"getSettingsForm" method=3D"post" name=3D"getSettingsForm" =
action=3D"">
<DIV class=3D"subContainer">
<P> <STRONG>'getSettings' method </STRONG>- this returns an object that =
shows=20
the autoNumeric settings for the field. You may find this helpful when=20
developing a page.</P>
<P><STRONG>Proper format for the 'getArray' method</STRONG>.</P>
<UL>
  <LI>$(selector).autoNumeric('getSettings');&nbsp;</LI></UL>
<P><STRONG>Please note the following</STRONG></P>
<UL>
  <LI>Only the first element from the selector will be  returned.</LI>
  <LI>If the selector points to a non-autoNumeric field or tag =
"undefined" is=20
  returned.</LI></UL>
<P><STRONG>Demo instructions</STRONG></P>
<UL>
  <LI>To view this in action open your browser's console  (you may need =
to=20
  reload the page) and press the "getSettings" button. In this example I =
have=20
  pointed id=3D"fi7" (the negative bracket example). </LI></UL>
<P><INPUT style=3D"width: 130px;" id=3D"getSettingsButton" =
value=3D'"getSettings"' type=3D"button"></P>
<P><STRONG>Warning</STRONG> </P>
<P><IMG style=3D"margin-right: 10px;" alt=3D"Caution" =
src=3D"http://decorplanit.com/plugin/image/caution.png"=20
width=3D"15" height=3D"15">Calling the 'getSettings'  method prior to =
the 'init'=20
will cause a error message to be thrown the the Javascript console.=20
</P></DIV></FORM>
<P><A id=3D"mRoundExample"=20
href=3D"http://decorplanit.com/plugin/#mRoundCode">back</A></P><BR>
<DIV class=3D"tableWrap">
<FORM id=3D"demoMRound">
<DIV style=3D"padding: 10px 5px 10px 15px;">
<P><STRONG>The following demonstrates the supported rounding =
types</STRONG></P>
<OL>
  <LI>Enter a value between -99999.99999 and 99999.99999</LI>
  <LI>Select the decimal accuracy between 0 and 5</LI>
  <LI>Press the "round" button and see the results to the right</LI>
  <LI>Re-select the decimal and change the value</LI>
  <LI>Re-set the form and try new values    </LI></OL>
<P>For in depth details on rounding methods visit the <A =
href=3D"http://www.diycalculator.com/popup-m-round.shtml"=20
target=3D"_blank">DIY     Calculator</A> site.</P></DIV>
<TABLE class=3D"mainTable" border=3D"0" width=3D"100%">
  <TBODY>
  <TR style=3D"height: 50px;">
    <TD class=3D"mRoundDemoR3" width=3D"33%"><STRONG>Entered value to be =

      rounded</STRONG></TD>
    <TD class=3D"mRoundDemoR2" width=3D"33%"=20
      align=3D"right"><STRONG>Description</STRONG></TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><STRONG>Rounded=20
results</STRONG></TD></TR>
  <TR height=3D"55">
    <TD class=3D"mRoundDemoR3" width=3D"33%"><INPUT id=3D"mRoundValue" =
class=3D"auto"=20
      size=3D"25" type=3D"text" data-v-max=3D"99999.99999" =
data-v-min=3D"-99999.99999"=20
      data-a-pad=3D"false"><SELECT style=3D"border-width: thin; =
border-style: solid; width: 40px; height: 22px; font-size: 14px;"=20
      id=3D"mRoundDecimal"><OPTION value=3D"0">0</OPTION><OPTION=20
        value=3D"1">1</OPTION><OPTION selected=3D"selected"=20
        value=3D"2">2</OPTION><OPTION value=3D"3">3</OPTION><OPTION=20
        value=3D"4">4</OPTION><OPTION =
value=3D"5">5</OPTION></SELECT></TD>
    <TD class=3D"mRoundDemoR2" width=3D"33%" =
align=3D"right">&nbsp;Round-Half-Up=20
      <BR>"Symmetric"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 'S' - =
default</LABEL>=20
      <BR> <INPUT id=3D"mRound_S" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"></TD></TR>
  <TR height=3D"55">
    <TD class=3D"mRoundDemoR3" width=3D"33%"><INPUT style=3D"width: =
115px;" id=3D"mRoundButton" value=3D"Round" type=3D"button"><INPUT =
style=3D"width: 115px;" value=3D"Reset form!" type=3D"reset"><BR></TD>
    <TD class=3D"mRoundDemoR2" width=3D"33%" =
align=3D"right">&nbsp;Round-Half-Up=20
      <BR>"Asymmetric"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 'A'</LABEL> =
<BR>=20
      <INPUT id=3D"mRound_A" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"=20
      data-m-round=3D"A"></TD></TR>
  <TR height=3D"55">
    <TD style=3D"padding-left: 10px;" class=3D"mRoundDemoR3" =
vAlign=3D"top" rowSpan=3D"7"=20
    width=3D"33%" align=3D"left">
      <P>&nbsp;</P></TD>
    <TD class=3D"mRoundDemoR2" width=3D"33%" =
align=3D"right">&nbsp;Round-Half-Down=20
      <BR>"Symmetric"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 's'</LABEL> =
<BR>=20
      <INPUT id=3D"mRound_s" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"=20
      data-m-round=3D"s"></TD></TR>
  <TR height=3D"55">
    <TD class=3D"mRoundDemoR2" width=3D"33%" =
align=3D"right">&nbsp;Round-Half-Down=20
      <BR>"Asymmetric"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 'a'</LABEL> =
<BR>=20
      <INPUT id=3D"mRound_a" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"=20
      data-m-round=3D"a"></TD></TR>
  <TR height=3D"55">
    <TD class=3D"mRoundDemoR2" width=3D"33%" =
align=3D"right">&nbsp;Round-Half-Even=20
      <BR>"Bankers"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 'B'</LABEL> =
<BR>=20
      <INPUT id=3D"mRound_B" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"=20
      data-m-round=3D"B"></TD></TR>
  <TR height=3D"55">
    <TD class=3D"mRoundDemoR2" width=3D"33%" align=3D"right">&nbsp;Round =
Up=20
      <BR>"Away From Zero"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 'U'</LABEL> =
<BR>=20
      <INPUT id=3D"mRound_U" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"=20
      data-m-round=3D"U"></TD></TR>
  <TR height=3D"55">
    <TD class=3D"mRoundDemoR2" width=3D"33%" =
align=3D"right">&nbsp;Round-Down=20
      <BR>"Toward Zero"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 'D'</LABEL> =
<BR>=20
      <INPUT id=3D"mRound_D" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"=20
      data-m-round=3D"D"></TD></TR>
  <TR height=3D"55">
    <TD class=3D"mRoundDemoR2" width=3D"33%" align=3D"right">Round=20
      to&nbsp;Ceiling<BR> "Toward Positive Infinity"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 'C'</LABEL> =
<BR>=20
      <INPUT id=3D"mRound_C" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"=20
      data-m-round=3D"C"></TD></TR>
  <TR style=3D"padding-bottom: 15px;" height=3D"55">
    <TD class=3D"mRoundDemoR2" width=3D"33%" align=3D"right">Round to =
Floor<BR>=20
      "Toward Negative Infinity"</TD>
    <TD class=3D"mRoundDemoR3" width=3D"33%"><LABEL>mRound: 'F'</LABEL> =
<BR>=20
      <INPUT id=3D"mRound_F" class=3D"auto_mRound" readOnly=3D"" =
size=3D"20" type=3D"text"=20
      =
data-m-round=3D"F"></TD></TR></TBODY></TABLE></FORM></DIV><BR><BR><A =
id=3D"nBracketExample"=20
href=3D"http://decorplanit.com/plugin/#nBracketCode">back</A>
<FORM id=3D"negativeBracketsForm" method=3D"post" =
name=3D"negativeBracketsForm"=20
action=3D"">
<DIV class=3D"subContainer">
<P><STRONG>The following demonstrates negative values with =
brackets</STRONG> -=20
the next field is loaded with lZero: 'allow'. Update the field options =
and test=20
the behavior change. Brackets are visible only when the field does not =
have=20
focus.</P>
<P>&lt;input type=3D"text" id=3D"fi7" name=3D"fi7" value=3D"-9999.99"=20
data-v-min=3D"-999999999.99"   data-n-bracket=3D"()"&gt;</P><INPUT =
id=3D"fi7" name=3D"fi7"=20
value=3D"-9999.99" type=3D"text" data-v-min=3D"-999999999.99" =
data-n-bracket=3D"()"><INPUT style=3D"width: 130px;" id=3D"fb8" =
value=3D"nBracket: 'null'" type=3D"button"><INPUT style=3D"width: =
130px;" id=3D"fb9" value=3D"nBracket: '()'" =
type=3D"button"></DIV></FORM>
<P><A id=3D"lZeroExample"=20
href=3D"http://decorplanit.com/plugin/#lZeroCode">back</A></P>
<FORM id=3D"leadingZeroForm" method=3D"post" name=3D"leadingZeroForm" =
action=3D"">
<DIV class=3D"subContainer">
<P><STRONG>The following demonstrates the leading zero =
modification</STRONG> -=20
the next field is loaded with lZero: 'allow'. Update the field options =
and test=20
the behavior change.</P>
<P>lZero: "deny" - allows only one leading zero (same behavior as =
versions 1.7.0=20
to 1.7.4.</P>
<P>lZero: "allow" - allows leading zeros to be entered. Removes leading =
zeros on=20
the focusout event.</P>
<P>lZero: "keep" - allows leading zeros to be entered. Keeps leading =
zeros on=20
the focusout event.</P>
<P>$('#i6').autoNumeric('init');</P>
<P>$('#i6').autoNumeric('update', {lZero: 'deny'});</P>
<P>$('#i6').autoNumeric('update', {lZero: 'allow'});</P>
<P>$('#i6').autoNumeric('update', {lZero: 'keep'});</P>
<P>&lt;input type=3D"text" id=3D"i6"&gt; <EM>note: default currently set =
to=20
allow</EM></P><INPUT id=3D"i6" name=3D"i6" type=3D"text"><INPUT =
style=3D"width: 85px;" id=3D"b5" value=3D"'deny'" type=3D"button"><INPUT =
style=3D"width: 85px;" id=3D"b6" value=3D"'allow'" =
type=3D"button"><INPUT style=3D"width: 85px;" id=3D"b7" value=3D"'keep'" =
type=3D"button"><BR></DIV></FORM>
<P><STRONG>Browsers supported - </STRONG>limited testing conducted on =
the=20
following:</P>
<UL>
  <LI>Chrome 23.0.1271.97</LI>
  <LI>Firefox 17.0.1</LI>
  <LI>IE 9.0.8112.16421</LI>
  <LI>Opera 12.12</LI>
  <LI>Safari 5.0.3 Mac</LI>
  <LI>Safari 5.1.7 WIN</LI>
  <LI>iPad2</LI>
  <LI>iPhone 4</LI>
  <LI>Andriod 4 (phone)</LI></UL>
<P><STRONG>Known issues</STRONG></P>
<UL>
  <LI>HTML 5 input when type is set to number   &lt;input =
type=3D"number"=20
  id=3D"someID"&gt;. Type must best set to "text" to have autoNumeric =
function=20
  properly.</LI>
  <LI>Android mobile browsers prior to Android version 4. </LI></UL>
<P><STRONG>Change notes</STRONG></P>
<UL>
  <LI>Modified the 'get' method so when a field is blank and the setting =

  wEmpty:'empty' a  empty string('') is returned.</LI></UL>
<P><STRONG>History</STRONG></P>
<P><STRONG>Version 1.8.0</STRONG></P>
<UL>
  <LI>autoNumeric() 1.8.0 is not   compatible  with earlier versions but =
I=20
  believe you will find version 1.8.0's new functionality and ease of =
use  worth=20
  the effort to convert.</LI>
  <LI>Changed autoNumeric structure to conform to jQuery's recommended =
plugin=20
  development. </LI>
  <LI>Created a single namespace and added  multiple methods.</LI>
  <LI>Added HTML 5 data support and eliminated the metadata plugin =
dependency.=20
  </LI>
  <LI>Added support for  the following elements: 'DD', 'DT', 'H1', 'H2', =
'H3',=20
  'H4', 'H5', 'H6', 'input', 'LABEL', 'P', 'SPAN', 'TD', 'TH'.</LI>
  <LI>Changed the settings loading order to defaults, HTML5 data then =
options.=20
  Now the defaults settings  are overridden by HTML5 data and options =
overrides=20
  both defaults &amp; HTML5 data.</LI>
  <LI>Added "lZero" to the settings to control leading zero =
behavior.</LI>
  <LI>Added "nBracket" to the settings which controls if negative values =
are=20
  display with brackets.</LI>
  <LI>Changed the callback feature to accept functions only.</LI>
  <LI>Improved the 'aForm' behavior that allows values to be =
automatically=20
  formatted on page ready.</LI>
  <LI>Fixed the issue for numbers that are less than 1 and greater than =
-1 and=20
  have six or more decimal places.</LI>
  <LI>Fixed 'crtl' + 'a' (select all) and 'ctrl' + 'c' (copy) combined =
key=20
  events.</LI>
  <LI>Fixed a IE &amp; FF bug on readonly attribute.</LI>
  <LI>General code clean up</LI></UL>
<P><STRONG><A=20
href=3D"http://www.decorplanit.com/plugin/autoNumeric-1.7.5.htm">Version =

1.7.5</A></STRONG>
<UL>
  <LI>Fixed ctrl + a (select all) and ctrl + c (copy) key =
events.</LI></UL>
<P><STRONG>Version 1.7.4-B</STRONG></P>
<UL>
  <LI>Fixed caret routine for IE (oops mistake).</LI></UL>
<P></P>
<P><STRONG>Version 1.7.4</STRONG></P>
<UL>
  <LI>Depreciated the use of "options" in the autoNumericGet() &amp;=20
  autoNumericSet() public functions.</LI>
  <LI>Bug fix - prevent multiple instances of autoNumeric from being=20
loaded.</LI>
  <LI>Bug fix - corrected loop through a array using "for( i in left_ar =
)" -=20
  thanks Peter Kovari.</LI>
  <LI>Eliminated the use of ++ &amp; -- to iterate and the "continue"=20
  statement.</LI>
  <LI>General code maintenance.</LI></UL>
<P><STRONG>Version 1.7.2 &amp; 1.7.3</STRONG></P>
<UL>
  <LI>Bug fix - limited releases.</LI></UL>
<P><STRONG>Version 1.7.1 </STRONG><STRONG><SPAN style=3D"font-weight: =
bold; background-color: rgb(255, 255, 0);"><A=20
href=3D"http://decorplanit.com/plugin/autoNumeric-1.7.1.htm">click here  =
to=20
view</A></SPAN></STRONG></P>
<UL>
  <LI>Bug fix - change event is corrected.</LI></UL>
<P><STRONG>Version 1.7.0</STRONG></P>
<UL>
  <LI> Precision control of minimum &amp; maximum values  to the =
n<SUP>th</SUP>=20
  decimal places! </LI>
  <LI> The number of decimal places and negative sign are now set via =
the=20
  min/max values. Also positive and negative values are easily toggled =
from any=20
  caret position within the input field. </LI>
  <LI>Public functions  $('selector').autoNumericGet({options}) &amp;=20
  $('selector').autoNumericSet(value, {options}) to strip and format =
values that=20
  use  jQuery's selector format.</LI>
  <LI>Callback function that is very powerful. </LI>
  <LI>Options for input behavior including, padding, cell to be empty or =
always=20
  display the currency sign or zero.</LI></UL>
<P><STRONG>Version 1.6.2 </STRONG><STRONG><SPAN style=3D"font-weight: =
bold; background-color: rgb(255, 255, 0);"><A=20
href=3D"http://decorplanit.com/plugin/autoNumeric-1.6.2.htm">click here  =
to=20
view</A></SPAN></STRONG></P>
<UL>
  <LI>Bug fix - on setting the caret position.</LI>
  <LI>General code clean up.</LI></UL>
<P><STRONG>Version 1.6.1</STRONG></P>
<UL>
  <LI>Bug fix - that prevented a decimal character from being entered =
when only=20
  the currency symbol is present.</LI>
  <LI>Bug fix - when entering a decimal character when the thousand =
separator is=20
  a space ' ' and the currency symbol has a space and in placed as a =
suffix.=20
  </LI></UL>
<P><STRONG>Version 1.6.0</STRONG></P>
<UL>
  <LI>Eliminated the hard coded space between the currency symbol and =
numeric=20
  characters. </LI>
  <LI>Spacing between the currency symbol and numeric characters is now=20
  determined by the developer (you).</LI>
  <LI>Re-wrote the routine that handles the decimal character key =
events.</LI>
  <LI>Re-wrote the routine that handles the numeric character(s) key=20
events.</LI>
  <LI>Re-wrote the set caret position routine.</LI>
  <LI>Added focus out event</LI>
  <LI>Fixed leading zero when no numeric characters were entered to the =
left of=20
  the decimal point</LI>
  <LI>Currency symbol and padding are only displayed when a numeric =
and/or=20
  decimal character have been entered - special thanks to B. Cull for =
his=20
  contribution.</LI></UL>
<P><STRONG>Version 1.5.4</STRONG></P>
<UL>
  <LI>Added padding option - see aPad above for greater details - =
special thanks=20
  Jonas Johansson for his contribution</LI>
  <LI>Fixed  select all (ctrl + a)</LI>
  <LI>Fixed caret position when a negative sign is added when a currency =
symbol=20
  is present</LI></UL>
<P><STRONG>Version 1.5.3</STRONG></P>
<UL>
  <LI>Corrected issues with id's that used special characters - Thanks =
Anthony=20
  &amp; Evan C.</LI>
  <LI>MAC command key is now recognized (version 1.5.2) - Thanks Bart =
B.</LI>
  <LI>Changed the blur event to change - this corrected the onchange not =
being=20
  thrown in IE7/IE8 - Thanks Javier P.</LI></UL>
<P><STRONG>Version 1.5.1</STRONG></P>
<UL>
  <LI>Corrected return key support (thanks Bart B.)</LI></UL>
<P><STRONG>Version 1.5.0</STRONG></P>
<UL>
  <LI>Added currency symbol support</LI>
  <LI>Added meta data support and eliminated alt code that was used in =
previous=20
  versions.</LI></UL>
<P><STRONG>Version 1.4.5 (Last version using the alt code) <SPAN =
style=3D"font-weight: bold; background-color: rgb(255, 255, 0);"><A=20
href=3D"http://decorplanit.com/plugin/autoNumeric-1.4.5.htm">click here  =
to=20
view</A></SPAN></STRONG></P>
<UL>
  <LI>Correct caret position when one digit was present (thanks Bart =
V.)</LI></UL>
<P><STRONG>Version 1.4.3</STRONG></P>
<UL>
  <LI>Added set caret routine to the keyup event. Keeps the caret in   =
the=20
  proper place after the format routine</LI>
  <LI>Added focus event handler - corrected issues with pages that   =
have=20
  multiple formats</LI>
  <LI>Corrected the focus control when client tabs in to the field   on =
the=20
  keyup event (reverted  to earlier version) </LI>
  <LI>Corrected the Caps Lock key issue on the keyup event.</LI>
  <LI>Change the leading zero routine to the above</LI>
  <LI>Added routine that handles values that exceed the maximum</LI>
  <LI>Corrected the browser hang up issue when no thousand separator   =
is used=20
  in Chrome and Safari</LI></UL>
<P><STRONG>Versions 1.3.3 to 1.4.2: (</STRONG>requested custom   =
versions)</P>
<P><STRONG>Version 1.3.2:</STRONG></P>
<UL>
  <LI>Changed keyup event and replaced e.keyCode</LI>
  <LI>Corrected a "bad assignment" -  JSLint Gotch Yah</LI></UL>
<P><STRONG>Version 1.3.1:</STRONG></P>
<UL>
  <LI> Allow input to remain blank no value stays no value</LI></UL>
<P><STRONG>Version 1.3.0:</STRONG></P>
<UL>
  <LI> Added keyDown keyCode support </LI>
  <LI>Corrected "tab in" focus IE  issue - you can now over write   or =
delete =20
  the hi-lighted portion of the input value even when field has   =
reached max=20
  length. Thanks Bart</LI>
  <LI>Corrected the "tab out" issue in Opera. Version 1.3.2: </LI>
  <LI>Eliminated the Opera specific call that was meant to handle a   =
paste=20
  event</LI>
  <LI>jQuery 1.4 compatible</LI></UL>
<P><STRONG>Version 1.2.0 - 1.2.2: (please do not use and upgrade to   =
1.3.0 or=20
greater)</STRONG></P>
<UL>
  <LI> Removed the Dom Calls and replaced with jQuery</LI>
  <LI>Added Home and End (e.keyCode 35 &amp; 36) support to the   keyup =
event=20
  (thanks JPM USA)</LI>
  <LI>Paste values are accepted in IE, FF, Chrome &amp; Safari. (Thanks =
to Josh=20
  at Digitalbush)</LI></UL>
<P><STRONG>Version 1.1.0 - abandoned</STRONG></P>
<P><STRONG>Original   version 1.0.0 - 1.0.2</STRONG></P>
<HR>

<P><SPAN>Please contact me if you have questions, comments and or =
suggestions=20
at:<BR>      bob{@}decorplanit.com (remove brackets)</SPAN></P><BR>
<P>Created &amp; maintained by Bob Knothe</P>
<P>Copyright "All rights reserved"</P></DIV></DIV></BODY></HTML>

------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://decorplanit.com/plugin/image/autoNumeric.png

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

------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://www.paypalobjects.com/en_US/i/scr/pixel.gif

R0lGODlhAQABAID/AMDAwAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==

------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://decorplanit.com/plugin/image/caution.png

iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAI1SURBVDhPlZJNSFRhFIafOz/e+Wssc5wKLcxF
EiEWaGltRIQiglYVReQmIqJVERFRC7FVSLWNCCJokVRStlDcFG2irCjLKH8nZ5DmR+/M3Htnune+
7igzOKaLPjhwPs55z/u+33ckXReCZcdIz2CX/aS0DHYthjY2imdbI+6KLSWdUgEsyxB69wRjPows
JMx5B0klhpiaZN1sGEWSqLn1FIdwFAfYCtn4mx6c6ThBVaIirlMTDyGNfCX5cxolHCH44TXDne2l
zNMT4+LGjq30dB/CMZtlfnaK5OQk/oSOzykzmBDY1CyV5S6aFZ2hs1fYd6F7YYitamMtDecucvfO
C5zR9xgTY8gZE8XuJuf20brGS9TlIJ2DLwEfDc96CA0NLIAXPAubyoGqagZaUihZJ5ouoVvyZWzU
BMt5/iOC6rCxHokmfw49Y+Du/b4ILhg54pK43+JF/WM9WFZCmAYuVcPr9zAY0ZhLCoLb6/C07WfT
iZOl4HuXjuPtfUTHhrXYUyq/tSzp5sNUnz7GzHScX8MjtN++ia/MhZGxKPPMhVCSCXFtZ62I1NlE
P4jP/X1ixjBEVEmLmJYRKcthdC5W7C+RnZc//ukll3cfpM9y8y0cRppLUFEZwDRNclZUBqqL3/UP
OF/pu34GM1NG69UuAu4y7HbP8iVcvC+VvTQ/ZckefTVQlLhSX3HDlo/u+viWx+ePkkxFV2bNL8lq
lar6Jur3NPKgs+3/wXlER9dDNu/auyr4L1dSPao5cMB0AAAAAElFTkSuQmCC

------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif

R0lGODlhXAAaAPcPAP/x2//9+P7mtP+vM/+sLf7kr/7gpf7hqv7fof7ShP+xOP+zPUBRVv61Qr65
oM8LAhA+a3+Ddb6qfEBedYBvR/63SGB0fL+OOxA+ahA6Yu7br56fkDBUc6+FOyBKcc6/lq6qlf/C
ZSBJbe+nNs7AnSBDYDBKW56hlDBRbFBZVH+KiL61lf66TXCBhv/HaiBJb/61Q56knmB0fv++Wo6V
jP+pJp6fjf/cqI6Uid+fOWBvcXBoTSBJbiBCXn+JhEBbbt7Qqu7euv/nw/+2R0BRWI6Md8+YPY6T
h/+0Qc+UNCBHar+QQI92Q++jLEBgeyBCX//Uk2B1gH+Mi/+9Wu7Vof+tL//Eat+bMP+yO//js/7O
e/7NenCCi/+2Q/7OgP+6T//is1Brfv7RhP/y3b60kv7cmv+5S/7ZlO7Und7LoWB2gRA7Yv+/V56W
eXBnS87Fqv/Nf/7Zl66qkX+NkP7HbP6zPb61mWBgT//gro95SXB/gv/Jb//cp//v1H+Ok//Pg86/
md7Opv/owv/26EBedmBhUXB/gP7BX+7Zqv7Mef7CYf7CYkBfd//z3/68Uv/Gb0BSWRA7Y1Blb/+q
Kf66Tv/qx+7Wps+VOP7gqHB5c4BwSVBpeq6smK6unN7Knf7Pfa+IQ/+4Sv/hss7EpUBgev+uMZ+A
Rp99P//qw1Bqe6+GP/7DZFBrgJ9+QnB/hP7dn7+MOP7NfY6Wj/7nuv7pwP/57v/lvf/Znv/25f/N
gP/y2//v0v/BYf/syP+1Qv+qKAAzZswAAP+ZMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAA8ALAAAAABcABoA
AAj/AB8IHDhQmMGDCBMqXMiwocOHDAlKnPhAWAg+YwJo3Mixo8ePIEOKHMlxkKhHwihKFGalT62X
MGPKnEmzps2bOG82gpNSpTA8uIIKHUq0qNGjSJMqXRpUUM+VYHRJnUq1qtWrWLNq3cqVaqWnAoX9
2UW2rNmzaNOqXcu2rVu0WcCWQtWrrt27ePPq3cu3r9+/er8UXESrsOHDiA/HAMYYmAc/QRJLnkyZ
VpAYlTMj9tKTwKpZoEOLHi2ai2MnTiAAY0W6tevXbzzMeU27dSwCFbE4wiSgt+/fwH2TAuagNxDV
o347cKAhuAANDoAAX97cdxhgnXxDL+68++9DdQzC/2BBp4D58+jTn2eM6HwLYLLMn1DNuMV6YFLo
c5JPH9gJ8/2pUUB+jL0QiHoIoicGCzAYVMGDiRwg4YQUVngACcC8QKEKwKhwwAbAYLABCBwAs8GF
jHEAQhTAMHKAJSGCQEOIB6ThCmMqkDAjB3awmIqFQE4YByUPGtTAkQ0o8ooBTDbppJM4ACODk3oA
g4MBPACzApNyALOJATYAwwMVYEr5JCCMMbkCMIQwiQEwnhhARZpP1tnkFkg2YNACfPLZxR5nICDo
oIQKagEwRxAqAjAffACMCIOSAcwECBzqg6GIIoCGBYsyRikCPgBjCAKOTjrBBIwVqioCZWgRSp98
Gv+kwKy0zmqGC58koOuuu6IAjAS7FgGMEglIAMwPwQKjQwK+Asvsrwn8AIwkEkQATCa66gBMG8UO
G8G33/IqbgIusFFrrQZVMcC67LbrbruMrTtCHowtMUAOwJQwwgAjRAKMvfGuG3DAkABjyrolAGPE
vfmuawQo70YccRUG/ULAxRhnrDHGFzTmcSsYEwGMCZo8AUwhBHRswsUqX2xyCikwdsHFjO2gCgEx
E7HDGsBcsvHPG0+SkjC/FG300Ugb3QEDTDNNwRVHN+FGBsD0QEHRSzOBNQNa/wJLDxlQQAEDSRRN
AdWn/NLEHVSTnfTbb/ckTA1w12333XjnrXfdNTyPJYwvgAcu+OCEF2744YgnrrjhYAmDBC+QRy75
5JRXbvnlmGeuOeVIgFXRDLmELvropJdu+umop6766qPP4HlYIdwi++y012777bjnrvvuvMsewusF
DXGDLcQXb/zxyCev/PLMN8/8DUMAv9IUUAgBwPXYZ6/99tx37/334GcvBBRTSO8TROinr/76B6n0
QEAAOw==

------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: text/css;
	charset="gb2312"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://decorplanit.com/plugin/styles/prettify.css

.pln {
	color: rgb(0, 0, 0);
}
.str {
	color: rgb(0, 136, 0);
}
.kwd {
	color: rgb(0, 0, 136);
}
.com {
	color: rgb(136, 0, 0);
}
.typ {
	color: rgb(102, 0, 102);
}
.lit {
	color: rgb(0, 102, 102);
}
.pun {
	color: rgb(102, 102, 0);
}
.opn {
	color: rgb(102, 102, 0);
}
.clo {
	color: rgb(102, 102, 0);
}
.tag {
	color: rgb(0, 0, 136);
}
.atn {
	color: rgb(102, 0, 102);
}
.atv {
	color: rgb(0, 136, 0);
}
.dec {
	color: rgb(102, 0, 102);
}
.var {
	color: rgb(102, 0, 102);
}
.fun {
	color: red;
}
.str {
	color: rgb(0, 102, 0);
}
.kwd {
	color: rgb(0, 0, 102); font-weight: bold;
}
.com {
	color: rgb(102, 0, 0); font-style: italic;
}
.typ {
	color: rgb(68, 0, 68); font-weight: bold;
}
.lit {
	color: rgb(0, 68, 68);
}
.pun {
	color: rgb(68, 68, 0);
}
.opn {
	color: rgb(68, 68, 0);
}
.clo {
	color: rgb(68, 68, 0);
}
.tag {
	color: rgb(0, 0, 102); font-weight: bold;
}
.atn {
	color: rgb(68, 0, 68);
}
.atv {
	color: rgb(0, 102, 0);
}
pre.prettyprint {
	margin: 0px 10px 0px 0px; padding: 0px 0px 0px 10px; border: 1px solid =
rgb(153, 153, 153); background-color: rgb(248, 248, 255);
}
code.prettyprint {
	margin: 0px 10px 0px 0px; padding: 0px 0px 0px 10px; border: 1px solid =
rgb(153, 153, 153); background-color: rgb(248, 248, 255);
}
ol.linenums {
	margin-top: 0px; margin-bottom: 0px;
}
li.L0 {
	list-style-type: none;
}
li.L1 {
	list-style-type: none;
}
li.L2 {
	list-style-type: none;
}
li.L3 {
	list-style-type: none;
}
li.L5 {
	list-style-type: none;
}
li.L6 {
	list-style-type: none;
}
li.L7 {
	list-style-type: none;
}
li.L8 {
	list-style-type: none;
}
li.L1 {
	background: rgb(238, 238, 238);
}
li.L3 {
	background: rgb(238, 238, 238);
}
li.L5 {
	background: rgb(238, 238, 238);
}
li.L7 {
	background: rgb(238, 238, 238);
}
li.L9 {
	background: rgb(238, 238, 238);
}

------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://decorplanit.com/plugin/jquery.js

/*! jQuery v1.7.2 jquery.com | jquery.org/license */=0A=
(function (a, b) {=0A=
  function cy(a) {=0A=
    return f.isWindow(a) ? a : a.nodeType =3D=3D=3D 9 ? a.defaultView || =
a.parentWindow : !1=0A=
  }=0A=
  function cu(a) {=0A=
    if (!cj[a]) {=0A=
      var b =3D c.body,=0A=
        d =3D f("<" + a + ">").appendTo(b),=0A=
        e =3D d.css("display");=0A=
      d.remove();=0A=
      if (e =3D=3D=3D "none" || e =3D=3D=3D "") {=0A=
        ck || (ck =3D c.createElement("iframe"), ck.frameBorder =3D =
ck.width =3D ck.height =3D 0), b.appendChild(ck);=0A=
        if (!cl || !ck.createElement) cl =3D (ck.contentWindow || =
ck.contentDocument).document, cl.write((f.support.boxModel ? "<!doctype =
html>" : "") + "<html><body>"), cl.close();=0A=
        d =3D cl.createElement(a), cl.body.appendChild(d), e =3D =
f.css(d, "display"), b.removeChild(ck)=0A=
      }=0A=
      cj[a] =3D e=0A=
    }=0A=
    return cj[a]=0A=
  }=0A=
  function ct(a, b) {=0A=
    var c =3D {};=0A=
    f.each(cp.concat.apply([], cp.slice(0, b)), function () {=0A=
      c[this] =3D a=0A=
    });=0A=
    return c=0A=
  }=0A=
  function cs() {=0A=
    cq =3D b=0A=
  }=0A=
  function cr() {=0A=
    setTimeout(cs, 0);=0A=
    return cq =3D f.now()=0A=
  }=0A=
  function ci() {=0A=
    try {=0A=
      return new a.ActiveXObject("Microsoft.XMLHTTP")=0A=
    } catch (b) {}=0A=
  }=0A=
  function ch() {=0A=
    try {=0A=
      return new a.XMLHttpRequest=0A=
    } catch (b) {}=0A=
  }=0A=
  function cb(a, c) {=0A=
    a.dataFilter && (c =3D a.dataFilter(c, a.dataType));=0A=
    var d =3D a.dataTypes,=0A=
      e =3D {},=0A=
      g, h, i =3D d.length,=0A=
      j, k =3D d[0],=0A=
      l, m, n, o, p;=0A=
    for (g =3D 1; g < i; g++) {=0A=
      if (g =3D=3D=3D 1) for (h in a.converters) typeof h =3D=3D =
"string" && (e[h.toLowerCase()] =3D a.converters[h]);=0A=
      l =3D k, k =3D d[g];=0A=
      if (k =3D=3D=3D "*") k =3D l;=0A=
      else if (l !=3D=3D "*" && l !=3D=3D k) {=0A=
        m =3D l + " " + k, n =3D e[m] || e["* " + k];=0A=
        if (!n) {=0A=
          p =3D b;=0A=
          for (o in e) {=0A=
            j =3D o.split(" ");=0A=
            if (j[0] =3D=3D=3D l || j[0] =3D=3D=3D "*") {=0A=
              p =3D e[j[1] + " " + k];=0A=
              if (p) {=0A=
                o =3D e[o], o =3D=3D=3D !0 ? n =3D p : p =3D=3D=3D !0 && =
(n =3D o);=0A=
                break=0A=
              }=0A=
            }=0A=
          }=0A=
        }!n && !p && f.error("No conversion from " + m.replace(" ", " to =
")), n !=3D=3D !0 && (c =3D n ? n(c) : p(o(c)))=0A=
      }=0A=
    }=0A=
    return c=0A=
  }=0A=
  function ca(a, c, d) {=0A=
    var e =3D a.contents,=0A=
      f =3D a.dataTypes,=0A=
      g =3D a.responseFields,=0A=
      h, i, j, k;=0A=
    for (i in g) i in d && (c[g[i]] =3D d[i]);=0A=
    while (f[0] =3D=3D=3D "*") f.shift(), h =3D=3D=3D b && (h =3D =
a.mimeType || c.getResponseHeader("content-type"));=0A=
    if (h) for (i in e) if (e[i] && e[i].test(h)) {=0A=
      f.unshift(i);=0A=
      break=0A=
    }=0A=
    if (f[0] in d) j =3D f[0];=0A=
    else {=0A=
      for (i in d) {=0A=
        if (!f[0] || a.converters[i + " " + f[0]]) {=0A=
          j =3D i;=0A=
          break=0A=
        }=0A=
        k || (k =3D i)=0A=
      }=0A=
      j =3D j || k=0A=
    }=0A=
    if (j) {=0A=
      j !=3D=3D f[0] && f.unshift(j);=0A=
      return d[j]=0A=
    }=0A=
  }=0A=
  function b_(a, b, c, d) {=0A=
    if (f.isArray(b)) f.each(b, function (b, e) {=0A=
      c || bD.test(a) ? d(a, e) : b_(a + "[" + (typeof e =3D=3D "object" =
? b : "") + "]", e, c, d)=0A=
    });=0A=
    else if (!c && f.type(b) =3D=3D=3D "object") for (var e in b) b_(a + =
"[" + e + "]", b[e], c, d);=0A=
    else d(a, b)=0A=
  }=0A=
  function b$(a, c) {=0A=
    var d, e, g =3D f.ajaxSettings.flatOptions || {};=0A=
    for (d in c) c[d] !=3D=3D b && ((g[d] ? a : e || (e =3D {}))[d] =3D =
c[d]);=0A=
    e && f.extend(!0, a, e)=0A=
  }=0A=
  function bZ(a, c, d, e, f, g) {=0A=
    f =3D f || c.dataTypes[0], g =3D g || {}, g[f] =3D !0;=0A=
    var h =3D a[f],=0A=
      i =3D 0,=0A=
      j =3D h ? h.length : 0,=0A=
      k =3D a =3D=3D=3D bS,=0A=
      l;=0A=
    for (; i < j && (k || !l); i++) l =3D h[i](c, d, e), typeof l =3D=3D =
"string" && (!k || g[l] ? l =3D b : (c.dataTypes.unshift(l), l =3D bZ(a, =
c, d, e, l, g)));=0A=
    (k || !l) && !g["*"] && (l =3D bZ(a, c, d, e, "*", g));=0A=
    return l=0A=
  }=0A=
  function bY(a) {=0A=
    return function (b, c) {=0A=
      typeof b !=3D "string" && (c =3D b, b =3D "*");=0A=
      if (f.isFunction(c)) {=0A=
        var d =3D b.toLowerCase().split(bO),=0A=
          e =3D 0,=0A=
          g =3D d.length,=0A=
          h, i, j;=0A=
        for (; e < g; e++) h =3D d[e], j =3D /^\+/.test(h), j && (h =3D =
h.substr(1) || "*"), i =3D a[h] =3D a[h] || [], i[j ? "unshift" : =
"push"](c)=0A=
      }=0A=
    }=0A=
  }=0A=
  function bB(a, b, c) {=0A=
    var d =3D b =3D=3D=3D "width" ? a.offsetWidth : a.offsetHeight,=0A=
      e =3D b =3D=3D=3D "width" ? 1 : 0,=0A=
      g =3D 4;=0A=
    if (d > 0) {=0A=
      if (c !=3D=3D "border") for (; e < g; e +=3D 2) c || (d -=3D =
parseFloat(f.css(a, "padding" + bx[e])) || 0), c =3D=3D=3D "margin" ? d =
+=3D parseFloat(f.css(a, c + bx[e])) || 0 : d -=3D parseFloat(f.css(a, =
"border" + bx[e] + "Width")) || 0;=0A=
      return d + "px"=0A=
    }=0A=
    d =3D by(a, b);=0A=
    if (d < 0 || d =3D=3D null) d =3D a.style[b];=0A=
    if (bt.test(d)) return d;=0A=
    d =3D parseFloat(d) || 0;=0A=
    if (c) for (; e < g; e +=3D 2) d +=3D parseFloat(f.css(a, "padding" =
+ bx[e])) || 0, c !=3D=3D "padding" && (d +=3D parseFloat(f.css(a, =
"border" + bx[e] + "Width")) || 0), c =3D=3D=3D "margin" && (d +=3D =
parseFloat(f.css(a, c + bx[e])) || 0);=0A=
    return d + "px"=0A=
  }=0A=
  function bo(a) {=0A=
    var b =3D c.createElement("div");=0A=
    bh.appendChild(b), b.innerHTML =3D a.outerHTML;=0A=
    return b.firstChild=0A=
  }=0A=
  function bn(a) {=0A=
    var b =3D (a.nodeName || "").toLowerCase();=0A=
    b =3D=3D=3D "input" ? bm(a) : b !=3D=3D "script" && typeof =
a.getElementsByTagName !=3D "undefined" && =
f.grep(a.getElementsByTagName("input"), bm)=0A=
  }=0A=
  function bm(a) {=0A=
    if (a.type =3D=3D=3D "checkbox" || a.type =3D=3D=3D "radio") =
a.defaultChecked =3D a.checked=0A=
  }=0A=
  function bl(a) {=0A=
    return typeof a.getElementsByTagName !=3D "undefined" ? =
a.getElementsByTagName("*") : typeof a.querySelectorAll !=3D "undefined" =
? a.querySelectorAll("*") : []=0A=
  }=0A=
  function bk(a, b) {=0A=
    var c;=0A=
    b.nodeType =3D=3D=3D 1 && (b.clearAttributes && b.clearAttributes(), =
b.mergeAttributes && b.mergeAttributes(a), c =3D =
b.nodeName.toLowerCase(), c =3D=3D=3D "object" ? b.outerHTML =3D =
a.outerHTML : c !=3D=3D "input" || a.type !=3D=3D "checkbox" && a.type =
!=3D=3D "radio" ? c =3D=3D=3D "option" ? b.selected =3D =
a.defaultSelected : c =3D=3D=3D "input" || c =3D=3D=3D "textarea" ? =
b.defaultValue =3D a.defaultValue : c =3D=3D=3D "script" && b.text =
!=3D=3D a.text && (b.text =3D a.text) : (a.checked && (b.defaultChecked =
=3D b.checked =3D a.checked), b.value !=3D=3D a.value && (b.value =3D =
a.value)), b.removeAttribute(f.expando), =
b.removeAttribute("_submit_attached"), =
b.removeAttribute("_change_attached"))=0A=
  }=0A=
  function bj(a, b) {=0A=
    if (b.nodeType =3D=3D=3D 1 && !! f.hasData(a)) {=0A=
      var c, d, e, g =3D f._data(a),=0A=
        h =3D f._data(b, g),=0A=
        i =3D g.events;=0A=
      if (i) {=0A=
        delete h.handle, h.events =3D {};=0A=
        for (c in i) for (d =3D 0, e =3D i[c].length; d < e; d++) =
f.event.add(b, c, i[c][d])=0A=
      }=0A=
      h.data && (h.data =3D f.extend({}, h.data))=0A=
    }=0A=
  }=0A=
  function bi(a, b) {=0A=
    return f.nodeName(a, "table") ? a.getElementsByTagName("tbody")[0] =
|| a.appendChild(a.ownerDocument.createElement("tbody")) : a=0A=
  }=0A=
  function U(a) {=0A=
    var b =3D V.split("|"),=0A=
      c =3D a.createDocumentFragment();=0A=
    if (c.createElement) while (b.length) c.createElement(b.pop());=0A=
    return c=0A=
  }=0A=
  function T(a, b, c) {=0A=
    b =3D b || 0;=0A=
    if (f.isFunction(b)) return f.grep(a, function (a, d) {=0A=
      var e =3D !! b.call(a, d, a);=0A=
      return e =3D=3D=3D c=0A=
    });=0A=
    if (b.nodeType) return f.grep(a, function (a, d) {=0A=
      return a =3D=3D=3D b =3D=3D=3D c=0A=
    });=0A=
    if (typeof b =3D=3D "string") {=0A=
      var d =3D f.grep(a, function (a) {=0A=
        return a.nodeType =3D=3D=3D 1=0A=
      });=0A=
      if (O.test(b)) return f.filter(b, d, !c);=0A=
      b =3D f.filter(b, d)=0A=
    }=0A=
    return f.grep(a, function (a, d) {=0A=
      return f.inArray(a, b) >=3D 0 =3D=3D=3D c=0A=
    })=0A=
  }=0A=
  function S(a) {=0A=
    return !a || !a.parentNode || a.parentNode.nodeType =3D=3D=3D 11=0A=
  }=0A=
  function K() {=0A=
    return !0=0A=
  }=0A=
  function J() {=0A=
    return !1=0A=
  }=0A=
  function n(a, b, c) {=0A=
    var d =3D b + "defer",=0A=
      e =3D b + "queue",=0A=
      g =3D b + "mark",=0A=
      h =3D f._data(a, d);=0A=
    h && (c =3D=3D=3D "queue" || !f._data(a, e)) && (c =3D=3D=3D "mark" =
|| !f._data(a, g)) && setTimeout(function () {=0A=
      !f._data(a, e) && !f._data(a, g) && (f.removeData(a, d, !0), =
h.fire())=0A=
    }, 0)=0A=
  }=0A=
  function m(a) {=0A=
    for (var b in a) {=0A=
      if (b =3D=3D=3D "data" && f.isEmptyObject(a[b])) continue;=0A=
      if (b !=3D=3D "toJSON") return !1=0A=
    }=0A=
    return !0=0A=
  }=0A=
  function l(a, c, d) {=0A=
    if (d =3D=3D=3D b && a.nodeType =3D=3D=3D 1) {=0A=
      var e =3D "data-" + c.replace(k, "-$1").toLowerCase();=0A=
      d =3D a.getAttribute(e);=0A=
      if (typeof d =3D=3D "string") {=0A=
        try {=0A=
          d =3D d =3D=3D=3D "true" ? !0 : d =3D=3D=3D "false" ? !1 : d =
=3D=3D=3D "null" ? null : f.isNumeric(d) ? +d : j.test(d) ? =
f.parseJSON(d) : d=0A=
        } catch (g) {}=0A=
        f.data(a, c, d)=0A=
      } else d =3D b=0A=
    }=0A=
    return d=0A=
  }=0A=
  function h(a) {=0A=
    var b =3D g[a] =3D {},=0A=
      c, d;=0A=
    a =3D a.split(/\s+/);=0A=
    for (c =3D 0, d =3D a.length; c < d; c++) b[a[c]] =3D !0;=0A=
    return b=0A=
  }=0A=
  var c =3D a.document,=0A=
    d =3D a.navigator,=0A=
    e =3D a.location,=0A=
    f =3D function () {=0A=
      function J() {=0A=
        if (!e.isReady) {=0A=
          try {=0A=
            c.documentElement.doScroll("left")=0A=
          } catch (a) {=0A=
            setTimeout(J, 1);=0A=
            return=0A=
          }=0A=
          e.ready()=0A=
        }=0A=
      }=0A=
      var e =3D function (a, b) {=0A=
          return new e.fn.init(a, b, h)=0A=
        },=0A=
        f =3D a.jQuery,=0A=
        g =3D a.$,=0A=
        h, i =3D /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,=0A=
        j =3D /\S/,=0A=
        k =3D /^\s+/,=0A=
        l =3D /\s+$/,=0A=
        m =3D /^<(\w+)\s*\/?>(?:<\/\1>)?$/,=0A=
        n =3D /^[\],:{}\s]*$/,=0A=
        o =3D /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,=0A=
        p =3D =
/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,=0A=
        q =3D /(?:^|:|,)(?:\s*\[)+/g,=0A=
        r =3D /(webkit)[ \/]([\w.]+)/,=0A=
        s =3D /(opera)(?:.*version)?[ \/]([\w.]+)/,=0A=
        t =3D /(msie) ([\w.]+)/,=0A=
        u =3D /(mozilla)(?:.*? rv:([\w.]+))?/,=0A=
        v =3D /-([a-z]|[0-9])/ig,=0A=
        w =3D /^-ms-/,=0A=
        x =3D function (a, b) {=0A=
          return (b + "").toUpperCase()=0A=
        },=0A=
        y =3D d.userAgent,=0A=
        z, A, B, C =3D Object.prototype.toString,=0A=
        D =3D Object.prototype.hasOwnProperty,=0A=
        E =3D Array.prototype.push,=0A=
        F =3D Array.prototype.slice,=0A=
        G =3D String.prototype.trim,=0A=
        H =3D Array.prototype.indexOf,=0A=
        I =3D {};=0A=
      e.fn =3D e.prototype =3D {=0A=
        constructor: e,=0A=
        init: function (a, d, f) {=0A=
          var g, h, j, k;=0A=
          if (!a) return this;=0A=
          if (a.nodeType) {=0A=
            this.context =3D this[0] =3D a, this.length =3D 1;=0A=
            return this=0A=
          }=0A=
          if (a =3D=3D=3D "body" && !d && c.body) {=0A=
            this.context =3D c, this[0] =3D c.body, this.selector =3D a, =
this.length =3D 1;=0A=
            return this=0A=
          }=0A=
          if (typeof a =3D=3D "string") {=0A=
            a.charAt(0) !=3D=3D "<" || a.charAt(a.length - 1) !=3D=3D =
">" || a.length < 3 ? g =3D i.exec(a) : g =3D [null, a, null];=0A=
            if (g && (g[1] || !d)) {=0A=
              if (g[1]) {=0A=
                d =3D d instanceof e ? d[0] : d, k =3D d ? =
d.ownerDocument || d : c, j =3D m.exec(a), j ? e.isPlainObject(d) ? (a =
=3D [c.createElement(j[1])], e.fn.attr.call(a, d, !0)) : a =3D =
[k.createElement(j[1])] : (j =3D e.buildFragment([g[1]], [k]), a =3D =
(j.cacheable ? e.clone(j.fragment) : j.fragment).childNodes);=0A=
                return e.merge(this, a)=0A=
              }=0A=
              h =3D c.getElementById(g[2]);=0A=
              if (h && h.parentNode) {=0A=
                if (h.id !=3D=3D g[2]) return f.find(a);=0A=
                this.length =3D 1, this[0] =3D h=0A=
              }=0A=
              this.context =3D c, this.selector =3D a;=0A=
              return this=0A=
            }=0A=
            return !d || d.jquery ? (d || f).find(a) : =
this.constructor(d).find(a)=0A=
          }=0A=
          if (e.isFunction(a)) return f.ready(a);=0A=
          a.selector !=3D=3D b && (this.selector =3D a.selector, =
this.context =3D a.context);=0A=
          return e.makeArray(a, this)=0A=
        },=0A=
        selector: "",=0A=
        jquery: "1.7.2",=0A=
        length: 0,=0A=
        size: function () {=0A=
          return this.length=0A=
        },=0A=
        toArray: function () {=0A=
          return F.call(this, 0)=0A=
        },=0A=
        get: function (a) {=0A=
          return a =3D=3D null ? this.toArray() : a < 0 ? =
this[this.length + a] : this[a]=0A=
        },=0A=
        pushStack: function (a, b, c) {=0A=
          var d =3D this.constructor();=0A=
          e.isArray(a) ? E.apply(d, a) : e.merge(d, a), d.prevObject =3D =
this, d.context =3D this.context, b =3D=3D=3D "find" ? d.selector =3D =
this.selector + (this.selector ? " " : "") + c : b && (d.selector =3D =
this.selector + "." + b + "(" + c + ")");=0A=
          return d=0A=
        },=0A=
        each: function (a, b) {=0A=
          return e.each(this, a, b)=0A=
        },=0A=
        ready: function (a) {=0A=
          e.bindReady(), A.add(a);=0A=
          return this=0A=
        },=0A=
        eq: function (a) {=0A=
          a =3D +a;=0A=
          return a =3D=3D=3D -1 ? this.slice(a) : this.slice(a, a + 1)=0A=
        },=0A=
        first: function () {=0A=
          return this.eq(0)=0A=
        },=0A=
        last: function () {=0A=
          return this.eq(-1)=0A=
        },=0A=
        slice: function () {=0A=
          return this.pushStack(F.apply(this, arguments), "slice", =
F.call(arguments).join(","))=0A=
        },=0A=
        map: function (a) {=0A=
          return this.pushStack(e.map(this, function (b, c) {=0A=
            return a.call(b, c, b)=0A=
          }))=0A=
        },=0A=
        end: function () {=0A=
          return this.prevObject || this.constructor(null)=0A=
        },=0A=
        push: E,=0A=
        sort: [].sort,=0A=
        splice: [].splice=0A=
      }, e.fn.init.prototype =3D e.fn, e.extend =3D e.fn.extend =3D =
function () {=0A=
        var a, c, d, f, g, h, i =3D arguments[0] || {},=0A=
          j =3D 1,=0A=
          k =3D arguments.length,=0A=
          l =3D !1;=0A=
        typeof i =3D=3D "boolean" && (l =3D i, i =3D arguments[1] || {}, =
j =3D 2), typeof i !=3D "object" && !e.isFunction(i) && (i =3D {}), k =
=3D=3D=3D j && (i =3D this, --j);=0A=
        for (; j < k; j++) if ((a =3D arguments[j]) !=3D null) for (c in =
a) {=0A=
          d =3D i[c], f =3D a[c];=0A=
          if (i =3D=3D=3D f) continue;=0A=
          l && f && (e.isPlainObject(f) || (g =3D e.isArray(f))) ? (g ? =
(g =3D !1, h =3D d && e.isArray(d) ? d : []) : h =3D d && =
e.isPlainObject(d) ? d : {}, i[c] =3D e.extend(l, h, f)) : f !=3D=3D b =
&& (i[c] =3D f)=0A=
        }=0A=
        return i=0A=
      }, e.extend({=0A=
        noConflict: function (b) {=0A=
          a.$ =3D=3D=3D e && (a.$ =3D g), b && a.jQuery =3D=3D=3D e && =
(a.jQuery =3D f);=0A=
          return e=0A=
        },=0A=
        isReady: !1,=0A=
        readyWait: 1,=0A=
        holdReady: function (a) {=0A=
          a ? e.readyWait++ : e.ready(!0)=0A=
        },=0A=
        ready: function (a) {=0A=
          if (a =3D=3D=3D !0 && !--e.readyWait || a !=3D=3D !0 && =
!e.isReady) {=0A=
            if (!c.body) return setTimeout(e.ready, 1);=0A=
            e.isReady =3D !0;=0A=
            if (a !=3D=3D !0 && --e.readyWait > 0) return;=0A=
            A.fireWith(c, [e]), e.fn.trigger && =
e(c).trigger("ready").off("ready")=0A=
          }=0A=
        },=0A=
        bindReady: function () {=0A=
          if (!A) {=0A=
            A =3D e.Callbacks("once memory");=0A=
            if (c.readyState =3D=3D=3D "complete") return =
setTimeout(e.ready, 1);=0A=
            if (c.addEventListener) =
c.addEventListener("DOMContentLoaded", B, !1), =
a.addEventListener("load", e.ready, !1);=0A=
            else if (c.attachEvent) {=0A=
              c.attachEvent("onreadystatechange", B), =
a.attachEvent("onload", e.ready);=0A=
              var b =3D !1;=0A=
              try {=0A=
                b =3D a.frameElement =3D=3D null=0A=
              } catch (d) {}=0A=
              c.documentElement.doScroll && b && J()=0A=
            }=0A=
          }=0A=
        },=0A=
        isFunction: function (a) {=0A=
          return e.type(a) =3D=3D=3D "function"=0A=
        },=0A=
        isArray: Array.isArray ||=0A=
        function (a) {=0A=
          return e.type(a) =3D=3D=3D "array"=0A=
        },=0A=
        isWindow: function (a) {=0A=
          return a !=3D null && a =3D=3D a.window=0A=
        },=0A=
        isNumeric: function (a) {=0A=
          return !isNaN(parseFloat(a)) && isFinite(a)=0A=
        },=0A=
        type: function (a) {=0A=
          return a =3D=3D null ? String(a) : I[C.call(a)] || "object"=0A=
        },=0A=
        isPlainObject: function (a) {=0A=
          if (!a || e.type(a) !=3D=3D "object" || a.nodeType || =
e.isWindow(a)) return !1;=0A=
          try {=0A=
            if (a.constructor && !D.call(a, "constructor") && =
!D.call(a.constructor.prototype, "isPrototypeOf")) return !1=0A=
          } catch (c) {=0A=
            return !1=0A=
          }=0A=
          var d;=0A=
          for (d in a);=0A=
=0A=
          return d =3D=3D=3D b || D.call(a, d)=0A=
        },=0A=
        isEmptyObject: function (a) {=0A=
          for (var b in a) return !1;=0A=
          return !0=0A=
        },=0A=
        error: function (a) {=0A=
          throw new Error(a)=0A=
        },=0A=
        parseJSON: function (b) {=0A=
          if (typeof b !=3D "string" || !b) return null;=0A=
          b =3D e.trim(b);=0A=
          if (a.JSON && a.JSON.parse) return a.JSON.parse(b);=0A=
          if (n.test(b.replace(o, "@").replace(p, "]").replace(q, ""))) =
return (new Function("return " + b))();=0A=
          e.error("Invalid JSON: " + b)=0A=
        },=0A=
        parseXML: function (c) {=0A=
          if (typeof c !=3D "string" || !c) return null;=0A=
          var d, f;=0A=
          try {=0A=
            a.DOMParser ? (f =3D new DOMParser, d =3D =
f.parseFromString(c, "text/xml")) : (d =3D new =
ActiveXObject("Microsoft.XMLDOM"), d.async =3D "false", d.loadXML(c))=0A=
          } catch (g) {=0A=
            d =3D b=0A=
          }(!d || !d.documentElement || =
d.getElementsByTagName("parsererror").length) && e.error("Invalid XML: " =
+ c);=0A=
          return d=0A=
        },=0A=
        noop: function () {},=0A=
        globalEval: function (b) {=0A=
          b && j.test(b) && (a.execScript ||=0A=
          function (b) {=0A=
            a.eval.call(a, b)=0A=
          })(b)=0A=
        },=0A=
        camelCase: function (a) {=0A=
          return a.replace(w, "ms-").replace(v, x)=0A=
        },=0A=
        nodeName: function (a, b) {=0A=
          return a.nodeName && a.nodeName.toUpperCase() =3D=3D=3D =
b.toUpperCase()=0A=
        },=0A=
        each: function (a, c, d) {=0A=
          var f, g =3D 0,=0A=
            h =3D a.length,=0A=
            i =3D h =3D=3D=3D b || e.isFunction(a);=0A=
          if (d) {=0A=
            if (i) {=0A=
              for (f in a) if (c.apply(a[f], d) =3D=3D=3D !1) break=0A=
            } else for (; g < h;) if (c.apply(a[g++], d) =3D=3D=3D !1) =
break=0A=
          } else if (i) {=0A=
            for (f in a) if (c.call(a[f], f, a[f]) =3D=3D=3D !1) break=0A=
          } else for (; g < h;) if (c.call(a[g], g, a[g++]) =3D=3D=3D =
!1) break;=0A=
          return a=0A=
        },=0A=
        trim: G ?=0A=
        function (a) {=0A=
          return a =3D=3D null ? "" : G.call(a)=0A=
        } : function (a) {=0A=
          return a =3D=3D null ? "" : (a + "").replace(k, "").replace(l, =
"")=0A=
        },=0A=
        makeArray: function (a, b) {=0A=
          var c =3D b || [];=0A=
          if (a !=3D null) {=0A=
            var d =3D e.type(a);=0A=
            a.length =3D=3D null || d =3D=3D=3D "string" || d =3D=3D=3D =
"function" || d =3D=3D=3D "regexp" || e.isWindow(a) ? E.call(c, a) : =
e.merge(c, a)=0A=
          }=0A=
          return c=0A=
        },=0A=
        inArray: function (a, b, c) {=0A=
          var d;=0A=
          if (b) {=0A=
            if (H) return H.call(b, a, c);=0A=
            d =3D b.length, c =3D c ? c < 0 ? Math.max(0, d + c) : c : 0;=0A=
            for (; c < d; c++) if (c in b && b[c] =3D=3D=3D a) return c=0A=
          }=0A=
          return -1=0A=
        },=0A=
        merge: function (a, c) {=0A=
          var d =3D a.length,=0A=
            e =3D 0;=0A=
          if (typeof c.length =3D=3D "number") for (var f =3D c.length; =
e < f; e++) a[d++] =3D c[e];=0A=
          else while (c[e] !=3D=3D b) a[d++] =3D c[e++];=0A=
          a.length =3D d;=0A=
          return a=0A=
        },=0A=
        grep: function (a, b, c) {=0A=
          var d =3D [],=0A=
            e;=0A=
          c =3D !! c;=0A=
          for (var f =3D 0, g =3D a.length; f < g; f++) e =3D !! b(a[f], =
f), c !=3D=3D e && d.push(a[f]);=0A=
          return d=0A=
        },=0A=
        map: function (a, c, d) {=0A=
          var f, g, h =3D [],=0A=
            i =3D 0,=0A=
            j =3D a.length,=0A=
            k =3D a instanceof e || j !=3D=3D b && typeof j =3D=3D =
"number" && (j > 0 && a[0] && a[j - 1] || j =3D=3D=3D 0 || e.isArray(a));=0A=
          if (k) for (; i < j; i++) f =3D c(a[i], i, d), f !=3D null && =
(h[h.length] =3D f);=0A=
          else for (g in a) f =3D c(a[g], g, d), f !=3D null && =
(h[h.length] =3D f);=0A=
          return h.concat.apply([], h)=0A=
        },=0A=
        guid: 1,=0A=
        proxy: function (a, c) {=0A=
          if (typeof c =3D=3D "string") {=0A=
            var d =3D a[c];=0A=
            c =3D a, a =3D d=0A=
          }=0A=
          if (!e.isFunction(a)) return b;=0A=
          var f =3D F.call(arguments, 2),=0A=
            g =3D function () {=0A=
              return a.apply(c, f.concat(F.call(arguments)))=0A=
            };=0A=
          g.guid =3D a.guid =3D a.guid || g.guid || e.guid++;=0A=
          return g=0A=
        },=0A=
        access: function (a, c, d, f, g, h, i) {=0A=
          var j, k =3D d =3D=3D null,=0A=
            l =3D 0,=0A=
            m =3D a.length;=0A=
          if (d && typeof d =3D=3D "object") {=0A=
            for (l in d) e.access(a, c, l, d[l], 1, h, f);=0A=
            g =3D 1=0A=
          } else if (f !=3D=3D b) {=0A=
            j =3D i =3D=3D=3D b && e.isFunction(f), k && (j ? (j =3D c, =
c =3D function (a, b, c) {=0A=
              return j.call(e(a), c)=0A=
            }) : (c.call(a, f), c =3D null));=0A=
            if (c) for (; l < m; l++) c(a[l], d, j ? f.call(a[l], l, =
c(a[l], d)) : f, i);=0A=
            g =3D 1=0A=
          }=0A=
          return g ? a : k ? c.call(a) : m ? c(a[0], d) : h=0A=
        },=0A=
        now: function () {=0A=
          return (new Date).getTime()=0A=
        },=0A=
        uaMatch: function (a) {=0A=
          a =3D a.toLowerCase();=0A=
          var b =3D r.exec(a) || s.exec(a) || t.exec(a) || =
a.indexOf("compatible") < 0 && u.exec(a) || [];=0A=
          return {=0A=
            browser: b[1] || "",=0A=
            version: b[2] || "0"=0A=
          }=0A=
        },=0A=
        sub: function () {=0A=
          function a(b, c) {=0A=
            return new a.fn.init(b, c)=0A=
          }=0A=
          e.extend(!0, a, this), a.superclass =3D this, a.fn =3D =
a.prototype =3D this(), a.fn.constructor =3D a, a.sub =3D this.sub, =
a.fn.init =3D function (d, f) {=0A=
            f && f instanceof e && !(f instanceof a) && (f =3D a(f));=0A=
            return e.fn.init.call(this, d, f, b)=0A=
          }, a.fn.init.prototype =3D a.fn;=0A=
          var b =3D a(c);=0A=
          return a=0A=
        },=0A=
        browser: {}=0A=
      }), e.each("Boolean Number String Function Array Date RegExp =
Object".split(" "), function (a, b) {=0A=
        I["[object " + b + "]"] =3D b.toLowerCase()=0A=
      }), z =3D e.uaMatch(y), z.browser && (e.browser[z.browser] =3D !0, =
e.browser.version =3D z.version), e.browser.webkit && (e.browser.safari =
=3D !0), j.test(" ") && (k =3D /^[\s\xA0]+/, l =3D /[\s\xA0]+$/), h =3D =
e(c), c.addEventListener ? B =3D function () {=0A=
        c.removeEventListener("DOMContentLoaded", B, !1), e.ready()=0A=
      } : c.attachEvent && (B =3D function () {=0A=
        c.readyState =3D=3D=3D "complete" && =
(c.detachEvent("onreadystatechange", B), e.ready())=0A=
      });=0A=
      return e=0A=
    }(),=0A=
    g =3D {};=0A=
  f.Callbacks =3D function (a) {=0A=
    a =3D a ? g[a] || h(a) : {};=0A=
    var c =3D [],=0A=
      d =3D [],=0A=
      e, i, j, k, l, m, n =3D function (b) {=0A=
        var d, e, g, h, i;=0A=
        for (d =3D 0, e =3D b.length; d < e; d++) g =3D b[d], h =3D =
f.type(g), h =3D=3D=3D "array" ? n(g) : h =3D=3D=3D "function" && =
(!a.unique || !p.has(g)) && c.push(g)=0A=
      },=0A=
      o =3D function (b, f) {=0A=
        f =3D f || [], e =3D !a.memory || [b, f], i =3D !0, j =3D !0, m =
=3D k || 0, k =3D 0, l =3D c.length;=0A=
        for (; c && m < l; m++) if (c[m].apply(b, f) =3D=3D=3D !1 && =
a.stopOnFalse) {=0A=
          e =3D !0;=0A=
          break=0A=
        }=0A=
        j =3D !1, c && (a.once ? e =3D=3D=3D !0 ? p.disable() : c =3D [] =
: d && d.length && (e =3D d.shift(), p.fireWith(e[0], e[1])))=0A=
      },=0A=
      p =3D {=0A=
        add: function () {=0A=
          if (c) {=0A=
            var a =3D c.length;=0A=
            n(arguments), j ? l =3D c.length : e && e !=3D=3D !0 && (k =
=3D a, o(e[0], e[1]))=0A=
          }=0A=
          return this=0A=
        },=0A=
        remove: function () {=0A=
          if (c) {=0A=
            var b =3D arguments,=0A=
              d =3D 0,=0A=
              e =3D b.length;=0A=
            for (; d < e; d++) for (var f =3D 0; f < c.length; f++) if =
(b[d] =3D=3D=3D c[f]) {=0A=
              j && f <=3D l && (l--, f <=3D m && m--), c.splice(f--, 1);=0A=
              if (a.unique) break=0A=
            }=0A=
          }=0A=
          return this=0A=
        },=0A=
        has: function (a) {=0A=
          if (c) {=0A=
            var b =3D 0,=0A=
              d =3D c.length;=0A=
            for (; b < d; b++) if (a =3D=3D=3D c[b]) return !0=0A=
          }=0A=
          return !1=0A=
        },=0A=
        empty: function () {=0A=
          c =3D [];=0A=
          return this=0A=
        },=0A=
        disable: function () {=0A=
          c =3D d =3D e =3D b;=0A=
          return this=0A=
        },=0A=
        disabled: function () {=0A=
          return !c=0A=
        },=0A=
        lock: function () {=0A=
          d =3D b, (!e || e =3D=3D=3D !0) && p.disable();=0A=
          return this=0A=
        },=0A=
        locked: function () {=0A=
          return !d=0A=
        },=0A=
        fireWith: function (b, c) {=0A=
          d && (j ? a.once || d.push([b, c]) : (!a.once || !e) && o(b, =
c));=0A=
          return this=0A=
        },=0A=
        fire: function () {=0A=
          p.fireWith(this, arguments);=0A=
          return this=0A=
        },=0A=
        fired: function () {=0A=
          return !!i=0A=
        }=0A=
      };=0A=
    return p=0A=
  };=0A=
  var i =3D [].slice;=0A=
  f.extend({=0A=
    Deferred: function (a) {=0A=
      var b =3D f.Callbacks("once memory"),=0A=
        c =3D f.Callbacks("once memory"),=0A=
        d =3D f.Callbacks("memory"),=0A=
        e =3D "pending",=0A=
        g =3D {=0A=
          resolve: b,=0A=
          reject: c,=0A=
          notify: d=0A=
        },=0A=
        h =3D {=0A=
          done: b.add,=0A=
          fail: c.add,=0A=
          progress: d.add,=0A=
          state: function () {=0A=
            return e=0A=
          },=0A=
          isResolved: b.fired,=0A=
          isRejected: c.fired,=0A=
          then: function (a, b, c) {=0A=
            i.done(a).fail(b).progress(c);=0A=
            return this=0A=
          },=0A=
          always: function () {=0A=
            i.done.apply(i, arguments).fail.apply(i, arguments);=0A=
            return this=0A=
          },=0A=
          pipe: function (a, b, c) {=0A=
            return f.Deferred(function (d) {=0A=
              f.each({=0A=
                done: [a, "resolve"],=0A=
                fail: [b, "reject"],=0A=
                progress: [c, "notify"]=0A=
              }, function (a, b) {=0A=
                var c =3D b[0],=0A=
                  e =3D b[1],=0A=
                  g;=0A=
                f.isFunction(c) ? i[a](function () {=0A=
                  g =3D c.apply(this, arguments), g && =
f.isFunction(g.promise) ? g.promise().then(d.resolve, d.reject, =
d.notify) : d[e + "With"](this =3D=3D=3D i ? d : this, [g])=0A=
                }) : i[a](d[e])=0A=
              })=0A=
            }).promise()=0A=
          },=0A=
          promise: function (a) {=0A=
            if (a =3D=3D null) a =3D h;=0A=
            else for (var b in h) a[b] =3D h[b];=0A=
            return a=0A=
          }=0A=
        },=0A=
        i =3D h.promise({}),=0A=
        j;=0A=
      for (j in g) i[j] =3D g[j].fire, i[j + "With"] =3D g[j].fireWith;=0A=
      i.done(function () {=0A=
        e =3D "resolved"=0A=
      }, c.disable, d.lock).fail(function () {=0A=
        e =3D "rejected"=0A=
      }, b.disable, d.lock), a && a.call(i, i);=0A=
      return i=0A=
    },=0A=
    when: function (a) {=0A=
      function m(a) {=0A=
        return function (b) {=0A=
          e[a] =3D arguments.length > 1 ? i.call(arguments, 0) : b, =
j.notifyWith(k, e)=0A=
        }=0A=
      }=0A=
      function l(a) {=0A=
        return function (c) {=0A=
          b[a] =3D arguments.length > 1 ? i.call(arguments, 0) : c, --g =
|| j.resolveWith(j, b)=0A=
        }=0A=
      }=0A=
      var b =3D i.call(arguments, 0),=0A=
        c =3D 0,=0A=
        d =3D b.length,=0A=
        e =3D Array(d),=0A=
        g =3D d,=0A=
        h =3D d,=0A=
        j =3D d <=3D 1 && a && f.isFunction(a.promise) ? a : =
f.Deferred(),=0A=
        k =3D j.promise();=0A=
      if (d > 1) {=0A=
        for (; c < d; c++) b[c] && b[c].promise && =
f.isFunction(b[c].promise) ? b[c].promise().then(l(c), j.reject, m(c)) : =
--g;=0A=
        g || j.resolveWith(j, b)=0A=
      } else j !=3D=3D a && j.resolveWith(j, d ? [a] : []);=0A=
      return k=0A=
    }=0A=
  }), f.support =3D function () {=0A=
    var b, d, e, g, h, i, j, k, l, m, n, o, p =3D c.createElement("div"),=0A=
      q =3D c.documentElement;=0A=
    p.setAttribute("className", "t"), p.innerHTML =3D "   =
<link/><table></table><a href=3D'/a' =
style=3D'top:1px;float:left;opacity:.55;'>a</a><input =
type=3D'checkbox'/>", d =3D p.getElementsByTagName("*"), e =3D =
p.getElementsByTagName("a")[0];=0A=
    if (!d || !d.length || !e) return {};=0A=
    g =3D c.createElement("select"), h =3D =
g.appendChild(c.createElement("option")), i =3D =
p.getElementsByTagName("input")[0], b =3D {=0A=
      leadingWhitespace: p.firstChild.nodeType =3D=3D=3D 3,=0A=
      tbody: !p.getElementsByTagName("tbody").length,=0A=
      htmlSerialize: !! p.getElementsByTagName("link").length,=0A=
      style: /top/.test(e.getAttribute("style")),=0A=
      hrefNormalized: e.getAttribute("href") =3D=3D=3D "/a",=0A=
      opacity: /^0.55/.test(e.style.opacity),=0A=
      cssFloat: !! e.style.cssFloat,=0A=
      checkOn: i.value =3D=3D=3D "on",=0A=
      optSelected: h.selected,=0A=
      getSetAttribute: p.className !=3D=3D "t",=0A=
      enctype: !! c.createElement("form").enctype,=0A=
      html5Clone: c.createElement("nav").cloneNode(!0).outerHTML !=3D=3D =
"<:nav></:nav>",=0A=
      submitBubbles: !0,=0A=
      changeBubbles: !0,=0A=
      focusinBubbles: !1,=0A=
      deleteExpando: !0,=0A=
      noCloneEvent: !0,=0A=
      inlineBlockNeedsLayout: !1,=0A=
      shrinkWrapBlocks: !1,=0A=
      reliableMarginRight: !0,=0A=
      pixelMargin: !0=0A=
    }, f.boxModel =3D b.boxModel =3D c.compatMode =3D=3D=3D =
"CSS1Compat", i.checked =3D !0, b.noCloneChecked =3D =
i.cloneNode(!0).checked, g.disabled =3D !0, b.optDisabled =3D =
!h.disabled;=0A=
    try {=0A=
      delete p.test=0A=
    } catch (r) {=0A=
      b.deleteExpando =3D !1=0A=
    }!p.addEventListener && p.attachEvent && p.fireEvent && =
(p.attachEvent("onclick", function () {=0A=
      b.noCloneEvent =3D !1=0A=
    }), p.cloneNode(!0).fireEvent("onclick")), i =3D =
c.createElement("input"), i.value =3D "t", i.setAttribute("type", =
"radio"), b.radioValue =3D i.value =3D=3D=3D "t", =
i.setAttribute("checked", "checked"), i.setAttribute("name", "t"), =
p.appendChild(i), j =3D c.createDocumentFragment(), =
j.appendChild(p.lastChild), b.checkClone =3D =
j.cloneNode(!0).cloneNode(!0).lastChild.checked, b.appendChecked =3D =
i.checked, j.removeChild(i), j.appendChild(p);=0A=
    if (p.attachEvent) for (n in {=0A=
      submit: 1,=0A=
      change: 1,=0A=
      focusin: 1=0A=
    }) m =3D "on" + n, o =3D m in p, o || (p.setAttribute(m, "return;"), =
o =3D typeof p[m] =3D=3D "function"), b[n + "Bubbles"] =3D o;=0A=
    j.removeChild(p), j =3D g =3D h =3D p =3D i =3D null, f(function () {=0A=
      var d, e, g, h, i, j, l, m, n, q, r, s, t, u =3D =
c.getElementsByTagName("body")[0];=0A=
      !u || (m =3D 1, t =3D "padding:0;margin:0;border:", r =3D =
"position:absolute;top:0;left:0;width:1px;height:1px;", s =3D t + =
"0;visibility:hidden;", n =3D "style=3D'" + r + t + "5px solid #000;", q =
=3D "<div " + n + "display:block;'><div style=3D'" + t + =
"0;display:block;overflow:hidden;'></div></div>" + "<table " + n + "' =
cellpadding=3D'0' cellspacing=3D'0'>" + "<tr><td></td></tr></table>", d =
=3D c.createElement("div"), d.style.cssText =3D s + =
"width:0;height:0;position:static;top:0;margin-top:" + m + "px", =
u.insertBefore(d, u.firstChild), p =3D c.createElement("div"), =
d.appendChild(p), p.innerHTML =3D "<table><tr><td style=3D'" + t + =
"0;display:none'></td><td>t</td></tr></table>", k =3D =
p.getElementsByTagName("td"), o =3D k[0].offsetHeight =3D=3D=3D 0, =
k[0].style.display =3D "", k[1].style.display =3D "none", =
b.reliableHiddenOffsets =3D o && k[0].offsetHeight =3D=3D=3D 0, =
a.getComputedStyle && (p.innerHTML =3D "", l =3D c.createElement("div"), =
l.style.width =3D "0", l.style.marginRight =3D "0", p.style.width =3D =
"2px", p.appendChild(l), b.reliableMarginRight =3D =
(parseInt((a.getComputedStyle(l, null) || {=0A=
        marginRight: 0=0A=
      }).marginRight, 10) || 0) =3D=3D=3D 0), typeof p.style.zoom !=3D =
"undefined" && (p.innerHTML =3D "", p.style.width =3D p.style.padding =
=3D "1px", p.style.border =3D 0, p.style.overflow =3D "hidden", =
p.style.display =3D "inline", p.style.zoom =3D 1, =
b.inlineBlockNeedsLayout =3D p.offsetWidth =3D=3D=3D 3, p.style.display =
=3D "block", p.style.overflow =3D "visible", p.innerHTML =3D "<div =
style=3D'width:5px;'></div>", b.shrinkWrapBlocks =3D p.offsetWidth =
!=3D=3D 3), p.style.cssText =3D r + s, p.innerHTML =3D q, e =3D =
p.firstChild, g =3D e.firstChild, i =3D =
e.nextSibling.firstChild.firstChild, j =3D {=0A=
        doesNotAddBorder: g.offsetTop !=3D=3D 5,=0A=
        doesAddBorderForTableAndCells: i.offsetTop =3D=3D=3D 5=0A=
      }, g.style.position =3D "fixed", g.style.top =3D "20px", =
j.fixedPosition =3D g.offsetTop =3D=3D=3D 20 || g.offsetTop =3D=3D=3D =
15, g.style.position =3D g.style.top =3D "", e.style.overflow =3D =
"hidden", e.style.position =3D "relative", =
j.subtractsBorderForOverflowNotVisible =3D g.offsetTop =3D=3D=3D -5, =
j.doesNotIncludeMarginInBodyOffset =3D u.offsetTop !=3D=3D m, =
a.getComputedStyle && (p.style.marginTop =3D "1%", b.pixelMargin =3D =
(a.getComputedStyle(p, null) || {=0A=
        marginTop: 0=0A=
      }).marginTop !=3D=3D "1%"), typeof d.style.zoom !=3D "undefined" =
&& (d.style.zoom =3D 1), u.removeChild(d), l =3D p =3D d =3D null, =
f.extend(b, j))=0A=
    });=0A=
    return b=0A=
  }();=0A=
  var j =3D /^(?:\{.*\}|\[.*\])$/,=0A=
    k =3D /([A-Z])/g;=0A=
  f.extend({=0A=
    cache: {},=0A=
    uuid: 0,=0A=
    expando: "jQuery" + (f.fn.jquery + Math.random()).replace(/\D/g, ""),=0A=
    noData: {=0A=
      embed: !0,=0A=
      object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",=0A=
      applet: !0=0A=
    },=0A=
    hasData: function (a) {=0A=
      a =3D a.nodeType ? f.cache[a[f.expando]] : a[f.expando];=0A=
      return !!a && !m(a)=0A=
    },=0A=
    data: function (a, c, d, e) {=0A=
      if ( !! f.acceptData(a)) {=0A=
        var g, h, i, j =3D f.expando,=0A=
          k =3D typeof c =3D=3D "string",=0A=
          l =3D a.nodeType,=0A=
          m =3D l ? f.cache : a,=0A=
          n =3D l ? a[j] : a[j] && j,=0A=
          o =3D c =3D=3D=3D "events";=0A=
        if ((!n || !m[n] || !o && !e && !m[n].data) && k && d =3D=3D=3D =
b) return;=0A=
        n || (l ? a[j] =3D n =3D ++f.uuid : n =3D j), m[n] || (m[n] =3D =
{}, l || (m[n].toJSON =3D f.noop));=0A=
        if (typeof c =3D=3D "object" || typeof c =3D=3D "function") e ? =
m[n] =3D f.extend(m[n], c) : m[n].data =3D f.extend(m[n].data, c);=0A=
        g =3D h =3D m[n], e || (h.data || (h.data =3D {}), h =3D =
h.data), d !=3D=3D b && (h[f.camelCase(c)] =3D d);=0A=
        if (o && !h[c]) return g.events;=0A=
        k ? (i =3D h[c], i =3D=3D null && (i =3D h[f.camelCase(c)])) : i =
=3D h;=0A=
        return i=0A=
      }=0A=
    },=0A=
    removeData: function (a, b, c) {=0A=
      if ( !! f.acceptData(a)) {=0A=
        var d, e, g, h =3D f.expando,=0A=
          i =3D a.nodeType,=0A=
          j =3D i ? f.cache : a,=0A=
          k =3D i ? a[h] : h;=0A=
        if (!j[k]) return;=0A=
        if (b) {=0A=
          d =3D c ? j[k] : j[k].data;=0A=
          if (d) {=0A=
            f.isArray(b) || (b in d ? b =3D [b] : (b =3D f.camelCase(b), =
b in d ? b =3D [b] : b =3D b.split(" ")));=0A=
            for (e =3D 0, g =3D b.length; e < g; e++) delete d[b[e]];=0A=
            if (!(c ? m : f.isEmptyObject)(d)) return=0A=
          }=0A=
        }=0A=
        if (!c) {=0A=
          delete j[k].data;=0A=
          if (!m(j[k])) return=0A=
        }=0A=
        f.support.deleteExpando || !j.setInterval ? delete j[k] : j[k] =
=3D null, i && (f.support.deleteExpando ? delete a[h] : =
a.removeAttribute ? a.removeAttribute(h) : a[h] =3D null)=0A=
      }=0A=
    },=0A=
    _data: function (a, b, c) {=0A=
      return f.data(a, b, c, !0)=0A=
    },=0A=
    acceptData: function (a) {=0A=
      if (a.nodeName) {=0A=
        var b =3D f.noData[a.nodeName.toLowerCase()];=0A=
        if (b) return b !=3D=3D !0 && a.getAttribute("classid") =
=3D=3D=3D b=0A=
      }=0A=
      return !0=0A=
    }=0A=
  }), f.fn.extend({=0A=
    data: function (a, c) {=0A=
      var d, e, g, h, i, j =3D this[0],=0A=
        k =3D 0,=0A=
        m =3D null;=0A=
      if (a =3D=3D=3D b) {=0A=
        if (this.length) {=0A=
          m =3D f.data(j);=0A=
          if (j.nodeType =3D=3D=3D 1 && !f._data(j, "parsedAttrs")) {=0A=
            g =3D j.attributes;=0A=
            for (i =3D g.length; k < i; k++) h =3D g[k].name, =
h.indexOf("data-") =3D=3D=3D 0 && (h =3D f.camelCase(h.substring(5)), =
l(j, h, m[h]));=0A=
            f._data(j, "parsedAttrs", !0)=0A=
          }=0A=
        }=0A=
        return m=0A=
      }=0A=
      if (typeof a =3D=3D "object") return this.each(function () {=0A=
        f.data(this, a)=0A=
      });=0A=
      d =3D a.split(".", 2), d[1] =3D d[1] ? "." + d[1] : "", e =3D d[1] =
+ "!";=0A=
      return f.access(this, function (c) {=0A=
        if (c =3D=3D=3D b) {=0A=
          m =3D this.triggerHandler("getData" + e, [d[0]]), m =3D=3D=3D =
b && j && (m =3D f.data(j, a), m =3D l(j, a, m));=0A=
          return m =3D=3D=3D b && d[1] ? this.data(d[0]) : m=0A=
        }=0A=
        d[1] =3D c, this.each(function () {=0A=
          var b =3D f(this);=0A=
          b.triggerHandler("setData" + e, d), f.data(this, a, c), =
b.triggerHandler("changeData" + e, d)=0A=
        })=0A=
      }, null, c, arguments.length > 1, null, !1)=0A=
    },=0A=
    removeData: function (a) {=0A=
      return this.each(function () {=0A=
        f.removeData(this, a)=0A=
      })=0A=
    }=0A=
  }), f.extend({=0A=
    _mark: function (a, b) {=0A=
      a && (b =3D (b || "fx") + "mark", f._data(a, b, (f._data(a, b) || =
0) + 1))=0A=
    },=0A=
    _unmark: function (a, b, c) {=0A=
      a !=3D=3D !0 && (c =3D b, b =3D a, a =3D !1);=0A=
      if (b) {=0A=
        c =3D c || "fx";=0A=
        var d =3D c + "mark",=0A=
          e =3D a ? 0 : (f._data(b, d) || 1) - 1;=0A=
        e ? f._data(b, d, e) : (f.removeData(b, d, !0), n(b, c, "mark"))=0A=
      }=0A=
    },=0A=
    queue: function (a, b, c) {=0A=
      var d;=0A=
      if (a) {=0A=
        b =3D (b || "fx") + "queue", d =3D f._data(a, b), c && (!d || =
f.isArray(c) ? d =3D f._data(a, b, f.makeArray(c)) : d.push(c));=0A=
        return d || []=0A=
      }=0A=
    },=0A=
    dequeue: function (a, b) {=0A=
      b =3D b || "fx";=0A=
      var c =3D f.queue(a, b),=0A=
        d =3D c.shift(),=0A=
        e =3D {};=0A=
      d =3D=3D=3D "inprogress" && (d =3D c.shift()), d && (b =3D=3D=3D =
"fx" && c.unshift("inprogress"), f._data(a, b + ".run", e), d.call(a, =
function () {=0A=
        f.dequeue(a, b)=0A=
      }, e)), c.length || (f.removeData(a, b + "queue " + b + ".run", =
!0), n(a, b, "queue"))=0A=
    }=0A=
  }), f.fn.extend({=0A=
    queue: function (a, c) {=0A=
      var d =3D 2;=0A=
      typeof a !=3D "string" && (c =3D a, a =3D "fx", d--);=0A=
      if (arguments.length < d) return f.queue(this[0], a);=0A=
      return c =3D=3D=3D b ? this : this.each(function () {=0A=
        var b =3D f.queue(this, a, c);=0A=
        a =3D=3D=3D "fx" && b[0] !=3D=3D "inprogress" && f.dequeue(this, =
a)=0A=
      })=0A=
    },=0A=
    dequeue: function (a) {=0A=
      return this.each(function () {=0A=
        f.dequeue(this, a)=0A=
      })=0A=
    },=0A=
    delay: function (a, b) {=0A=
      a =3D f.fx ? f.fx.speeds[a] || a : a, b =3D b || "fx";=0A=
      return this.queue(b, function (b, c) {=0A=
        var d =3D setTimeout(b, a);=0A=
        c.stop =3D function () {=0A=
          clearTimeout(d)=0A=
        }=0A=
      })=0A=
    },=0A=
    clearQueue: function (a) {=0A=
      return this.queue(a || "fx", [])=0A=
    },=0A=
    promise: function (a, c) {=0A=
      function m() {=0A=
        --h || d.resolveWith(e, [e])=0A=
      }=0A=
      typeof a !=3D "string" && (c =3D a, a =3D b), a =3D a || "fx";=0A=
      var d =3D f.Deferred(),=0A=
        e =3D this,=0A=
        g =3D e.length,=0A=
        h =3D 1,=0A=
        i =3D a + "defer",=0A=
        j =3D a + "queue",=0A=
        k =3D a + "mark",=0A=
        l;=0A=
      while (g--) if (l =3D f.data(e[g], i, b, !0) || (f.data(e[g], j, =
b, !0) || f.data(e[g], k, b, !0)) && f.data(e[g], i, f.Callbacks("once =
memory"), !0)) h++, l.add(m);=0A=
      m();=0A=
      return d.promise(c)=0A=
    }=0A=
  });=0A=
  var o =3D /[\n\t\r]/g,=0A=
    p =3D /\s+/,=0A=
    q =3D /\r/g,=0A=
    r =3D /^(?:button|input)$/i,=0A=
    s =3D /^(?:button|input|object|select|textarea)$/i,=0A=
    t =3D /^a(?:rea)?$/i,=0A=
    u =3D =
/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop=
|multiple|open|readonly|required|scoped|selected)$/i,=0A=
    v =3D f.support.getSetAttribute,=0A=
    w, x, y;=0A=
  f.fn.extend({=0A=
    attr: function (a, b) {=0A=
      return f.access(this, f.attr, a, b, arguments.length > 1)=0A=
    },=0A=
    removeAttr: function (a) {=0A=
      return this.each(function () {=0A=
        f.removeAttr(this, a)=0A=
      })=0A=
    },=0A=
    prop: function (a, b) {=0A=
      return f.access(this, f.prop, a, b, arguments.length > 1)=0A=
    },=0A=
    removeProp: function (a) {=0A=
      a =3D f.propFix[a] || a;=0A=
      return this.each(function () {=0A=
        try {=0A=
          this[a] =3D b, delete this[a]=0A=
        } catch (c) {}=0A=
      })=0A=
    },=0A=
    addClass: function (a) {=0A=
      var b, c, d, e, g, h, i;=0A=
      if (f.isFunction(a)) return this.each(function (b) {=0A=
        f(this).addClass(a.call(this, b, this.className))=0A=
      });=0A=
      if (a && typeof a =3D=3D "string") {=0A=
        b =3D a.split(p);=0A=
        for (c =3D 0, d =3D this.length; c < d; c++) {=0A=
          e =3D this[c];=0A=
          if (e.nodeType =3D=3D=3D 1) if (!e.className && b.length =
=3D=3D=3D 1) e.className =3D a;=0A=
          else {=0A=
            g =3D " " + e.className + " ";=0A=
            for (h =3D 0, i =3D b.length; h < i; h++)~g.indexOf(" " + =
b[h] + " ") || (g +=3D b[h] + " ");=0A=
            e.className =3D f.trim(g)=0A=
          }=0A=
        }=0A=
      }=0A=
      return this=0A=
    },=0A=
    removeClass: function (a) {=0A=
      var c, d, e, g, h, i, j;=0A=
      if (f.isFunction(a)) return this.each(function (b) {=0A=
        f(this).removeClass(a.call(this, b, this.className))=0A=
      });=0A=
      if (a && typeof a =3D=3D "string" || a =3D=3D=3D b) {=0A=
        c =3D (a || "").split(p);=0A=
        for (d =3D 0, e =3D this.length; d < e; d++) {=0A=
          g =3D this[d];=0A=
          if (g.nodeType =3D=3D=3D 1 && g.className) if (a) {=0A=
            h =3D (" " + g.className + " ").replace(o, " ");=0A=
            for (i =3D 0, j =3D c.length; i < j; i++) h =3D h.replace(" =
" + c[i] + " ", " ");=0A=
            g.className =3D f.trim(h)=0A=
          } else g.className =3D ""=0A=
        }=0A=
      }=0A=
      return this=0A=
    },=0A=
    toggleClass: function (a, b) {=0A=
      var c =3D typeof a,=0A=
        d =3D typeof b =3D=3D "boolean";=0A=
      if (f.isFunction(a)) return this.each(function (c) {=0A=
        f(this).toggleClass(a.call(this, c, this.className, b), b)=0A=
      });=0A=
      return this.each(function () {=0A=
        if (c =3D=3D=3D "string") {=0A=
          var e, g =3D 0,=0A=
            h =3D f(this),=0A=
            i =3D b,=0A=
            j =3D a.split(p);=0A=
          while (e =3D j[g++]) i =3D d ? i : !h.hasClass(e), h[i ? =
"addClass" : "removeClass"](e)=0A=
        } else if (c =3D=3D=3D "undefined" || c =3D=3D=3D "boolean") =
this.className && f._data(this, "__className__", this.className), =
this.className =3D this.className || a =3D=3D=3D !1 ? "" : f._data(this, =
"__className__") || ""=0A=
      })=0A=
    },=0A=
    hasClass: function (a) {=0A=
      var b =3D " " + a + " ",=0A=
        c =3D 0,=0A=
        d =3D this.length;=0A=
      for (; c < d; c++) if (this[c].nodeType =3D=3D=3D 1 && (" " + =
this[c].className + " ").replace(o, " ").indexOf(b) > -1) return !0;=0A=
      return !1=0A=
    },=0A=
    val: function (a) {=0A=
      var c, d, e, g =3D this[0]; {=0A=
        if ( !! arguments.length) {=0A=
          e =3D f.isFunction(a);=0A=
          return this.each(function (d) {=0A=
            var g =3D f(this),=0A=
              h;=0A=
            if (this.nodeType =3D=3D=3D 1) {=0A=
              e ? h =3D a.call(this, d, g.val()) : h =3D a, h =3D=3D =
null ? h =3D "" : typeof h =3D=3D "number" ? h +=3D "" : f.isArray(h) && =
(h =3D f.map(h, function (a) {=0A=
                return a =3D=3D null ? "" : a + ""=0A=
              })), c =3D f.valHooks[this.type] || =
f.valHooks[this.nodeName.toLowerCase()];=0A=
              if (!c || !("set" in c) || c.set(this, h, "value") =
=3D=3D=3D b) this.value =3D h=0A=
            }=0A=
          })=0A=
        }=0A=
        if (g) {=0A=
          c =3D f.valHooks[g.type] || =
f.valHooks[g.nodeName.toLowerCase()];=0A=
          if (c && "get" in c && (d =3D c.get(g, "value")) !=3D=3D b) =
return d;=0A=
          d =3D g.value;=0A=
          return typeof d =3D=3D "string" ? d.replace(q, "") : d =3D=3D =
null ? "" : d=0A=
        }=0A=
      }=0A=
    }=0A=
  }), f.extend({=0A=
    valHooks: {=0A=
      option: {=0A=
        get: function (a) {=0A=
          var b =3D a.attributes.value;=0A=
          return !b || b.specified ? a.value : a.text=0A=
        }=0A=
      },=0A=
      select: {=0A=
        get: function (a) {=0A=
          var b, c, d, e, g =3D a.selectedIndex,=0A=
            h =3D [],=0A=
            i =3D a.options,=0A=
            j =3D a.type =3D=3D=3D "select-one";=0A=
          if (g < 0) return null;=0A=
          c =3D j ? g : 0, d =3D j ? g + 1 : i.length;=0A=
          for (; c < d; c++) {=0A=
            e =3D i[c];=0A=
            if (e.selected && (f.support.optDisabled ? !e.disabled : =
e.getAttribute("disabled") =3D=3D=3D null) && (!e.parentNode.disabled || =
!f.nodeName(e.parentNode, "optgroup"))) {=0A=
              b =3D f(e).val();=0A=
              if (j) return b;=0A=
              h.push(b)=0A=
            }=0A=
          }=0A=
          if (j && !h.length && i.length) return f(i[g]).val();=0A=
          return h=0A=
        },=0A=
        set: function (a, b) {=0A=
          var c =3D f.makeArray(b);=0A=
          f(a).find("option").each(function () {=0A=
            this.selected =3D f.inArray(f(this).val(), c) >=3D 0=0A=
          }), c.length || (a.selectedIndex =3D -1);=0A=
          return c=0A=
        }=0A=
      }=0A=
    },=0A=
    attrFn: {=0A=
      val: !0,=0A=
      css: !0,=0A=
      html: !0,=0A=
      text: !0,=0A=
      data: !0,=0A=
      width: !0,=0A=
      height: !0,=0A=
      offset: !0=0A=
    },=0A=
    attr: function (a, c, d, e) {=0A=
      var g, h, i, j =3D a.nodeType;=0A=
      if ( !! a && j !=3D=3D 3 && j !=3D=3D 8 && j !=3D=3D 2) {=0A=
        if (e && c in f.attrFn) return f(a)[c](d);=0A=
        if (typeof a.getAttribute =3D=3D "undefined") return f.prop(a, =
c, d);=0A=
        i =3D j !=3D=3D 1 || !f.isXMLDoc(a), i && (c =3D =
c.toLowerCase(), h =3D f.attrHooks[c] || (u.test(c) ? x : w));=0A=
        if (d !=3D=3D b) {=0A=
          if (d =3D=3D=3D null) {=0A=
            f.removeAttr(a, c);=0A=
            return=0A=
          }=0A=
          if (h && "set" in h && i && (g =3D h.set(a, d, c)) !=3D=3D b) =
return g;=0A=
          a.setAttribute(c, "" + d);=0A=
          return d=0A=
        }=0A=
        if (h && "get" in h && i && (g =3D h.get(a, c)) !=3D=3D null) =
return g;=0A=
        g =3D a.getAttribute(c);=0A=
        return g =3D=3D=3D null ? b : g=0A=
      }=0A=
    },=0A=
    removeAttr: function (a, b) {=0A=
      var c, d, e, g, h, i =3D 0;=0A=
      if (b && a.nodeType =3D=3D=3D 1) {=0A=
        d =3D b.toLowerCase().split(p), g =3D d.length;=0A=
        for (; i < g; i++) e =3D d[i], e && (c =3D f.propFix[e] || e, h =
=3D u.test(e), h || f.attr(a, e, ""), a.removeAttribute(v ? e : c), h && =
c in a && (a[c] =3D !1))=0A=
      }=0A=
    },=0A=
    attrHooks: {=0A=
      type: {=0A=
        set: function (a, b) {=0A=
          if (r.test(a.nodeName) && a.parentNode) f.error("type property =
can't be changed");=0A=
          else if (!f.support.radioValue && b =3D=3D=3D "radio" && =
f.nodeName(a, "input")) {=0A=
            var c =3D a.value;=0A=
            a.setAttribute("type", b), c && (a.value =3D c);=0A=
            return b=0A=
          }=0A=
        }=0A=
      },=0A=
      value: {=0A=
        get: function (a, b) {=0A=
          if (w && f.nodeName(a, "button")) return w.get(a, b);=0A=
          return b in a ? a.value : null=0A=
        },=0A=
        set: function (a, b, c) {=0A=
          if (w && f.nodeName(a, "button")) return w.set(a, b, c);=0A=
          a.value =3D b=0A=
        }=0A=
      }=0A=
    },=0A=
    propFix: {=0A=
      tabindex: "tabIndex",=0A=
      readonly: "readOnly",=0A=
      "for": "htmlFor",=0A=
      "class": "className",=0A=
      maxlength: "maxLength",=0A=
      cellspacing: "cellSpacing",=0A=
      cellpadding: "cellPadding",=0A=
      rowspan: "rowSpan",=0A=
      colspan: "colSpan",=0A=
      usemap: "useMap",=0A=
      frameborder: "frameBorder",=0A=
      contenteditable: "contentEditable"=0A=
    },=0A=
    prop: function (a, c, d) {=0A=
      var e, g, h, i =3D a.nodeType;=0A=
      if ( !! a && i !=3D=3D 3 && i !=3D=3D 8 && i !=3D=3D 2) {=0A=
        h =3D i !=3D=3D 1 || !f.isXMLDoc(a), h && (c =3D f.propFix[c] || =
c, g =3D f.propHooks[c]);=0A=
        return d !=3D=3D b ? g && "set" in g && (e =3D g.set(a, d, c)) =
!=3D=3D b ? e : a[c] =3D d : g && "get" in g && (e =3D g.get(a, c)) =
!=3D=3D null ? e : a[c]=0A=
      }=0A=
    },=0A=
    propHooks: {=0A=
      tabIndex: {=0A=
        get: function (a) {=0A=
          var c =3D a.getAttributeNode("tabindex");=0A=
          return c && c.specified ? parseInt(c.value, 10) : =
s.test(a.nodeName) || t.test(a.nodeName) && a.href ? 0 : b=0A=
        }=0A=
      }=0A=
    }=0A=
  }), f.attrHooks.tabindex =3D f.propHooks.tabIndex, x =3D {=0A=
    get: function (a, c) {=0A=
      var d, e =3D f.prop(a, c);=0A=
      return e =3D=3D=3D !0 || typeof e !=3D "boolean" && (d =3D =
a.getAttributeNode(c)) && d.nodeValue !=3D=3D !1 ? c.toLowerCase() : b=0A=
    },=0A=
    set: function (a, b, c) {=0A=
      var d;=0A=
      b =3D=3D=3D !1 ? f.removeAttr(a, c) : (d =3D f.propFix[c] || c, d =
in a && (a[d] =3D !0), a.setAttribute(c, c.toLowerCase()));=0A=
      return c=0A=
    }=0A=
  }, v || (y =3D {=0A=
    name: !0,=0A=
    id: !0,=0A=
    coords: !0=0A=
  }, w =3D f.valHooks.button =3D {=0A=
    get: function (a, c) {=0A=
      var d;=0A=
      d =3D a.getAttributeNode(c);=0A=
      return d && (y[c] ? d.nodeValue !=3D=3D "" : d.specified) ? =
d.nodeValue : b=0A=
    },=0A=
    set: function (a, b, d) {=0A=
      var e =3D a.getAttributeNode(d);=0A=
      e || (e =3D c.createAttribute(d), a.setAttributeNode(e));=0A=
      return e.nodeValue =3D b + ""=0A=
    }=0A=
  }, f.attrHooks.tabindex.set =3D w.set, f.each(["width", "height"], =
function (a, b) {=0A=
    f.attrHooks[b] =3D f.extend(f.attrHooks[b], {=0A=
      set: function (a, c) {=0A=
        if (c =3D=3D=3D "") {=0A=
          a.setAttribute(b, "auto");=0A=
          return c=0A=
        }=0A=
      }=0A=
    })=0A=
  }), f.attrHooks.contenteditable =3D {=0A=
    get: w.get,=0A=
    set: function (a, b, c) {=0A=
      b =3D=3D=3D "" && (b =3D "false"), w.set(a, b, c)=0A=
    }=0A=
  }), f.support.hrefNormalized || f.each(["href", "src", "width", =
"height"], function (a, c) {=0A=
    f.attrHooks[c] =3D f.extend(f.attrHooks[c], {=0A=
      get: function (a) {=0A=
        var d =3D a.getAttribute(c, 2);=0A=
        return d =3D=3D=3D null ? b : d=0A=
      }=0A=
    })=0A=
  }), f.support.style || (f.attrHooks.style =3D {=0A=
    get: function (a) {=0A=
      return a.style.cssText.toLowerCase() || b=0A=
    },=0A=
    set: function (a, b) {=0A=
      return a.style.cssText =3D "" + b=0A=
    }=0A=
  }), f.support.optSelected || (f.propHooks.selected =3D =
f.extend(f.propHooks.selected, {=0A=
    get: function (a) {=0A=
      var b =3D a.parentNode;=0A=
      b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex);=0A=
      return null=0A=
    }=0A=
  })), f.support.enctype || (f.propFix.enctype =3D "encoding"), =
f.support.checkOn || f.each(["radio", "checkbox"], function () {=0A=
    f.valHooks[this] =3D {=0A=
      get: function (a) {=0A=
        return a.getAttribute("value") =3D=3D=3D null ? "on" : a.value=0A=
      }=0A=
    }=0A=
  }), f.each(["radio", "checkbox"], function () {=0A=
    f.valHooks[this] =3D f.extend(f.valHooks[this], {=0A=
      set: function (a, b) {=0A=
        if (f.isArray(b)) return a.checked =3D f.inArray(f(a).val(), b) =
>=3D 0=0A=
      }=0A=
    })=0A=
  });=0A=
  var z =3D /^(?:textarea|input|select)$/i,=0A=
    A =3D /^([^\.]*)?(?:\.(.+))?$/,=0A=
    B =3D /(?:^|\s)hover(\.\S+)?\b/,=0A=
    C =3D /^key/,=0A=
    D =3D /^(?:mouse|contextmenu)|click/,=0A=
    E =3D /^(?:focusinfocus|focusoutblur)$/,=0A=
    F =3D /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,=0A=
    G =3D function (=0A=
    a) {=0A=
      var b =3D F.exec(a);=0A=
      b && (b[1] =3D (b[1] || "").toLowerCase(), b[3] =3D b[3] && new =
RegExp("(?:^|\\s)" + b[3] + "(?:\\s|$)"));=0A=
      return b=0A=
    },=0A=
    H =3D function (a, b) {=0A=
      var c =3D a.attributes || {};=0A=
      return (!b[1] || a.nodeName.toLowerCase() =3D=3D=3D b[1]) && =
(!b[2] || (c.id || {}).value =3D=3D=3D b[2]) && (!b[3] || =
b[3].test((c["class"] || {}).value))=0A=
    },=0A=
    I =3D function (a) {=0A=
      return f.event.special.hover ? a : a.replace(B, "mouseenter$1 =
mouseleave$1")=0A=
    };=0A=
  f.event =3D {=0A=
    add: function (a, c, d, e, g) {=0A=
      var h, i, j, k, l, m, n, o, p, q, r, s;=0A=
      if (!(a.nodeType =3D=3D=3D 3 || a.nodeType =3D=3D=3D 8 || !c || !d =
|| !(h =3D f._data(a)))) {=0A=
        d.handler && (p =3D d, d =3D p.handler, g =3D p.selector), =
d.guid || (d.guid =3D f.guid++), j =3D h.events, j || (h.events =3D j =
=3D {}), i =3D h.handle, i || (h.handle =3D i =3D function (a) {=0A=
          return typeof f !=3D "undefined" && (!a || f.event.triggered =
!=3D=3D a.type) ? f.event.dispatch.apply(i.elem, arguments) : b=0A=
        }, i.elem =3D a), c =3D f.trim(I(c)).split(" ");=0A=
        for (k =3D 0; k < c.length; k++) {=0A=
          l =3D A.exec(c[k]) || [], m =3D l[1], n =3D (l[2] || =
"").split(".").sort(), s =3D f.event.special[m] || {}, m =3D (g ? =
s.delegateType : s.bindType) || m, s =3D f.event.special[m] || {}, o =3D =
f.extend({=0A=
            type: m,=0A=
            origType: l[1],=0A=
            data: e,=0A=
            handler: d,=0A=
            guid: d.guid,=0A=
            selector: g,=0A=
            quick: g && G(g),=0A=
            namespace: n.join(".")=0A=
          }, p), r =3D j[m];=0A=
          if (!r) {=0A=
            r =3D j[m] =3D [], r.delegateCount =3D 0;=0A=
            if (!s.setup || s.setup.call(a, e, n, i) =3D=3D=3D !1) =
a.addEventListener ? a.addEventListener(m, i, !1) : a.attachEvent && =
a.attachEvent("on" + m, i)=0A=
          }=0A=
          s.add && (s.add.call(a, o), o.handler.guid || (o.handler.guid =
=3D d.guid)), g ? r.splice(r.delegateCount++, 0, o) : r.push(o), =
f.event.global[m] =3D !0=0A=
        }=0A=
        a =3D null=0A=
      }=0A=
    },=0A=
    global: {},=0A=
    remove: function (a, b, c, d, e) {=0A=
      var g =3D f.hasData(a) && f._data(a),=0A=
        h, i, j, k, l, m, n, o, p, q, r, s;=0A=
      if ( !! g && !! (o =3D g.events)) {=0A=
        b =3D f.trim(I(b || "")).split(" ");=0A=
        for (h =3D 0; h < b.length; h++) {=0A=
          i =3D A.exec(b[h]) || [], j =3D k =3D i[1], l =3D i[2];=0A=
          if (!j) {=0A=
            for (j in o) f.event.remove(a, j + b[h], c, d, !0);=0A=
            continue=0A=
          }=0A=
          p =3D f.event.special[j] || {}, j =3D (d ? p.delegateType : =
p.bindType) || j, r =3D o[j] || [], m =3D r.length, l =3D l ? new =
RegExp("(^|\\.)" + l.split(".").sort().join("\\.(?:.*\\.)?") + =
"(\\.|$)") : null;=0A=
          for (n =3D 0; n < r.length; n++) s =3D r[n], (e || k =3D=3D=3D =
s.origType) && (!c || c.guid =3D=3D=3D s.guid) && (!l || =
l.test(s.namespace)) && (!d || d =3D=3D=3D s.selector || d =3D=3D=3D =
"**" && s.selector) && (r.splice(n--, 1), s.selector && =
r.delegateCount--, p.remove && p.remove.call(a, s));=0A=
          r.length =3D=3D=3D 0 && m !=3D=3D r.length && ((!p.teardown || =
p.teardown.call(a, l) =3D=3D=3D !1) && f.removeEvent(a, j, g.handle), =
delete o[j])=0A=
        }=0A=
        f.isEmptyObject(o) && (q =3D g.handle, q && (q.elem =3D null), =
f.removeData(a, ["events", "handle"], !0))=0A=
      }=0A=
    },=0A=
    customEvent: {=0A=
      getData: !0,=0A=
      setData: !0,=0A=
      changeData: !0=0A=
    },=0A=
    trigger: function (c, d, e, g) {=0A=
      if (!e || e.nodeType !=3D=3D 3 && e.nodeType !=3D=3D 8) {=0A=
        var h =3D c.type || c,=0A=
          i =3D [],=0A=
          j, k, l, m, n, o, p, q, r, s;=0A=
        if (E.test(h + f.event.triggered)) return;=0A=
        h.indexOf("!") >=3D 0 && (h =3D h.slice(0, -1), k =3D !0), =
h.indexOf(".") >=3D 0 && (i =3D h.split("."), h =3D i.shift(), i.sort());=0A=
        if ((!e || f.event.customEvent[h]) && !f.event.global[h]) return;=0A=
        c =3D typeof c =3D=3D "object" ? c[f.expando] ? c : new =
f.Event(h, c) : new f.Event(h), c.type =3D h, c.isTrigger =3D !0, =
c.exclusive =3D k, c.namespace =3D i.join("."), c.namespace_re =3D =
c.namespace ? new RegExp("(^|\\.)" + i.join("\\.(?:.*\\.)?") + =
"(\\.|$)") : null, o =3D h.indexOf(":") < 0 ? "on" + h : "";=0A=
        if (!e) {=0A=
          j =3D f.cache;=0A=
          for (l in j) j[l].events && j[l].events[h] && =
f.event.trigger(c, d, j[l].handle.elem, !0);=0A=
          return=0A=
        }=0A=
        c.result =3D b, c.target || (c.target =3D e), d =3D d !=3D null =
? f.makeArray(d) : [], d.unshift(c), p =3D f.event.special[h] || {};=0A=
        if (p.trigger && p.trigger.apply(e, d) =3D=3D=3D !1) return;=0A=
        r =3D [=0A=
          [e, p.bindType || h]=0A=
        ];=0A=
        if (!g && !p.noBubble && !f.isWindow(e)) {=0A=
          s =3D p.delegateType || h, m =3D E.test(s + h) ? e : =
e.parentNode, n =3D null;=0A=
          for (; m; m =3D m.parentNode) r.push([m, s]), n =3D m;=0A=
          n && n =3D=3D=3D e.ownerDocument && r.push([n.defaultView || =
n.parentWindow || a, s])=0A=
        }=0A=
        for (l =3D 0; l < r.length && !c.isPropagationStopped(); l++) m =
=3D r[l][0], c.type =3D r[l][1], q =3D (f._data(m, "events") || =
{})[c.type] && f._data(m, "handle"), q && q.apply(m, d), q =3D o && =
m[o], q && f.acceptData(m) && q.apply(m, d) =3D=3D=3D !1 && =
c.preventDefault();=0A=
        c.type =3D h, !g && !c.isDefaultPrevented() && (!p._default || =
p._default.apply(e.ownerDocument, d) =3D=3D=3D !1) && (h !=3D=3D "click" =
|| !f.nodeName(e, "a")) && f.acceptData(e) && o && e[h] && (h !=3D=3D =
"focus" && h !=3D=3D "blur" || c.target.offsetWidth !=3D=3D 0) && =
!f.isWindow(e) && (n =3D e[o], n && (e[o] =3D null), f.event.triggered =
=3D h, e[h](), f.event.triggered =3D b, n && (e[o] =3D n));=0A=
        return c.result=0A=
      }=0A=
    },=0A=
    dispatch: function (c) {=0A=
      c =3D f.event.fix(c || a.event);=0A=
      var d =3D (f._data(this, "events") || {})[c.type] || [],=0A=
        e =3D d.delegateCount,=0A=
        g =3D [].slice.call(arguments, 0),=0A=
        h =3D !c.exclusive && !c.namespace,=0A=
        i =3D f.event.special[c.type] || {},=0A=
        j =3D [],=0A=
        k, l, m, n, o, p, q, r, s, t, u;=0A=
      g[0] =3D c, c.delegateTarget =3D this;=0A=
      if (!i.preDispatch || i.preDispatch.call(this, c) !=3D=3D !1) {=0A=
        if (e && (!c.button || c.type !=3D=3D "click")) {=0A=
          n =3D f(this), n.context =3D this.ownerDocument || this;=0A=
          for (m =3D c.target; m !=3D this; m =3D m.parentNode || this) =
if (m.disabled !=3D=3D !0) {=0A=
            p =3D {}, r =3D [], n[0] =3D m;=0A=
            for (k =3D 0; k < e; k++) s =3D d[k], t =3D s.selector, p[t] =
=3D=3D=3D b && (p[t] =3D s.quick ? H(m, s.quick) : n.is(t)), p[t] && =
r.push(s);=0A=
            r.length && j.push({=0A=
              elem: m,=0A=
              matches: r=0A=
            })=0A=
          }=0A=
        }=0A=
        d.length > e && j.push({=0A=
          elem: this,=0A=
          matches: d.slice(e)=0A=
        });=0A=
        for (k =3D 0; k < j.length && !c.isPropagationStopped(); k++) {=0A=
          q =3D j[k], c.currentTarget =3D q.elem;=0A=
          for (l =3D 0; l < q.matches.length && =
!c.isImmediatePropagationStopped(); l++) {=0A=
            s =3D q.matches[l];=0A=
            if (h || !c.namespace && !s.namespace || c.namespace_re && =
c.namespace_re.test(s.namespace)) c.data =3D s.data, c.handleObj =3D s, =
o =3D ((f.event.special[s.origType] || {}).handle || =
s.handler).apply(q.elem, g), o !=3D=3D b && (c.result =3D o, o =3D=3D=3D =
!1 && (c.preventDefault(), c.stopPropagation()))=0A=
          }=0A=
        }=0A=
        i.postDispatch && i.postDispatch.call(this, c);=0A=
        return c.result=0A=
      }=0A=
    },=0A=
    props: "attrChange attrName relatedNode srcElement altKey bubbles =
cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget =
shiftKey target timeStamp view which".split(" "),=0A=
    fixHooks: {},=0A=
    keyHooks: {=0A=
      props: "char charCode key keyCode".split(" "),=0A=
      filter: function (a, b) {=0A=
        a.which =3D=3D null && (a.which =3D b.charCode !=3D null ? =
b.charCode : b.keyCode);=0A=
        return a=0A=
      }=0A=
    },=0A=
    mouseHooks: {=0A=
      props: "button buttons clientX clientY fromElement offsetX offsetY =
pageX pageY screenX screenY toElement".split(" "),=0A=
      filter: function (a, d) {=0A=
        var e, f, g, h =3D d.button,=0A=
          i =3D d.fromElement;=0A=
        a.pageX =3D=3D null && d.clientX !=3D null && (e =3D =
a.target.ownerDocument || c, f =3D e.documentElement, g =3D e.body, =
a.pageX =3D d.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - =
(f && f.clientLeft || g && g.clientLeft || 0), a.pageY =3D d.clientY + =
(f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && =
g.clientTop || 0)), !a.relatedTarget && i && (a.relatedTarget =3D i =
=3D=3D=3D a.target ? d.toElement : i), !a.which && h !=3D=3D b && =
(a.which =3D h & 1 ? 1 : h & 2 ? 3 : h & 4 ? 2 : 0);=0A=
        return a=0A=
      }=0A=
    },=0A=
    fix: function (a) {=0A=
      if (a[f.expando]) return a;=0A=
      var d, e, g =3D a,=0A=
        h =3D f.event.fixHooks[a.type] || {},=0A=
        i =3D h.props ? this.props.concat(h.props) : this.props;=0A=
      a =3D f.Event(g);=0A=
      for (d =3D i.length; d;) e =3D i[--d], a[e] =3D g[e];=0A=
      a.target || (a.target =3D g.srcElement || c), a.target.nodeType =
=3D=3D=3D 3 && (a.target =3D a.target.parentNode), a.metaKey =3D=3D=3D b =
&& (a.metaKey =3D a.ctrlKey);=0A=
      return h.filter ? h.filter(a, g) : a=0A=
    },=0A=
    special: {=0A=
      ready: {=0A=
        setup: f.bindReady=0A=
      },=0A=
      load: {=0A=
        noBubble: !0=0A=
      },=0A=
      focus: {=0A=
        delegateType: "focusin"=0A=
      },=0A=
      blur: {=0A=
        delegateType: "focusout"=0A=
      },=0A=
      beforeunload: {=0A=
        setup: function (a, b, c) {=0A=
          f.isWindow(this) && (this.onbeforeunload =3D c)=0A=
        },=0A=
        teardown: function (a, b) {=0A=
          this.onbeforeunload =3D=3D=3D b && (this.onbeforeunload =3D =
null)=0A=
        }=0A=
      }=0A=
    },=0A=
    simulate: function (a, b, c, d) {=0A=
      var e =3D f.extend(new f.Event, c, {=0A=
        type: a,=0A=
        isSimulated: !0,=0A=
        originalEvent: {}=0A=
      });=0A=
      d ? f.event.trigger(e, null, b) : f.event.dispatch.call(b, e), =
e.isDefaultPrevented() && c.preventDefault()=0A=
    }=0A=
  }, f.event.handle =3D f.event.dispatch, f.removeEvent =3D =
c.removeEventListener ?=0A=
  function (a, b, c) {=0A=
    a.removeEventListener && a.removeEventListener(b, c, !1)=0A=
  } : function (a, b, c) {=0A=
    a.detachEvent && a.detachEvent("on" + b, c)=0A=
  }, f.Event =3D function (a, b) {=0A=
    if (!(this instanceof f.Event)) return new f.Event(a, b);=0A=
    a && a.type ? (this.originalEvent =3D a, this.type =3D a.type, =
this.isDefaultPrevented =3D a.defaultPrevented || a.returnValue =
=3D=3D=3D !1 || a.getPreventDefault && a.getPreventDefault() ? K : J) : =
this.type =3D a, b && f.extend(this, b), this.timeStamp =3D a && =
a.timeStamp || f.now(), this[f.expando] =3D !0=0A=
  }, f.Event.prototype =3D {=0A=
    preventDefault: function () {=0A=
      this.isDefaultPrevented =3D K;=0A=
      var a =3D this.originalEvent;=0A=
      !a || (a.preventDefault ? a.preventDefault() : a.returnValue =3D =
!1)=0A=
    },=0A=
    stopPropagation: function () {=0A=
      this.isPropagationStopped =3D K;=0A=
      var a =3D this.originalEvent;=0A=
      !a || (a.stopPropagation && a.stopPropagation(), a.cancelBubble =
=3D !0)=0A=
    },=0A=
    stopImmediatePropagation: function () {=0A=
      this.isImmediatePropagationStopped =3D K, this.stopPropagation()=0A=
    },=0A=
    isDefaultPrevented: J,=0A=
    isPropagationStopped: J,=0A=
    isImmediatePropagationStopped: J=0A=
  }, f.each({=0A=
    mouseenter: "mouseover",=0A=
    mouseleave: "mouseout"=0A=
  }, function (a, b) {=0A=
    f.event.special[a] =3D {=0A=
      delegateType: b,=0A=
      bindType: b,=0A=
      handle: function (a) {=0A=
        var c =3D this,=0A=
          d =3D a.relatedTarget,=0A=
          e =3D a.handleObj,=0A=
          g =3D e.selector,=0A=
          h;=0A=
        if (!d || d !=3D=3D c && !f.contains(c, d)) a.type =3D =
e.origType, h =3D e.handler.apply(this, arguments), a.type =3D b;=0A=
        return h=0A=
      }=0A=
    }=0A=
  }), f.support.submitBubbles || (f.event.special.submit =3D {=0A=
    setup: function () {=0A=
      if (f.nodeName(this, "form")) return !1;=0A=
      f.event.add(this, "click._submit keypress._submit", function (a) {=0A=
        var c =3D a.target,=0A=
          d =3D f.nodeName(c, "input") || f.nodeName(c, "button") ? =
c.form : b;=0A=
        d && !d._submit_attached && (f.event.add(d, "submit._submit", =
function (a) {=0A=
          a._submit_bubble =3D !0=0A=
        }), d._submit_attached =3D !0)=0A=
      })=0A=
    },=0A=
    postDispatch: function (a) {=0A=
      a._submit_bubble && (delete a._submit_bubble, this.parentNode && =
!a.isTrigger && f.event.simulate("submit", this.parentNode, a, !0))=0A=
    },=0A=
    teardown: function () {=0A=
      if (f.nodeName(this, "form")) return !1;=0A=
      f.event.remove(this, "._submit")=0A=
    }=0A=
  }), f.support.changeBubbles || (f.event.special.change =3D {=0A=
    setup: function () {=0A=
      if (z.test(this.nodeName)) {=0A=
        if (this.type =3D=3D=3D "checkbox" || this.type =3D=3D=3D =
"radio") f.event.add(this, "propertychange._change", function (a) {=0A=
          a.originalEvent.propertyName =3D=3D=3D "checked" && =
(this._just_changed =3D !0)=0A=
        }), f.event.add(this, "click._change", function (a) {=0A=
          this._just_changed && !a.isTrigger && (this._just_changed =3D =
!1, f.event.simulate("change", this, a, !0))=0A=
        });=0A=
        return !1=0A=
      }=0A=
      f.event.add(this, "beforeactivate._change", function (a) {=0A=
        var b =3D a.target;=0A=
        z.test(b.nodeName) && !b._change_attached && (f.event.add(b, =
"change._change", function (a) {=0A=
          this.parentNode && !a.isSimulated && !a.isTrigger && =
f.event.simulate("change", this.parentNode, a, !0)=0A=
        }), b._change_attached =3D !0)=0A=
      })=0A=
    },=0A=
    handle: function (a) {=0A=
      var b =3D a.target;=0A=
      if (this !=3D=3D b || a.isSimulated || a.isTrigger || b.type =
!=3D=3D "radio" && b.type !=3D=3D "checkbox") return =
a.handleObj.handler.apply(this, arguments)=0A=
    },=0A=
    teardown: function () {=0A=
      f.event.remove(this, "._change");=0A=
      return z.test(this.nodeName)=0A=
    }=0A=
  }), f.support.focusinBubbles || f.each({=0A=
    focus: "focusin",=0A=
    blur: "focusout"=0A=
  }, function (a, b) {=0A=
    var d =3D 0,=0A=
      e =3D function (a) {=0A=
        f.event.simulate(b, a.target, f.event.fix(a), !0)=0A=
      };=0A=
    f.event.special[b] =3D {=0A=
      setup: function () {=0A=
        d++ =3D=3D=3D 0 && c.addEventListener(a, e, !0)=0A=
      },=0A=
      teardown: function () {=0A=
        --d =3D=3D=3D 0 && c.removeEventListener(a, e, !0)=0A=
      }=0A=
    }=0A=
  }), f.fn.extend({=0A=
    on: function (a, c, d, e, g) {=0A=
      var h, i;=0A=
      if (typeof a =3D=3D "object") {=0A=
        typeof c !=3D "string" && (d =3D d || c, c =3D b);=0A=
        for (i in a) this.on(i, c, d, a[i], g);=0A=
        return this=0A=
      }=0A=
      d =3D=3D null && e =3D=3D null ? (e =3D c, d =3D c =3D b) : e =
=3D=3D null && (typeof c =3D=3D "string" ? (e =3D d, d =3D b) : (e =3D =
d, d =3D c, c =3D b));=0A=
      if (e =3D=3D=3D !1) e =3D J;=0A=
      else if (!e) return this;=0A=
      g =3D=3D=3D 1 && (h =3D e, e =3D function (a) {=0A=
        f().off(a);=0A=
        return h.apply(this, arguments)=0A=
      }, e.guid =3D h.guid || (h.guid =3D f.guid++));=0A=
      return this.each(function () {=0A=
        f.event.add(this, a, e, d, c)=0A=
      })=0A=
    },=0A=
    one: function (a, b, c, d) {=0A=
      return this.on(a, b, c, d, 1)=0A=
    },=0A=
    off: function (a, c, d) {=0A=
      if (a && a.preventDefault && a.handleObj) {=0A=
        var e =3D a.handleObj;=0A=
        f(a.delegateTarget).off(e.namespace ? e.origType + "." + =
e.namespace : e.origType, e.selector, e.handler);=0A=
        return this=0A=
      }=0A=
      if (typeof a =3D=3D "object") {=0A=
        for (var g in a) this.off(g, c, a[g]);=0A=
        return this=0A=
      }=0A=
      if (c =3D=3D=3D !1 || typeof c =3D=3D "function") d =3D c, c =3D b;=0A=
      d =3D=3D=3D !1 && (d =3D J);=0A=
      return this.each(function () {=0A=
        f.event.remove(this, a, d, c)=0A=
      })=0A=
    },=0A=
    bind: function (a, b, c) {=0A=
      return this.on(a, null, b, c)=0A=
    },=0A=
    unbind: function (a, b) {=0A=
      return this.off(a, null, b)=0A=
    },=0A=
    live: function (a, b, c) {=0A=
      f(this.context).on(a, this.selector, b, c);=0A=
      return this=0A=
    },=0A=
    die: function (a, b) {=0A=
      f(this.context).off(a, this.selector || "**", b);=0A=
      return this=0A=
    },=0A=
    delegate: function (a, b, c, d) {=0A=
      return this.on(b, a, c, d)=0A=
    },=0A=
    undelegate: function (a, b, c) {=0A=
      return arguments.length =3D=3D 1 ? this.off(a, "**") : this.off(b, =
a, c)=0A=
    },=0A=
    trigger: function (a, b) {=0A=
      return this.each(function () {=0A=
        f.event.trigger(a, b, this)=0A=
      })=0A=
    },=0A=
    triggerHandler: function (a, b) {=0A=
      if (this[0]) return f.event.trigger(a, b, this[0], !0)=0A=
    },=0A=
    toggle: function (a) {=0A=
      var b =3D arguments,=0A=
        c =3D a.guid || f.guid++,=0A=
        d =3D 0,=0A=
        e =3D function (c) {=0A=
          var e =3D (f._data(this, "lastToggle" + a.guid) || 0) % d;=0A=
          f._data(this, "lastToggle" + a.guid, e + 1), =
c.preventDefault();=0A=
          return b[e].apply(this, arguments) || !1=0A=
        };=0A=
      e.guid =3D c;=0A=
      while (d < b.length) b[d++].guid =3D c;=0A=
      return this.click(e)=0A=
    },=0A=
    hover: function (a, b) {=0A=
      return this.mouseenter(a).mouseleave(b || a)=0A=
    }=0A=
  }), f.each("blur focus focusin focusout load resize scroll unload =
click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter =
mouseleave change select submit keydown keypress keyup error =
contextmenu".split(" "), function (a, b) {=0A=
    f.fn[b] =3D function (a, c) {=0A=
      c =3D=3D null && (c =3D a, a =3D null);=0A=
      return arguments.length > 0 ? this.on(b, null, a, c) : =
this.trigger(b)=0A=
    }, f.attrFn && (f.attrFn[b] =3D !0), C.test(b) && =
(f.event.fixHooks[b] =3D f.event.keyHooks), D.test(b) && =
(f.event.fixHooks[b] =3D f.event.mouseHooks)=0A=
  }), function () {=0A=
    function x(a, b, c, e, f, g) {=0A=
      for (var h =3D 0, i =3D e.length; h < i; h++) {=0A=
        var j =3D e[h];=0A=
        if (j) {=0A=
          var k =3D !1;=0A=
          j =3D j[a];=0A=
          while (j) {=0A=
            if (j[d] =3D=3D=3D c) {=0A=
              k =3D e[j.sizset];=0A=
              break=0A=
            }=0A=
            if (j.nodeType =3D=3D=3D 1) {=0A=
              g || (j[d] =3D c, j.sizset =3D h);=0A=
              if (typeof b !=3D "string") {=0A=
                if (j =3D=3D=3D b) {=0A=
                  k =3D !0;=0A=
                  break=0A=
                }=0A=
              } else if (m.filter(b, [j]).length > 0) {=0A=
                k =3D j;=0A=
                break=0A=
              }=0A=
            }=0A=
            j =3D j[a]=0A=
          }=0A=
          e[h] =3D k=0A=
        }=0A=
      }=0A=
    }=0A=
    function w(a, b, c, e, f, g) {=0A=
      for (var h =3D 0, i =3D e.length; h < i; h++) {=0A=
        var j =3D e[h];=0A=
        if (j) {=0A=
          var k =3D !1;=0A=
          j =3D j[a];=0A=
          while (j) {=0A=
            if (j[d] =3D=3D=3D c) {=0A=
              k =3D e[j.sizset];=0A=
              break=0A=
            }=0A=
            j.nodeType =3D=3D=3D 1 && !g && (j[d] =3D c, j.sizset =3D h);=0A=
            if (j.nodeName.toLowerCase() =3D=3D=3D b) {=0A=
              k =3D j;=0A=
              break=0A=
            }=0A=
            j =3D j[a]=0A=
          }=0A=
          e[h] =3D k=0A=
        }=0A=
      }=0A=
    }=0A=
    var a =3D =
/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"=
]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,=0A=
      d =3D "sizcache" + (Math.random() + "").replace(".", ""),=0A=
      e =3D 0,=0A=
      g =3D Object.prototype.toString,=0A=
      h =3D !1,=0A=
      i =3D !0,=0A=
      j =3D /\\/g,=0A=
      k =3D /\r\n/g,=0A=
      l =3D /\W/;=0A=
    [0, 0].sort(function () {=0A=
      i =3D !1;=0A=
      return 0=0A=
    });=0A=
    var m =3D function (b, d, e, f) {=0A=
        e =3D e || [], d =3D d || c;=0A=
        var h =3D d;=0A=
        if (d.nodeType !=3D=3D 1 && d.nodeType !=3D=3D 9) return [];=0A=
        if (!b || typeof b !=3D "string") return e;=0A=
        var i, j, k, l, n, q, r, t, u =3D !0,=0A=
          v =3D m.isXML(d),=0A=
          w =3D [],=0A=
          x =3D b;=0A=
        do {=0A=
          a.exec(""), i =3D a.exec(x);=0A=
          if (i) {=0A=
            x =3D i[3], w.push(i[1]);=0A=
            if (i[2]) {=0A=
              l =3D i[3];=0A=
              break=0A=
            }=0A=
          }=0A=
        } while (i);=0A=
        if (w.length > 1 && p.exec(b)) if (w.length =3D=3D=3D 2 && =
o.relative[w[0]]) j =3D y(w[0] + w[1], d, f);=0A=
        else {=0A=
          j =3D o.relative[w[0]] ? [d] : m(w.shift(), d);=0A=
          while (w.length) b =3D w.shift(), o.relative[b] && (b +=3D =
w.shift()), j =3D y(b, j, f)=0A=
        } else {=0A=
          !f && w.length > 1 && d.nodeType =3D=3D=3D 9 && !v && =
o.match.ID.test(w[0]) && !o.match.ID.test(w[w.length - 1]) && (n =3D =
m.find(w.shift(), d, v), d =3D n.expr ? m.filter(n.expr, n.set)[0] : =
n.set[0]);=0A=
          if (d) {=0A=
            n =3D f ? {=0A=
              expr: w.pop(),=0A=
              set: s(f)=0A=
            } : m.find(w.pop(), w.length =3D=3D=3D 1 && (w[0] =3D=3D=3D =
"~" || w[0] =3D=3D=3D "+") && d.parentNode ? d.parentNode : d, v), j =3D =
n.expr ? m.filter(n.expr, n.set) : n.set, w.length > 0 ? k =3D s(j) : u =
=3D !1;=0A=
            while (w.length) q =3D w.pop(), r =3D q, o.relative[q] ? r =
=3D w.pop() : q =3D "", r =3D=3D null && (r =3D d), o.relative[q](k, r, =
v)=0A=
          } else k =3D w =3D []=0A=
        }=0A=
        k || (k =3D j), k || m.error(q || b);=0A=
        if (g.call(k) =3D=3D=3D "[object Array]") if (!u) =
e.push.apply(e, k);=0A=
        else if (d && d.nodeType =3D=3D=3D 1) for (t =3D 0; k[t] !=3D =
null; t++) k[t] && (k[t] =3D=3D=3D !0 || k[t].nodeType =3D=3D=3D 1 && =
m.contains(d, k[t])) && e.push(j[t]);=0A=
        else for (t =3D 0; k[t] !=3D null; t++) k[t] && k[t].nodeType =
=3D=3D=3D 1 && e.push(j[t]);=0A=
        else s(k, e);=0A=
        l && (m(l, h, e, f), m.uniqueSort(e));=0A=
        return e=0A=
      };=0A=
    m.uniqueSort =3D function (a) {=0A=
      if (u) {=0A=
        h =3D i, a.sort(u);=0A=
        if (h) for (var b =3D 1; b < a.length; b++) a[b] =3D=3D=3D a[b - =
1] && a.splice(b--, 1)=0A=
      }=0A=
      return a=0A=
    }, m.matches =3D function (a, b) {=0A=
      return m(a, null, null, b)=0A=
    }, m.matchesSelector =3D function (a, b) {=0A=
      return m(b, null, null, [a]).length > 0=0A=
    }, m.find =3D function (a, b, c) {=0A=
      var d, e, f, g, h, i;=0A=
      if (!a) return [];=0A=
      for (e =3D 0, f =3D o.order.length; e < f; e++) {=0A=
        h =3D o.order[e];=0A=
        if (g =3D o.leftMatch[h].exec(a)) {=0A=
          i =3D g[1], g.splice(1, 1);=0A=
          if (i.substr(i.length - 1) !=3D=3D "\\") {=0A=
            g[1] =3D (g[1] || "").replace(j, ""), d =3D o.find[h](g, b, =
c);=0A=
            if (d !=3D null) {=0A=
              a =3D a.replace(o.match[h], "");=0A=
              break=0A=
            }=0A=
          }=0A=
        }=0A=
      }=0A=
      d || (d =3D typeof b.getElementsByTagName !=3D "undefined" ? =
b.getElementsByTagName("*") : []);=0A=
      return {=0A=
        set: d,=0A=
        expr: a=0A=
      }=0A=
    }, m.filter =3D function (a, c, d, e) {=0A=
      var f, g, h, i, j, k, l, n, p, q =3D a,=0A=
        r =3D [],=0A=
        s =3D c,=0A=
        t =3D c && c[0] && m.isXML(c[0]);=0A=
      while (a && c.length) {=0A=
        for (h in o.filter) if ((f =3D o.leftMatch[h].exec(a)) !=3D null =
&& f[2]) {=0A=
          k =3D o.filter[h], l =3D f[1], g =3D !1, f.splice(1, 1);=0A=
          if (l.substr(l.length - 1) =3D=3D=3D "\\") continue;=0A=
          s =3D=3D=3D r && (r =3D []);=0A=
          if (o.preFilter[h]) {=0A=
            f =3D o.preFilter[h](f, s, d, r, e, t);=0A=
            if (!f) g =3D i =3D !0;=0A=
            else if (f =3D=3D=3D !0) continue=0A=
          }=0A=
          if (f) for (n =3D 0;=0A=
          (j =3D s[n]) !=3D null; n++) j && (i =3D k(j, f, n, s), p =3D =
e ^ i, d && i !=3D null ? p ? g =3D !0 : s[n] =3D !1 : p && (r.push(j), =
g =3D !0));=0A=
          if (i !=3D=3D b) {=0A=
            d || (s =3D r), a =3D a.replace(o.match[h], "");=0A=
            if (!g) return [];=0A=
            break=0A=
          }=0A=
        }=0A=
        if (a =3D=3D=3D q) if (g =3D=3D null) m.error(a);=0A=
        else break;=0A=
        q =3D a=0A=
      }=0A=
      return s=0A=
    }, m.error =3D function (a) {=0A=
      throw new Error("Syntax error, unrecognized expression: " + a)=0A=
    };=0A=
    var n =3D m.getText =3D function (a) {=0A=
        var b, c, d =3D a.nodeType,=0A=
          e =3D "";=0A=
        if (d) {=0A=
          if (d =3D=3D=3D 1 || d =3D=3D=3D 9 || d =3D=3D=3D 11) {=0A=
            if (typeof a.textContent =3D=3D "string") return =
a.textContent;=0A=
            if (typeof a.innerText =3D=3D "string") return =
a.innerText.replace(k, "");=0A=
            for (a =3D a.firstChild; a; a =3D a.nextSibling) e +=3D n(a)=0A=
          } else if (d =3D=3D=3D 3 || d =3D=3D=3D 4) return a.nodeValue=0A=
        } else for (b =3D 0; c =3D a[b]; b++) c.nodeType !=3D=3D 8 && (e =
+=3D n(c));=0A=
        return e=0A=
      },=0A=
      o =3D m.selectors =3D {=0A=
        order: ["ID", "NAME", "TAG"],=0A=
        match: {=0A=
          ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,=0A=
          CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,=0A=
          NAME: /\[name=3D['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,=0A=
          ATTR: =
/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=3D)\s*(?:(['"])(.*?)\3|(#?=
(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,=0A=
          TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,=0A=
          CHILD: =
/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)=
?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,=0A=
          POS: =
/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=3D[^\-]|$)/,=0A=
          PSEUDO: =
/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\=
))?/=0A=
        },=0A=
        leftMatch: {},=0A=
        attrMap: {=0A=
          "class": "className",=0A=
          "for": "htmlFor"=0A=
        },=0A=
        attrHandle: {=0A=
          href: function (a) {=0A=
            return a.getAttribute("href")=0A=
          },=0A=
          type: function (a) {=0A=
            return a.getAttribute("type")=0A=
          }=0A=
        },=0A=
        relative: {=0A=
          "+": function (a, b) {=0A=
            var c =3D typeof b =3D=3D "string",=0A=
              d =3D c && !l.test(b),=0A=
              e =3D c && !d;=0A=
            d && (b =3D b.toLowerCase());=0A=
            for (var f =3D 0, g =3D a.length, h; f < g; f++) if (h =3D =
a[f]) {=0A=
              while ((h =3D h.previousSibling) && h.nodeType !=3D=3D 1);=0A=
              a[f] =3D e || h && h.nodeName.toLowerCase() =3D=3D=3D b ? =
h || !1 : h =3D=3D=3D b=0A=
            }=0A=
            e && m.filter(b, a, !0)=0A=
          },=0A=
          ">": function (a, b) {=0A=
            var c, d =3D typeof b =3D=3D "string",=0A=
              e =3D 0,=0A=
              f =3D a.length;=0A=
            if (d && !l.test(b)) {=0A=
              b =3D b.toLowerCase();=0A=
              for (; e < f; e++) {=0A=
                c =3D a[e];=0A=
                if (c) {=0A=
                  var g =3D c.parentNode;=0A=
                  a[e] =3D g.nodeName.toLowerCase() =3D=3D=3D b ? g : !1=0A=
                }=0A=
              }=0A=
            } else {=0A=
              for (; e < f; e++) c =3D a[e], c && (a[e] =3D d ? =
c.parentNode : c.parentNode =3D=3D=3D b);=0A=
              d && m.filter(b, a, !0)=0A=
            }=0A=
          },=0A=
          "": function (a, b, c) {=0A=
            var d, f =3D e++,=0A=
              g =3D x;=0A=
            typeof b =3D=3D "string" && !l.test(b) && (b =3D =
b.toLowerCase(), d =3D b, g =3D w), g("parentNode", b, f, a, d, c)=0A=
          },=0A=
          "~": function (a, b, c) {=0A=
            var d, f =3D e++,=0A=
              g =3D x;=0A=
            typeof b =3D=3D "string" && !l.test(b) && (b =3D =
b.toLowerCase(), d =3D b, g =3D w), g("previousSibling", b, f, a, d, c)=0A=
          }=0A=
        },=0A=
        find: {=0A=
          ID: function (a, b, c) {=0A=
            if (typeof b.getElementById !=3D "undefined" && !c) {=0A=
              var d =3D b.getElementById(a[1]);=0A=
              return d && d.parentNode ? [d] : []=0A=
            }=0A=
          },=0A=
          NAME: function (a, b) {=0A=
            if (typeof b.getElementsByName !=3D "undefined") {=0A=
              var c =3D [],=0A=
                d =3D b.getElementsByName(a[1]);=0A=
              for (var e =3D 0, f =3D d.length; e < f; e++) =
d[e].getAttribute("name") =3D=3D=3D a[1] && c.push(d[e]);=0A=
              return c.length =3D=3D=3D 0 ? null : c=0A=
            }=0A=
          },=0A=
          TAG: function (a, b) {=0A=
            if (typeof b.getElementsByTagName !=3D "undefined") return =
b.getElementsByTagName(a[1])=0A=
          }=0A=
        },=0A=
        preFilter: {=0A=
          CLASS: function (a, b, c, d, e, f) {=0A=
            a =3D " " + a[1].replace(j, "") + " ";=0A=
            if (f) return a;=0A=
            for (var g =3D 0, h;=0A=
            (h =3D b[g]) !=3D null; g++) h && (e ^ (h.className && (" " =
+ h.className + " ").replace(/[\t\n\r]/g, " ").indexOf(a) >=3D 0) ? c || =
d.push(h) : c && (b[g] =3D !1));=0A=
            return !1=0A=
          },=0A=
          ID: function (a) {=0A=
            return a[1].replace(j, "")=0A=
          },=0A=
          TAG: function (a, b) {=0A=
            return a[1].replace(j, "").toLowerCase()=0A=
          },=0A=
          CHILD: function (a) {=0A=
            if (a[1] =3D=3D=3D "nth") {=0A=
              a[2] || m.error(a[0]), a[2] =3D a[2].replace(/^\+|\s*/g, =
"");=0A=
              var b =3D /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2] =3D=3D=3D =
"even" && "2n" || a[2] =3D=3D=3D "odd" && "2n+1" || !/\D/.test(a[2]) && =
"0n+" + a[2] || a[2]);=0A=
              a[2] =3D b[1] + (b[2] || 1) - 0, a[3] =3D b[3] - 0=0A=
            } else a[2] && m.error(a[0]);=0A=
            a[0] =3D e++;=0A=
            return a=0A=
          },=0A=
          ATTR: function (a, b, c, d, e, f) {=0A=
            var g =3D a[1] =3D a[1].replace(j, "");=0A=
            !f && o.attrMap[g] && (a[1] =3D o.attrMap[g]), a[4] =3D =
(a[4] || a[5] || "").replace(j, ""), a[2] =3D=3D=3D "~=3D" && (a[4] =3D =
" " + a[4] + " ");=0A=
            return a=0A=
          },=0A=
          PSEUDO: function (b, c, d, e, f) {=0A=
            if (b[1] =3D=3D=3D "not") if ((a.exec(b[3]) || "").length > =
1 || /^\w/.test(b[3])) b[3] =3D m(b[3], null, null, c);=0A=
            else {=0A=
              var g =3D m.filter(b[3], c, d, !0 ^ f);=0A=
              d || e.push.apply(e, g);=0A=
              return !1=0A=
            } else if (o.match.POS.test(b[0]) || =
o.match.CHILD.test(b[0])) return !0;=0A=
            return b=0A=
          },=0A=
          POS: function (a) {=0A=
            a.unshift(!0);=0A=
            return a=0A=
          }=0A=
        },=0A=
        filters: {=0A=
          enabled: function (a) {=0A=
            return a.disabled =3D=3D=3D !1 && a.type !=3D=3D "hidden"=0A=
          },=0A=
          disabled: function (a) {=0A=
            return a.disabled =3D=3D=3D !0=0A=
          },=0A=
          checked: function (a) {=0A=
            return a.checked =3D=3D=3D !0=0A=
          },=0A=
          selected: function (a) {=0A=
            a.parentNode && a.parentNode.selectedIndex;=0A=
            return a.selected =3D=3D=3D !0=0A=
          },=0A=
          parent: function (a) {=0A=
            return !!a.firstChild=0A=
          },=0A=
          empty: function (a) {=0A=
            return !a.firstChild=0A=
          },=0A=
          has: function (a, b, c) {=0A=
            return !!m(c[3], a).length=0A=
          },=0A=
          header: function (a) {=0A=
            return /h\d/i.test(a.nodeName)=0A=
          },=0A=
          text: function (a) {=0A=
            var b =3D a.getAttribute("type"),=0A=
              c =3D a.type;=0A=
            return a.nodeName.toLowerCase() =3D=3D=3D "input" && "text" =
=3D=3D=3D c && (b =3D=3D=3D c || b =3D=3D=3D null)=0A=
          },=0A=
          radio: function (a) {=0A=
            return a.nodeName.toLowerCase() =3D=3D=3D "input" && "radio" =
=3D=3D=3D a.type=0A=
          },=0A=
          checkbox: function (a) {=0A=
            return a.nodeName.toLowerCase() =3D=3D=3D "input" && =
"checkbox" =3D=3D=3D a.type=0A=
          },=0A=
          file: function (a) {=0A=
            return a.nodeName.toLowerCase() =3D=3D=3D "input" && "file" =
=3D=3D=3D a.type=0A=
          },=0A=
          password: function (a) {=0A=
            return a.nodeName.toLowerCase() =3D=3D=3D "input" && =
"password" =3D=3D=3D a.type=0A=
          },=0A=
          submit: function (a) {=0A=
            var b =3D a.nodeName.toLowerCase();=0A=
            return (b =3D=3D=3D "input" || b =3D=3D=3D "button") && =
"submit" =3D=3D=3D a.type=0A=
          },=0A=
          image: function (a) {=0A=
            return a.nodeName.toLowerCase() =3D=3D=3D "input" && "image" =
=3D=3D=3D a.type=0A=
          },=0A=
          reset: function (a) {=0A=
            var b =3D a.nodeName.toLowerCase();=0A=
            return (b =3D=3D=3D "input" || b =3D=3D=3D "button") && =
"reset" =3D=3D=3D a.type=0A=
          },=0A=
          button: function (a) {=0A=
            var b =3D a.nodeName.toLowerCase();=0A=
            return b =3D=3D=3D "input" && "button" =3D=3D=3D a.type || b =
=3D=3D=3D "button"=0A=
          },=0A=
          input: function (a) {=0A=
            return /input|select|textarea|button/i.test(a.nodeName)=0A=
          },=0A=
          focus: function (a) {=0A=
            return a =3D=3D=3D a.ownerDocument.activeElement=0A=
          }=0A=
        },=0A=
        setFilters: {=0A=
          first: function (a, b) {=0A=
            return b =3D=3D=3D 0=0A=
          },=0A=
          last: function (a, b, c, d) {=0A=
            return b =3D=3D=3D d.length - 1=0A=
          },=0A=
          even: function (a, b) {=0A=
            return b % 2 =3D=3D=3D 0=0A=
          },=0A=
          odd: function (a, b) {=0A=
            return b % 2 =3D=3D=3D 1=0A=
          },=0A=
          lt: function (a, b, c) {=0A=
            return b < c[3] - 0=0A=
          },=0A=
          gt: function (a, b, c) {=0A=
            return b > c[3] - 0=0A=
          },=0A=
          nth: function (a, b, c) {=0A=
            return c[3] - 0 =3D=3D=3D b=0A=
          },=0A=
          eq: function (a, b, c) {=0A=
            return c[3] - 0 =3D=3D=3D b=0A=
          }=0A=
        },=0A=
        filter: {=0A=
          PSEUDO: function (a, b, c, d) {=0A=
            var e =3D b[1],=0A=
              f =3D o.filters[e];=0A=
            if (f) return f(a, c, b, d);=0A=
            if (e =3D=3D=3D "contains") return (a.textContent || =
a.innerText || n([a]) || "").indexOf(b[3]) >=3D 0;=0A=
            if (e =3D=3D=3D "not") {=0A=
              var g =3D b[3];=0A=
              for (var h =3D 0, i =3D g.length; h < i; h++) if (g[h] =
=3D=3D=3D a) return !1;=0A=
              return !0=0A=
            }=0A=
            m.error(e)=0A=
          },=0A=
          CHILD: function (a, b) {=0A=
            var c, e, f, g, h, i, j, k =3D b[1],=0A=
              l =3D a;=0A=
            switch (k) {=0A=
            case "only":=0A=
            case "first":=0A=
              while (l =3D l.previousSibling) if (l.nodeType =3D=3D=3D =
1) return !1;=0A=
              if (k =3D=3D=3D "first") return !0;=0A=
              l =3D a;=0A=
            case "last":=0A=
              while (l =3D l.nextSibling) if (l.nodeType =3D=3D=3D 1) =
return !1;=0A=
              return !0;=0A=
            case "nth":=0A=
              c =3D b[2], e =3D b[3];=0A=
              if (c =3D=3D=3D 1 && e =3D=3D=3D 0) return !0;=0A=
              f =3D b[0], g =3D a.parentNode;=0A=
              if (g && (g[d] !=3D=3D f || !a.nodeIndex)) {=0A=
                i =3D 0;=0A=
                for (l =3D g.firstChild; l; l =3D l.nextSibling) =
l.nodeType =3D=3D=3D 1 && (l.nodeIndex =3D ++i);=0A=
                g[d] =3D f=0A=
              }=0A=
              j =3D a.nodeIndex - e;=0A=
              return c =3D=3D=3D 0 ? j =3D=3D=3D 0 : j % c =3D=3D=3D 0 =
&& j / c >=3D 0=0A=
            }=0A=
          },=0A=
          ID: function (a, b) {=0A=
            return a.nodeType =3D=3D=3D 1 && a.getAttribute("id") =
=3D=3D=3D b=0A=
          },=0A=
          TAG: function (a, b) {=0A=
            return b =3D=3D=3D "*" && a.nodeType =3D=3D=3D 1 || !! =
a.nodeName && a.nodeName.toLowerCase() =3D=3D=3D b=0A=
          },=0A=
          CLASS: function (a, b) {=0A=
            return (" " + (a.className || a.getAttribute("class")) + " =
").indexOf(b) > -1=0A=
          },=0A=
          ATTR: function (a, b) {=0A=
            var c =3D b[1],=0A=
              d =3D m.attr ? m.attr(a, c) : o.attrHandle[c] ? =
o.attrHandle[c](a) : a[c] !=3D null ? a[c] : a.getAttribute(c),=0A=
              e =3D d + "",=0A=
              f =3D b[2],=0A=
              g =3D b[4];=0A=
            return d =3D=3D null ? f =3D=3D=3D "!=3D" : !f && m.attr ? d =
!=3D null : f =3D=3D=3D "=3D" ? e =3D=3D=3D g : f =3D=3D=3D "*=3D" ? =
e.indexOf(g) >=3D 0 : f =3D=3D=3D "~=3D" ? (" " + e + " ").indexOf(g) =
>=3D 0 : g ? f =3D=3D=3D "!=3D" ? e !=3D=3D g : f =3D=3D=3D "^=3D" ? =
e.indexOf(g) =3D=3D=3D 0 : f =3D=3D=3D "$=3D" ? e.substr(e.length - =
g.length) =3D=3D=3D g : f =3D=3D=3D "|=3D" ? e =3D=3D=3D g || =
e.substr(0, g.length + 1) =3D=3D=3D g + "-" : !1 : e && d !=3D=3D !1=0A=
          },=0A=
          POS: function (a, b, c, d) {=0A=
            var e =3D b[2],=0A=
              f =3D o.setFilters[e];=0A=
            if (f) return f(a, c, b, d)=0A=
          }=0A=
        }=0A=
      },=0A=
      p =3D o.match.POS,=0A=
      q =3D function (a, b) {=0A=
        return "\\" + (b - 0 + 1)=0A=
      };=0A=
    for (var r in o.match) o.match[r] =3D new RegExp(o.match[r].source + =
/(?![^\[]*\])(?![^\(]*\))/.source), o.leftMatch[r] =3D new =
RegExp(/(^(?:.|\r|\n)*?)/.source + o.match[r].source.replace(/\\(\d+)/g, =
q));=0A=
    o.match.globalPOS =3D p;=0A=
    var s =3D function (a, b) {=0A=
        a =3D Array.prototype.slice.call(a, 0);=0A=
        if (b) {=0A=
          b.push.apply(b, a);=0A=
          return b=0A=
        }=0A=
        return a=0A=
      };=0A=
    try {=0A=
      Array.prototype.slice.call(c.documentElement.childNodes, =
0)[0].nodeType=0A=
    } catch (t) {=0A=
      s =3D function (a, b) {=0A=
        var c =3D 0,=0A=
          d =3D b || [];=0A=
        if (g.call(a) =3D=3D=3D "[object Array]") =
Array.prototype.push.apply(d, a);=0A=
        else if (typeof a.length =3D=3D "number") for (var e =3D =
a.length; c < e; c++) d.push(a[c]);=0A=
        else for (; a[c]; c++) d.push(a[c]);=0A=
        return d=0A=
      }=0A=
    }=0A=
    var u, v;=0A=
    c.documentElement.compareDocumentPosition ? u =3D function (a, b) {=0A=
      if (a =3D=3D=3D b) {=0A=
        h =3D !0;=0A=
        return 0=0A=
      }=0A=
      if (!a.compareDocumentPosition || !b.compareDocumentPosition) =
return a.compareDocumentPosition ? -1 : 1;=0A=
      return a.compareDocumentPosition(b) & 4 ? -1 : 1=0A=
    } : (u =3D function (a, b) {=0A=
      if (a =3D=3D=3D b) {=0A=
        h =3D !0;=0A=
        return 0=0A=
      }=0A=
      if (a.sourceIndex && b.sourceIndex) return a.sourceIndex - =
b.sourceIndex;=0A=
      var c, d, e =3D [],=0A=
        f =3D [],=0A=
        g =3D a.parentNode,=0A=
        i =3D b.parentNode,=0A=
        j =3D g;=0A=
      if (g =3D=3D=3D i) return v(a, b);=0A=
      if (!g) return -1;=0A=
      if (!i) return 1;=0A=
      while (j) e.unshift(j), j =3D j.parentNode;=0A=
      j =3D i;=0A=
      while (j) f.unshift(j), j =3D j.parentNode;=0A=
      c =3D e.length, d =3D f.length;=0A=
      for (var k =3D 0; k < c && k < d; k++) if (e[k] !=3D=3D f[k]) =
return v(e[k], f[k]);=0A=
      return k =3D=3D=3D c ? v(a, f[k], -1) : v(e[k], b, 1)=0A=
    }, v =3D function (a, b, c) {=0A=
      if (a =3D=3D=3D b) return c;=0A=
      var d =3D a.nextSibling;=0A=
      while (d) {=0A=
        if (d =3D=3D=3D b) return -1;=0A=
        d =3D d.nextSibling=0A=
      }=0A=
      return 1=0A=
    }), function () {=0A=
      var a =3D c.createElement("div"),=0A=
        d =3D "script" + (new Date).getTime(),=0A=
        e =3D c.documentElement;=0A=
      a.innerHTML =3D "<a name=3D'" + d + "'/>", e.insertBefore(a, =
e.firstChild), c.getElementById(d) && (o.find.ID =3D function (a, c, d) {=0A=
        if (typeof c.getElementById !=3D "undefined" && !d) {=0A=
          var e =3D c.getElementById(a[1]);=0A=
          return e ? e.id =3D=3D=3D a[1] || typeof e.getAttributeNode =
!=3D "undefined" && e.getAttributeNode("id").nodeValue =3D=3D=3D a[1] ? =
[e] : b : []=0A=
        }=0A=
      }, o.filter.ID =3D function (a, b) {=0A=
        var c =3D typeof a.getAttributeNode !=3D "undefined" && =
a.getAttributeNode("id");=0A=
        return a.nodeType =3D=3D=3D 1 && c && c.nodeValue =3D=3D=3D b=0A=
      }), e.removeChild(a), e =3D a =3D null=0A=
    }(), function () {=0A=
      var a =3D c.createElement("div");=0A=
      a.appendChild(c.createComment("")), =
a.getElementsByTagName("*").length > 0 && (o.find.TAG =3D function (a, =
b) {=0A=
        var c =3D b.getElementsByTagName(a[1]);=0A=
        if (a[1] =3D=3D=3D "*") {=0A=
          var d =3D [];=0A=
          for (var e =3D 0; c[e]; e++) c[e].nodeType =3D=3D=3D 1 && =
d.push(c[e]);=0A=
          c =3D d=0A=
        }=0A=
        return c=0A=
      }), a.innerHTML =3D "<a href=3D'#'></a>", a.firstChild && typeof =
a.firstChild.getAttribute !=3D "undefined" && =
a.firstChild.getAttribute("href") !=3D=3D "#" && (o.attrHandle.href =3D =
function (a) {=0A=
        return a.getAttribute("href", 2)=0A=
      }), a =3D null=0A=
    }(), c.querySelectorAll &&=0A=
    function () {=0A=
      var a =3D m,=0A=
        b =3D c.createElement("div"),=0A=
        d =3D "__sizzle__";=0A=
      b.innerHTML =3D "<p class=3D'TEST'></p>";=0A=
      if (!b.querySelectorAll || b.querySelectorAll(".TEST").length =
!=3D=3D 0) {=0A=
        m =3D function (b, e, f, g) {=0A=
          e =3D e || c;=0A=
          if (!g && !m.isXML(e)) {=0A=
            var h =3D /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);=0A=
            if (h && (e.nodeType =3D=3D=3D 1 || e.nodeType =3D=3D=3D 9)) =
{=0A=
              if (h[1]) return s(e.getElementsByTagName(b), f);=0A=
              if (h[2] && o.find.CLASS && e.getElementsByClassName) =
return s(e.getElementsByClassName(h[2]), f)=0A=
            }=0A=
            if (e.nodeType =3D=3D=3D 9) {=0A=
              if (b =3D=3D=3D "body" && e.body) return s([e.body], f);=0A=
              if (h && h[3]) {=0A=
                var i =3D e.getElementById(h[3]);=0A=
                if (!i || !i.parentNode) return s([], f);=0A=
                if (i.id =3D=3D=3D h[3]) return s([i], f)=0A=
              }=0A=
              try {=0A=
                return s(e.querySelectorAll(b), f)=0A=
              } catch (j) {}=0A=
            } else if (e.nodeType =3D=3D=3D 1 && =
e.nodeName.toLowerCase() !=3D=3D "object") {=0A=
              var k =3D e,=0A=
                l =3D e.getAttribute("id"),=0A=
                n =3D l || d,=0A=
                p =3D e.parentNode,=0A=
                q =3D /^\s*[+~]/.test(b);=0A=
              l ? n =3D n.replace(/'/g, "\\$&") : e.setAttribute("id", =
n), q && p && (e =3D e.parentNode);=0A=
              try {=0A=
                if (!q || p) return s(e.querySelectorAll("[id=3D'" + n + =
"'] " + b), f)=0A=
              } catch (r) {} finally {=0A=
                l || k.removeAttribute("id")=0A=
              }=0A=
            }=0A=
          }=0A=
          return a(b, e, f, g)=0A=
        };=0A=
        for (var e in a) m[e] =3D a[e];=0A=
        b =3D null=0A=
      }=0A=
    }(), function () {=0A=
      var a =3D c.documentElement,=0A=
        b =3D a.matchesSelector || a.mozMatchesSelector || =
a.webkitMatchesSelector || a.msMatchesSelector;=0A=
      if (b) {=0A=
        var d =3D !b.call(c.createElement("div"), "div"),=0A=
          e =3D !1;=0A=
        try {=0A=
          b.call(c.documentElement, "[test!=3D'']:sizzle")=0A=
        } catch (f) {=0A=
          e =3D !0=0A=
        }=0A=
        m.matchesSelector =3D function (a, c) {=0A=
          c =3D c.replace(/\=3D\s*([^'"\]]*)\s*\]/g, "=3D'$1']");=0A=
          if (!m.isXML(a)) try {=0A=
            if (e || !o.match.PSEUDO.test(c) && !/!=3D/.test(c)) {=0A=
              var f =3D b.call(a, c);=0A=
              if (f || !d || a.document && a.document.nodeType !=3D=3D =
11) return f=0A=
            }=0A=
          } catch (g) {}=0A=
          return m(c, null, null, [a]).length > 0=0A=
        }=0A=
      }=0A=
    }(), function () {=0A=
      var a =3D c.createElement("div");=0A=
      a.innerHTML =3D "<div class=3D'test e'></div><div =
class=3D'test'></div>";=0A=
      if ( !! a.getElementsByClassName && =
a.getElementsByClassName("e").length !=3D=3D 0) {=0A=
        a.lastChild.className =3D "e";=0A=
        if (a.getElementsByClassName("e").length =3D=3D=3D 1) return;=0A=
        o.order.splice(1, 0, "CLASS"), o.find.CLASS =3D function (a, b, =
c) {=0A=
          if (typeof b.getElementsByClassName !=3D "undefined" && !c) =
return b.getElementsByClassName(a[1])=0A=
        }, a =3D null=0A=
      }=0A=
    }(), c.documentElement.contains ? m.contains =3D function (a, b) {=0A=
      return a !=3D=3D b && (a.contains ? a.contains(b) : !0)=0A=
    } : c.documentElement.compareDocumentPosition ? m.contains =3D =
function (a, b) {=0A=
      return !!(a.compareDocumentPosition(b) & 16)=0A=
    } : m.contains =3D function () {=0A=
      return !1=0A=
    }, m.isXML =3D function (a) {=0A=
      var b =3D (a ? a.ownerDocument || a : 0).documentElement;=0A=
      return b ? b.nodeName !=3D=3D "HTML" : !1=0A=
    };=0A=
    var y =3D function (a, b, c) {=0A=
        var d, e =3D [],=0A=
          f =3D "",=0A=
          g =3D b.nodeType ? [b] : b;=0A=
        while (d =3D o.match.PSEUDO.exec(a)) f +=3D d[0], a =3D =
a.replace(o.match.PSEUDO, "");=0A=
        a =3D o.relative[a] ? a + "*" : a;=0A=
        for (var h =3D 0, i =3D g.length; h < i; h++) m(a, g[h], e, c);=0A=
        return m.filter(f, e)=0A=
      };=0A=
    m.attr =3D f.attr, m.selectors.attrMap =3D {}, f.find =3D m, f.expr =
=3D m.selectors, f.expr[":"] =3D f.expr.filters, f.unique =3D =
m.uniqueSort, f.text =3D m.getText, f.isXMLDoc =3D m.isXML, f.contains =
=3D m.contains=0A=
  }();=0A=
  var L =3D /Until$/,=0A=
    M =3D /^(?:parents|prevUntil|prevAll)/,=0A=
    N =3D /,/,=0A=
    O =3D /^.[^:#\[\.,]*$/,=0A=
    P =3D Array.prototype.slice,=0A=
    Q =3D f.expr.match.globalPOS,=0A=
    R =3D {=0A=
      children: !0,=0A=
      contents: !0,=0A=
      next: !0,=0A=
      prev: !0=0A=
    };=0A=
  f.fn.extend({=0A=
    find: function (a) {=0A=
      var b =3D this,=0A=
        c, d;=0A=
      if (typeof a !=3D "string") return f(a).filter(function () {=0A=
        for (c =3D 0, d =3D b.length; c < d; c++) if (f.contains(b[c], =
this)) return !0=0A=
      });=0A=
      var e =3D this.pushStack("", "find", a),=0A=
        g, h, i;=0A=
      for (c =3D 0, d =3D this.length; c < d; c++) {=0A=
        g =3D e.length, f.find(a, this[c], e);=0A=
        if (c > 0) for (h =3D g; h < e.length; h++) for (i =3D 0; i < g; =
i++) if (e[i] =3D=3D=3D e[h]) {=0A=
          e.splice(h--, 1);=0A=
          break=0A=
        }=0A=
      }=0A=
      return e=0A=
    },=0A=
    has: function (a) {=0A=
      var b =3D f(a);=0A=
      return this.filter(function () {=0A=
        for (var a =3D 0, c =3D b.length; a < c; a++) if =
(f.contains(this, b[a])) return !0=0A=
      })=0A=
    },=0A=
    not: function (a) {=0A=
      return this.pushStack(T(this, a, !1), "not", a)=0A=
    },=0A=
    filter: function (a) {=0A=
      return this.pushStack(T(this, a, !0), "filter", a)=0A=
    },=0A=
    is: function (a) {=0A=
      return !!a && (typeof a =3D=3D "string" ? Q.test(a) ? f(a, =
this.context).index(this[0]) >=3D 0 : f.filter(a, this).length > 0 : =
this.filter(a).length > 0)=0A=
    },=0A=
    closest: function (a, b) {=0A=
      var c =3D [],=0A=
        d, e, g =3D this[0];=0A=
      if (f.isArray(a)) {=0A=
        var h =3D 1;=0A=
        while (g && g.ownerDocument && g !=3D=3D b) {=0A=
          for (d =3D 0; d < a.length; d++) f(g).is(a[d]) && c.push({=0A=
            selector: a[d],=0A=
            elem: g,=0A=
            level: h=0A=
          });=0A=
          g =3D g.parentNode, h++=0A=
        }=0A=
        return c=0A=
      }=0A=
      var i =3D Q.test(a) || typeof a !=3D "string" ? f(a, b || =
this.context) : 0;=0A=
      for (d =3D 0, e =3D this.length; d < e; d++) {=0A=
        g =3D this[d];=0A=
        while (g) {=0A=
          if (i ? i.index(g) > -1 : f.find.matchesSelector(g, a)) {=0A=
            c.push(g);=0A=
            break=0A=
          }=0A=
          g =3D g.parentNode;=0A=
          if (!g || !g.ownerDocument || g =3D=3D=3D b || g.nodeType =
=3D=3D=3D 11) break=0A=
        }=0A=
      }=0A=
      c =3D c.length > 1 ? f.unique(c) : c;=0A=
      return this.pushStack(c, "closest", a)=0A=
    },=0A=
    index: function (a) {=0A=
      if (!a) return this[0] && this[0].parentNode ? =
this.prevAll().length : -1;=0A=
      if (typeof a =3D=3D "string") return f.inArray(this[0], f(a));=0A=
      return f.inArray(a.jquery ? a[0] : a, this)=0A=
    },=0A=
    add: function (a, b) {=0A=
      var c =3D typeof a =3D=3D "string" ? f(a, b) : f.makeArray(a && =
a.nodeType ? [a] : a),=0A=
        d =3D f.merge(this.get(), c);=0A=
      return this.pushStack(S(c[0]) || S(d[0]) ? d : f.unique(d))=0A=
    },=0A=
    andSelf: function () {=0A=
      return this.add(this.prevObject)=0A=
    }=0A=
  }), f.each({=0A=
    parent: function (a) {=0A=
      var b =3D a.parentNode;=0A=
      return b && b.nodeType !=3D=3D 11 ? b : null=0A=
    },=0A=
    parents: function (a) {=0A=
      return f.dir(a, "parentNode")=0A=
    },=0A=
    parentsUntil: function (a, b, c) {=0A=
      return f.dir(a, "parentNode", c)=0A=
    },=0A=
    next: function (a) {=0A=
      return f.nth(a, 2, "nextSibling")=0A=
    },=0A=
    prev: function (a) {=0A=
      return f.nth(a, 2, "previousSibling")=0A=
    },=0A=
    nextAll: function (a) {=0A=
      return f.dir(a, "nextSibling")=0A=
    },=0A=
    prevAll: function (a) {=0A=
      return f.dir(a, "previousSibling")=0A=
    },=0A=
    nextUntil: function (a, b, c) {=0A=
      return f.dir(a, "nextSibling", c)=0A=
    },=0A=
    prevUntil: function (a, b, c) {=0A=
      return f.dir(a, "previousSibling", c)=0A=
    },=0A=
    siblings: function (a) {=0A=
      return f.sibling((a.parentNode || {}).firstChild, a)=0A=
    },=0A=
    children: function (a) {=0A=
      return f.sibling(a.firstChild)=0A=
    },=0A=
    contents: function (a) {=0A=
      return f.nodeName(a, "iframe") ? a.contentDocument || =
a.contentWindow.document : f.makeArray(a.childNodes)=0A=
    }=0A=
  }, function (a, b) {=0A=
    f.fn[a] =3D function (c, d) {=0A=
      var e =3D f.map(this, b, c);=0A=
      L.test(a) || (d =3D c), d && typeof d =3D=3D "string" && (e =3D =
f.filter(d, e)), e =3D this.length > 1 && !R[a] ? f.unique(e) : e, =
(this.length > 1 || N.test(d)) && M.test(a) && (e =3D e.reverse());=0A=
      return this.pushStack(e, a, P.call(arguments).join(","))=0A=
    }=0A=
  }), f.extend({=0A=
    filter: function (a, b, c) {=0A=
      c && (a =3D ":not(" + a + ")");=0A=
      return b.length =3D=3D=3D 1 ? f.find.matchesSelector(b[0], a) ? =
[b[0]] : [] : f.find.matches(a, b)=0A=
    },=0A=
    dir: function (a, c, d) {=0A=
      var e =3D [],=0A=
        g =3D a[c];=0A=
      while (g && g.nodeType !=3D=3D 9 && (d =3D=3D=3D b || g.nodeType =
!=3D=3D 1 || !f(g).is(d))) g.nodeType =3D=3D=3D 1 && e.push(g), g =3D =
g[c];=0A=
      return e=0A=
    },=0A=
    nth: function (a, b, c, d) {=0A=
      b =3D b || 1;=0A=
      var e =3D 0;=0A=
      for (; a; a =3D a[c]) if (a.nodeType =3D=3D=3D 1 && ++e =3D=3D=3D =
b) break;=0A=
      return a=0A=
    },=0A=
    sibling: function (a, b) {=0A=
      var c =3D [];=0A=
      for (; a; a =3D a.nextSibling) a.nodeType =3D=3D=3D 1 && a !=3D=3D =
b && c.push(a);=0A=
      return c=0A=
    }=0A=
  });=0A=
  var V =3D =
"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|fig=
ure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|t=
ime|video",=0A=
    W =3D / jQuery\d+=3D"(?:\d+|null)"/g,=0A=
    X =3D /^\s+/,=0A=
    Y =3D =
/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig=
,=0A=
    Z =3D /<([\w:]+)/,=0A=
    $ =3D /<tbody/i,=0A=
    _ =3D /<|&#?\w+;/,=0A=
    ba =3D /<(?:script|style)/i,=0A=
    bb =3D /<(?:script|object|embed|option|style)/i,=0A=
    bc =3D new RegExp("<(?:" + V + ")[\\s/>]", "i"),=0A=
    bd =3D /checked\s*(?:[^=3D]|=3D\s*.checked.)/i,=0A=
    be =3D /\/(java|ecma)script/i,=0A=
    bf =3D /^\s*<!(?:\[CDATA\[|\-\-)/,=0A=
    bg =3D {=0A=
      option: [1, "<select multiple=3D'multiple'>", "</select>"],=0A=
      legend: [1, "<fieldset>", "</fieldset>"],=0A=
      thead: [1, "<table>", "</table>"],=0A=
      tr: [2, "<table><tbody>", "</tbody></table>"],=0A=
      td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],=0A=
      col: [2, "<table><tbody></tbody><colgroup>", =
"</colgroup></table>"],=0A=
      area: [1, "<map>", "</map>"],=0A=
      _default: [0, "", ""]=0A=
    },=0A=
    bh =3D U(c);=0A=
  bg.optgroup =3D bg.option, bg.tbody =3D bg.tfoot =3D bg.colgroup =3D =
bg.caption =3D bg.thead, bg.th =3D bg.td, f.support.htmlSerialize || =
(bg._default =3D [1, "div<div>", "</div>"]), f.fn.extend({=0A=
    text: function (a) {=0A=
      return f.access(this, function (a) {=0A=
        return a =3D=3D=3D b ? f.text(this) : =
this.empty().append((this[0] && this[0].ownerDocument || =
c).createTextNode(a))=0A=
      }, null, a, arguments.length)=0A=
    },=0A=
    wrapAll: function (a) {=0A=
      if (f.isFunction(a)) return this.each(function (b) {=0A=
        f(this).wrapAll(a.call(this, b))=0A=
      });=0A=
      if (this[0]) {=0A=
        var b =3D f(a, this[0].ownerDocument).eq(0).clone(!0);=0A=
        this[0].parentNode && b.insertBefore(this[0]), b.map(function () =
{=0A=
          var a =3D this;=0A=
          while (a.firstChild && a.firstChild.nodeType =3D=3D=3D 1) a =
=3D a.firstChild;=0A=
          return a=0A=
        }).append(this)=0A=
      }=0A=
      return this=0A=
    },=0A=
    wrapInner: function (a) {=0A=
      if (f.isFunction(a)) return this.each(function (b) {=0A=
        f(this).wrapInner(a.call(this, b))=0A=
      });=0A=
      return this.each(function () {=0A=
        var b =3D f(this),=0A=
          c =3D b.contents();=0A=
        c.length ? c.wrapAll(a) : b.append(a)=0A=
      })=0A=
    },=0A=
    wrap: function (a) {=0A=
      var b =3D f.isFunction(a);=0A=
      return this.each(function (c) {=0A=
        f(this).wrapAll(b ? a.call(this, c) : a)=0A=
      })=0A=
    },=0A=
    unwrap: function () {=0A=
      return this.parent().each(function () {=0A=
        f.nodeName(this, "body") || f(this).replaceWith(this.childNodes)=0A=
      }).end()=0A=
    },=0A=
    append: function () {=0A=
      return this.domManip(arguments, !0, function (a) {=0A=
        this.nodeType =3D=3D=3D 1 && this.appendChild(a)=0A=
      })=0A=
    },=0A=
    prepend: function () {=0A=
      return this.domManip(arguments, !0, function (a) {=0A=
        this.nodeType =3D=3D=3D 1 && this.insertBefore(a, =
this.firstChild)=0A=
      })=0A=
    },=0A=
    before: function () {=0A=
      if (this[0] && this[0].parentNode) return this.domManip(arguments, =
!1, function (a) {=0A=
        this.parentNode.insertBefore(a, this)=0A=
      });=0A=
      if (arguments.length) {=0A=
        var a =3D f.clean(arguments);=0A=
        a.push.apply(a, this.toArray());=0A=
        return this.pushStack(a, "before", arguments)=0A=
      }=0A=
    },=0A=
    after: function () {=0A=
      if (this[0] && this[0].parentNode) return this.domManip(arguments, =
!1, function (a) {=0A=
        this.parentNode.insertBefore(a, this.nextSibling)=0A=
      });=0A=
      if (arguments.length) {=0A=
        var a =3D this.pushStack(this, "after", arguments);=0A=
        a.push.apply(a, f.clean(arguments));=0A=
        return a=0A=
      }=0A=
    },=0A=
    remove: function (a, b) {=0A=
      for (var c =3D 0, d;=0A=
      (d =3D this[c]) !=3D null; c++) if (!a || f.filter(a, =
[d]).length)!b && d.nodeType =3D=3D=3D 1 && =
(f.cleanData(d.getElementsByTagName("*")), f.cleanData([d])), =
d.parentNode && d.parentNode.removeChild(d);=0A=
      return this=0A=
    },=0A=
    empty: function () {=0A=
      for (var a =3D 0, b;=0A=
      (b =3D this[a]) !=3D null; a++) {=0A=
        b.nodeType =3D=3D=3D 1 && =
f.cleanData(b.getElementsByTagName("*"));=0A=
        while (b.firstChild) b.removeChild(b.firstChild)=0A=
      }=0A=
      return this=0A=
    },=0A=
    clone: function (a, b) {=0A=
      a =3D a =3D=3D null ? !1 : a, b =3D b =3D=3D null ? a : b;=0A=
      return this.map(function () {=0A=
        return f.clone(this, a, b)=0A=
      })=0A=
    },=0A=
    html: function (a) {=0A=
      return f.access(this, function (a) {=0A=
        var c =3D this[0] || {},=0A=
          d =3D 0,=0A=
          e =3D this.length;=0A=
        if (a =3D=3D=3D b) return c.nodeType =3D=3D=3D 1 ? =
c.innerHTML.replace(W, "") : null;=0A=
        if (typeof a =3D=3D "string" && !ba.test(a) && =
(f.support.leadingWhitespace || !X.test(a)) && !bg[(Z.exec(a) || ["", =
""])[1].toLowerCase()]) {=0A=
          a =3D a.replace(Y, "<$1></$2>");=0A=
          try {=0A=
            for (; d < e; d++) c =3D this[d] || {}, c.nodeType =3D=3D=3D =
1 && (f.cleanData(c.getElementsByTagName("*")), c.innerHTML =3D a);=0A=
            c =3D 0=0A=
          } catch (g) {}=0A=
        }=0A=
        c && this.empty().append(a)=0A=
      }, null, a, arguments.length)=0A=
    },=0A=
    replaceWith: function (a) {=0A=
      if (this[0] && this[0].parentNode) {=0A=
        if (f.isFunction(a)) return this.each(function (b) {=0A=
          var c =3D f(this),=0A=
            d =3D c.html();=0A=
          c.replaceWith(a.call(this, b, d))=0A=
        });=0A=
        typeof a !=3D "string" && (a =3D f(a).detach());=0A=
        return this.each(function () {=0A=
          var b =3D this.nextSibling,=0A=
            c =3D this.parentNode;=0A=
          f(this).remove(), b ? f(b).before(a) : f(c).append(a)=0A=
        })=0A=
      }=0A=
      return this.length ? this.pushStack(f(f.isFunction(a) ? a() : a), =
"replaceWith", a) : this=0A=
    },=0A=
    detach: function (a) {=0A=
      return this.remove(a, !0)=0A=
    },=0A=
    domManip: function (a, c, d) {=0A=
      var e, g, h, i, j =3D a[0],=0A=
        k =3D [];=0A=
      if (!f.support.checkClone && arguments.length =3D=3D=3D 3 && =
typeof j =3D=3D "string" && bd.test(j)) return this.each(function () {=0A=
        f(this).domManip(a, c, d, !0)=0A=
      });=0A=
      if (f.isFunction(j)) return this.each(function (e) {=0A=
        var g =3D f(this);=0A=
        a[0] =3D j.call(this, e, c ? g.html() : b), g.domManip(a, c, d)=0A=
      });=0A=
      if (this[0]) {=0A=
        i =3D j && j.parentNode, f.support.parentNode && i && i.nodeType =
=3D=3D=3D 11 && i.childNodes.length =3D=3D=3D this.length ? e =3D {=0A=
          fragment: i=0A=
        } : e =3D f.buildFragment(a, this, k), h =3D e.fragment, =
h.childNodes.length =3D=3D=3D 1 ? g =3D h =3D h.firstChild : g =3D =
h.firstChild;=0A=
        if (g) {=0A=
          c =3D c && f.nodeName(g, "tr");=0A=
          for (var l =3D 0, m =3D this.length, n =3D m - 1; l < m; l++) =
d.call(c ? bi(this[l], g) : this[l], e.cacheable || m > 1 && l < n ? =
f.clone(h, !0, !0) : h)=0A=
        }=0A=
        k.length && f.each(k, function (a, b) {=0A=
          b.src ? f.ajax({=0A=
            type: "GET",=0A=
            global: !1,=0A=
            url: b.src,=0A=
            async: !1,=0A=
            dataType: "script"=0A=
          }) : f.globalEval((b.text || b.textContent || b.innerHTML || =
"").replace(bf, "/*$0*/")), b.parentNode && b.parentNode.removeChild(b)=0A=
        })=0A=
      }=0A=
      return this=0A=
    }=0A=
  }), f.buildFragment =3D function (a, b, d) {=0A=
    var e, g, h, i, j =3D a[0];=0A=
    b && b[0] && (i =3D b[0].ownerDocument || b[0]), =
i.createDocumentFragment || (i =3D c), a.length =3D=3D=3D 1 && typeof j =
=3D=3D "string" && j.length < 512 && i =3D=3D=3D c && j.charAt(0) =
=3D=3D=3D "<" && !bb.test(j) && (f.support.checkClone || !bd.test(j)) && =
(f.support.html5Clone || !bc.test(j)) && (g =3D !0, h =3D =
f.fragments[j], h && h !=3D=3D 1 && (e =3D h)), e || (e =3D =
i.createDocumentFragment(), f.clean(a, i, e, d)), g && (f.fragments[j] =
=3D h ? e : 1);=0A=
    return {=0A=
      fragment: e,=0A=
      cacheable: g=0A=
    }=0A=
  }, f.fragments =3D {}, f.each({=0A=
    appendTo: "append",=0A=
    prependTo: "prepend",=0A=
    insertBefore: "before",=0A=
    insertAfter: "after",=0A=
    replaceAll: "replaceWith"=0A=
  }, function (a, b) {=0A=
    f.fn[a] =3D function (c) {=0A=
      var d =3D [],=0A=
        e =3D f(c),=0A=
        g =3D this.length =3D=3D=3D 1 && this[0].parentNode;=0A=
      if (g && g.nodeType =3D=3D=3D 11 && g.childNodes.length =3D=3D=3D =
1 && e.length =3D=3D=3D 1) {=0A=
        e[b](this[0]);=0A=
        return this=0A=
      }=0A=
      for (var h =3D 0, i =3D e.length; h < i; h++) {=0A=
        var j =3D (h > 0 ? this.clone(!0) : this).get();=0A=
        f(e[h])[b](j), d =3D d.concat(j)=0A=
      }=0A=
      return this.pushStack(d, a, e.selector)=0A=
    }=0A=
  }), f.extend({=0A=
    clone: function (a, b, c) {=0A=
      var d, e, g, h =3D f.support.html5Clone || f.isXMLDoc(a) || =
!bc.test("<" + a.nodeName + ">") ? a.cloneNode(!0) : bo(a);=0A=
      if ((!f.support.noCloneEvent || !f.support.noCloneChecked) && =
(a.nodeType =3D=3D=3D 1 || a.nodeType =3D=3D=3D 11) && !f.isXMLDoc(a)) {=0A=
        bk(a, h), d =3D bl(a), e =3D bl(h);=0A=
        for (g =3D 0; d[g]; ++g) e[g] && bk(d[g], e[g])=0A=
      }=0A=
      if (b) {=0A=
        bj(a, h);=0A=
        if (c) {=0A=
          d =3D bl(a), e =3D bl(h);=0A=
          for (g =3D 0; d[g]; ++g) bj(d[g], e[g])=0A=
        }=0A=
      }=0A=
      d =3D e =3D null;=0A=
      return h=0A=
    },=0A=
    clean: function (a, b, d, e) {=0A=
      var g, h, i, j =3D [];=0A=
      b =3D b || c, typeof b.createElement =3D=3D "undefined" && (b =3D =
b.ownerDocument || b[0] && b[0].ownerDocument || c);=0A=
      for (var k =3D 0, l;=0A=
      (l =3D a[k]) !=3D null; k++) {=0A=
        typeof l =3D=3D "number" && (l +=3D "");=0A=
        if (!l) continue;=0A=
        if (typeof l =3D=3D "string") if (!_.test(l)) l =3D =
b.createTextNode(l);=0A=
        else {=0A=
          l =3D l.replace(Y, "<$1></$2>");=0A=
          var m =3D (Z.exec(l) || ["", ""])[1].toLowerCase(),=0A=
            n =3D bg[m] || bg._default,=0A=
            o =3D n[0],=0A=
            p =3D b.createElement("div"),=0A=
            q =3D bh.childNodes,=0A=
            r;=0A=
          b =3D=3D=3D c ? bh.appendChild(p) : U(b).appendChild(p), =
p.innerHTML =3D n[1] + l + n[2];=0A=
          while (o--) p =3D p.lastChild;=0A=
          if (!f.support.tbody) {=0A=
            var s =3D $.test(l),=0A=
              t =3D m =3D=3D=3D "table" && !s ? p.firstChild && =
p.firstChild.childNodes : n[1] =3D=3D=3D "<table>" && !s ? p.childNodes =
: [];=0A=
            for (i =3D t.length - 1; i >=3D 0; --i) f.nodeName(t[i], =
"tbody") && !t[i].childNodes.length && t[i].parentNode.removeChild(t[i])=0A=
          }!f.support.leadingWhitespace && X.test(l) && =
p.insertBefore(b.createTextNode(X.exec(l)[0]), p.firstChild), l =3D =
p.childNodes, p && (p.parentNode.removeChild(p), q.length > 0 && (r =3D =
q[q.length - 1], r && r.parentNode && r.parentNode.removeChild(r)))=0A=
        }=0A=
        var u;=0A=
        if (!f.support.appendChecked) if (l[0] && typeof (u =3D =
l.length) =3D=3D "number") for (i =3D 0; i < u; i++) bn(l[i]);=0A=
        else bn(l);=0A=
        l.nodeType ? j.push(l) : j =3D f.merge(j, l)=0A=
      }=0A=
      if (d) {=0A=
        g =3D function (a) {=0A=
          return !a.type || be.test(a.type)=0A=
        };=0A=
        for (k =3D 0; j[k]; k++) {=0A=
          h =3D j[k];=0A=
          if (e && f.nodeName(h, "script") && (!h.type || =
be.test(h.type))) e.push(h.parentNode ? h.parentNode.removeChild(h) : h);=0A=
          else {=0A=
            if (h.nodeType =3D=3D=3D 1) {=0A=
              var v =3D f.grep(h.getElementsByTagName("script"), g);=0A=
              j.splice.apply(j, [k + 1, 0].concat(v))=0A=
            }=0A=
            d.appendChild(h)=0A=
          }=0A=
        }=0A=
      }=0A=
      return j=0A=
    },=0A=
    cleanData: function (a) {=0A=
      var b, c, d =3D f.cache,=0A=
        e =3D f.event.special,=0A=
        g =3D f.support.deleteExpando;=0A=
      for (var h =3D 0, i;=0A=
      (i =3D a[h]) !=3D null; h++) {=0A=
        if (i.nodeName && f.noData[i.nodeName.toLowerCase()]) continue;=0A=
        c =3D i[f.expando];=0A=
        if (c) {=0A=
          b =3D d[c];=0A=
          if (b && b.events) {=0A=
            for (var j in b.events) e[j] ? f.event.remove(i, j) : =
f.removeEvent(i, j, b.handle);=0A=
            b.handle && (b.handle.elem =3D null)=0A=
          }=0A=
          g ? delete i[f.expando] : i.removeAttribute && =
i.removeAttribute(f.expando), delete d[c]=0A=
        }=0A=
      }=0A=
    }=0A=
  });=0A=
  var bp =3D /alpha\([^)]*\)/i,=0A=
    bq =3D /opacity=3D([^)]*)/,=0A=
    br =3D /([A-Z]|^ms)/g,=0A=
    bs =3D /^[\-+]?(?:\d*\.)?\d+$/i,=0A=
    bt =3D /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,=0A=
    bu =3D /^([\-+])=3D([\-+.\de]+)/,=0A=
    bv =3D /^margin/,=0A=
    bw =3D {=0A=
      position: "absolute",=0A=
      visibility: "hidden",=0A=
      display: "block"=0A=
    },=0A=
    bx =3D ["Top", "Right", "Bottom", "Left"],=0A=
    by, bz, bA;=0A=
  f.fn.css =3D function (a, c) {=0A=
    return f.access(this, function (a, c, d) {=0A=
      return d !=3D=3D b ? f.style(a, c, d) : f.css(a, c)=0A=
    }, a, c, arguments.length > 1)=0A=
  }, f.extend({=0A=
    cssHooks: {=0A=
      opacity: {=0A=
        get: function (a, b) {=0A=
          if (b) {=0A=
            var c =3D by(a, "opacity");=0A=
            return c =3D=3D=3D "" ? "1" : c=0A=
          }=0A=
          return a.style.opacity=0A=
        }=0A=
      }=0A=
    },=0A=
    cssNumber: {=0A=
      fillOpacity: !0,=0A=
      fontWeight: !0,=0A=
      lineHeight: !0,=0A=
      opacity: !0,=0A=
      orphans: !0,=0A=
      widows: !0,=0A=
      zIndex: !0,=0A=
      zoom: !0=0A=
    },=0A=
    cssProps: {=0A=
      "float": f.support.cssFloat ? "cssFloat" : "styleFloat"=0A=
    },=0A=
    style: function (a, c, d, e) {=0A=
      if ( !! a && a.nodeType !=3D=3D 3 && a.nodeType !=3D=3D 8 && !! =
a.style) {=0A=
        var g, h, i =3D f.camelCase(c),=0A=
          j =3D a.style,=0A=
          k =3D f.cssHooks[i];=0A=
        c =3D f.cssProps[i] || i;=0A=
        if (d =3D=3D=3D b) {=0A=
          if (k && "get" in k && (g =3D k.get(a, !1, e)) !=3D=3D b) =
return g;=0A=
          return j[c]=0A=
        }=0A=
        h =3D typeof d, h =3D=3D=3D "string" && (g =3D bu.exec(d)) && (d =
=3D +(g[1] + 1) * +g[2] + parseFloat(f.css(a, c)), h =3D "number");=0A=
        if (d =3D=3D null || h =3D=3D=3D "number" && isNaN(d)) return;=0A=
        h =3D=3D=3D "number" && !f.cssNumber[i] && (d +=3D "px");=0A=
        if (!k || !("set" in k) || (d =3D k.set(a, d)) !=3D=3D b) try {=0A=
          j[c] =3D d=0A=
        } catch (l) {}=0A=
      }=0A=
    },=0A=
    css: function (a, c, d) {=0A=
      var e, g;=0A=
      c =3D f.camelCase(c), g =3D f.cssHooks[c], c =3D f.cssProps[c] || =
c, c =3D=3D=3D "cssFloat" && (c =3D "float");=0A=
      if (g && "get" in g && (e =3D g.get(a, !0, d)) !=3D=3D b) return e;=0A=
      if (by) return by(a, c)=0A=
    },=0A=
    swap: function (a, b, c) {=0A=
      var d =3D {},=0A=
        e, f;=0A=
      for (f in b) d[f] =3D a.style[f], a.style[f] =3D b[f];=0A=
      e =3D c.call(a);=0A=
      for (f in b) a.style[f] =3D d[f];=0A=
      return e=0A=
    }=0A=
  }), f.curCSS =3D f.css, c.defaultView && =
c.defaultView.getComputedStyle && (bz =3D function (a, b) {=0A=
    var c, d, e, g, h =3D a.style;=0A=
    b =3D b.replace(br, "-$1").toLowerCase(), (d =3D =
a.ownerDocument.defaultView) && (e =3D d.getComputedStyle(a, null)) && =
(c =3D e.getPropertyValue(b), c =3D=3D=3D "" && =
!f.contains(a.ownerDocument.documentElement, a) && (c =3D f.style(a, =
b))), !f.support.pixelMargin && e && bv.test(b) && bt.test(c) && (g =3D =
h.width, h.width =3D c, c =3D e.width, h.width =3D g);=0A=
    return c=0A=
  }), c.documentElement.currentStyle && (bA =3D function (a, b) {=0A=
    var c, d, e, f =3D a.currentStyle && a.currentStyle[b],=0A=
      g =3D a.style;=0A=
    f =3D=3D null && g && (e =3D g[b]) && (f =3D e), bt.test(f) && (c =
=3D g.left, d =3D a.runtimeStyle && a.runtimeStyle.left, d && =
(a.runtimeStyle.left =3D a.currentStyle.left), g.left =3D b =3D=3D=3D =
"fontSize" ? "1em" : f, f =3D g.pixelLeft + "px", g.left =3D c, d && =
(a.runtimeStyle.left =3D d));=0A=
    return f =3D=3D=3D "" ? "auto" : f=0A=
  }), by =3D bz || bA, f.each(["height", "width"], function (a, b) {=0A=
    f.cssHooks[b] =3D {=0A=
      get: function (a, c, d) {=0A=
        if (c) return a.offsetWidth !=3D=3D 0 ? bB(a, b, d) : f.swap(a, =
bw, function () {=0A=
          return bB(a, b, d)=0A=
        })=0A=
      },=0A=
      set: function (a, b) {=0A=
        return bs.test(b) ? b + "px" : b=0A=
      }=0A=
    }=0A=
  }), f.support.opacity || (f.cssHooks.opacity =3D {=0A=
    get: function (a, b) {=0A=
      return bq.test((b && a.currentStyle ? a.currentStyle.filter : =
a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : b ? "1" : ""=0A=
    },=0A=
    set: function (a, b) {=0A=
      var c =3D a.style,=0A=
        d =3D a.currentStyle,=0A=
        e =3D f.isNumeric(b) ? "alpha(opacity=3D" + b * 100 + ")" : "",=0A=
        g =3D d && d.filter || c.filter || "";=0A=
      c.zoom =3D 1;=0A=
      if (b >=3D 1 && f.trim(g.replace(bp, "")) =3D=3D=3D "") {=0A=
        c.removeAttribute("filter");=0A=
        if (d && !d.filter) return=0A=
      }=0A=
      c.filter =3D bp.test(g) ? g.replace(bp, e) : g + " " + e=0A=
    }=0A=
  }), f(function () {=0A=
    f.support.reliableMarginRight || (f.cssHooks.marginRight =3D {=0A=
      get: function (a, b) {=0A=
        return f.swap(a, {=0A=
          display: "inline-block"=0A=
        }, function () {=0A=
          return b ? by(a, "margin-right") : a.style.marginRight=0A=
        })=0A=
      }=0A=
    })=0A=
  }), f.expr && f.expr.filters && (f.expr.filters.hidden =3D function =
(a) {=0A=
    var b =3D a.offsetWidth,=0A=
      c =3D a.offsetHeight;=0A=
    return b =3D=3D=3D 0 && c =3D=3D=3D 0 || =
!f.support.reliableHiddenOffsets && (a.style && a.style.display || =
f.css(a, "display")) =3D=3D=3D "none"=0A=
  }, f.expr.filters.visible =3D function (a) {=0A=
    return !f.expr.filters.hidden(a)=0A=
  }), f.each({=0A=
    margin: "",=0A=
    padding: "",=0A=
    border: "Width"=0A=
  }, function (a, b) {=0A=
    f.cssHooks[a + b] =3D {=0A=
      expand: function (c) {=0A=
        var d, e =3D typeof c =3D=3D "string" ? c.split(" ") : [c],=0A=
          f =3D {};=0A=
        for (d =3D 0; d < 4; d++) f[a + bx[d] + b] =3D e[d] || e[d - 2] =
|| e[0];=0A=
        return f=0A=
      }=0A=
    }=0A=
  });=0A=
  var bC =3D /%20/g,=0A=
    bD =3D /\[\]$/,=0A=
    bE =3D /\r?\n/g,=0A=
    bF =3D /#.*$/,=0A=
    bG =3D /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,=0A=
    bH =3D =
/^(?:color|date|datetime|datetime-local|email|hidden|month|number|passwor=
d|range|search|tel|text|time|url|week)$/i,=0A=
    bI =3D /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,=0A=
    bJ =3D /^(?:GET|HEAD)$/,=0A=
    bK =3D /^\/\//,=0A=
    bL =3D /\?/,=0A=
    bM =3D /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,=0A=
    bN =3D /^(?:select|textarea)/i,=0A=
    bO =3D /\s+/,=0A=
    bP =3D /([?&])_=3D[^&]*/,=0A=
    bQ =3D /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,=0A=
    bR =3D f.fn.load,=0A=
    bS =3D {},=0A=
    bT =3D {},=0A=
    bU, bV, bW =3D ["*/"] + ["*"];=0A=
  try {=0A=
    bU =3D e.href=0A=
  } catch (bX) {=0A=
    bU =3D c.createElement("a"), bU.href =3D "", bU =3D bU.href=0A=
  }=0A=
  bV =3D bQ.exec(bU.toLowerCase()) || [], f.fn.extend({=0A=
    load: function (a, c, d) {=0A=
      if (typeof a !=3D "string" && bR) return bR.apply(this, arguments);=0A=
      if (!this.length) return this;=0A=
      var e =3D a.indexOf(" ");=0A=
      if (e >=3D 0) {=0A=
        var g =3D a.slice(e, a.length);=0A=
        a =3D a.slice(0, e)=0A=
      }=0A=
      var h =3D "GET";=0A=
      c && (f.isFunction(c) ? (d =3D c, c =3D b) : typeof c =3D=3D =
"object" && (c =3D f.param(c, f.ajaxSettings.traditional), h =3D =
"POST"));=0A=
      var i =3D this;=0A=
      f.ajax({=0A=
        url: a,=0A=
        type: h,=0A=
        dataType: "html",=0A=
        data: c,=0A=
        complete: function (a, b, c) {=0A=
          c =3D a.responseText, a.isResolved() && (a.done(function (a) {=0A=
            c =3D a=0A=
          }), i.html(g ? f("<div>").append(c.replace(bM, "")).find(g) : =
c)), d && i.each(d, [c, b, a])=0A=
        }=0A=
      });=0A=
      return this=0A=
    },=0A=
    serialize: function () {=0A=
      return f.param(this.serializeArray())=0A=
    },=0A=
    serializeArray: function () {=0A=
      return this.map(function () {=0A=
        return this.elements ? f.makeArray(this.elements) : this=0A=
      }).filter(function () {=0A=
        return this.name && !this.disabled && (this.checked || =
bN.test(this.nodeName) || bH.test(this.type))=0A=
      }).map(function (a, b) {=0A=
        var c =3D f(this).val();=0A=
        return c =3D=3D null ? null : f.isArray(c) ? f.map(c, function =
(a, c) {=0A=
          return {=0A=
            name: b.name,=0A=
            value: a.replace(bE, "\r\n")=0A=
          }=0A=
        }) : {=0A=
          name: b.name,=0A=
          value: c.replace(bE, "\r\n")=0A=
        }=0A=
      }).get()=0A=
    }=0A=
  }), f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess =
ajaxSend".split(" "), function (a, b) {=0A=
    f.fn[b] =3D function (a) {=0A=
      return this.on(b, a)=0A=
    }=0A=
  }), f.each(["get", "post"], function (a, c) {=0A=
    f[c] =3D function (a, d, e, g) {=0A=
      f.isFunction(d) && (g =3D g || e, e =3D d, d =3D b);=0A=
      return f.ajax({=0A=
        type: c,=0A=
        url: a,=0A=
        data: d,=0A=
        success: e,=0A=
        dataType: g=0A=
      })=0A=
    }=0A=
  }), f.extend({=0A=
    getScript: function (a, c) {=0A=
      return f.get(a, b, c, "script")=0A=
    },=0A=
    getJSON: function (a, b, c) {=0A=
      return f.get(a, b, c, "json")=0A=
    },=0A=
    ajaxSetup: function (a, b) {=0A=
      b ? b$(a, f.ajaxSettings) : (b =3D a, a =3D f.ajaxSettings), b$(a, =
b);=0A=
      return a=0A=
    },=0A=
    ajaxSettings: {=0A=
      url: bU,=0A=
      isLocal: bI.test(bV[1]),=0A=
      global: !0,=0A=
      type: "GET",=0A=
      contentType: "application/x-www-form-urlencoded; charset=3DUTF-8",=0A=
      processData: !0,=0A=
      async: !0,=0A=
      accepts: {=0A=
        xml: "application/xml, text/xml",=0A=
        html: "text/html",=0A=
        text: "text/plain",=0A=
        json: "application/json, text/javascript",=0A=
        "*": bW=0A=
      },=0A=
      contents: {=0A=
        xml: /xml/,=0A=
        html: /html/,=0A=
        json: /json/=0A=
      },=0A=
      responseFields: {=0A=
        xml: "responseXML",=0A=
        text: "responseText"=0A=
      },=0A=
      converters: {=0A=
        "* text": a.String,=0A=
        "text html": !0,=0A=
        "text json": f.parseJSON,=0A=
        "text xml": f.parseXML=0A=
      },=0A=
      flatOptions: {=0A=
        context: !0,=0A=
        url: !0=0A=
      }=0A=
    },=0A=
    ajaxPrefilter: bY(bS),=0A=
    ajaxTransport: bY(bT),=0A=
    ajax: function (a, c) {=0A=
      function w(a, c, l, m) {=0A=
        if (s !=3D=3D 2) {=0A=
          s =3D 2, q && clearTimeout(q), p =3D b, n =3D m || "", =
v.readyState =3D a > 0 ? 4 : 0;=0A=
          var o, r, u, w =3D c,=0A=
            x =3D l ? ca(d, v, l) : b,=0A=
            y, z;=0A=
          if (a >=3D 200 && a < 300 || a =3D=3D=3D 304) {=0A=
            if (d.ifModified) {=0A=
              if (y =3D v.getResponseHeader("Last-Modified")) =
f.lastModified[k] =3D y;=0A=
              if (z =3D v.getResponseHeader("Etag")) f.etag[k] =3D z=0A=
            }=0A=
            if (a =3D=3D=3D 304) w =3D "notmodified", o =3D !0;=0A=
            else try {=0A=
              r =3D cb(d, x), w =3D "success", o =3D !0=0A=
            } catch (A) {=0A=
              w =3D "parsererror", u =3D A=0A=
            }=0A=
          } else {=0A=
            u =3D w;=0A=
            if (!w || a) w =3D "error", a < 0 && (a =3D 0)=0A=
          }=0A=
          v.status =3D a, v.statusText =3D "" + (c || w), o ? =
h.resolveWith(e, [r, w, v]) : h.rejectWith(e, [v, w, u]), =
v.statusCode(j), j =3D b, t && g.trigger("ajax" + (o ? "Success" : =
"Error"), [v, d, o ? r : u]), i.fireWith(e, [v, w]), t && =
(g.trigger("ajaxComplete", [v, d]), --f.active || =
f.event.trigger("ajaxStop"))=0A=
        }=0A=
      }=0A=
      typeof a =3D=3D "object" && (c =3D a, a =3D b), c =3D c || {};=0A=
      var d =3D f.ajaxSetup({}, c),=0A=
        e =3D d.context || d,=0A=
        g =3D e !=3D=3D d && (e.nodeType || e instanceof f) ? f(e) : =
f.event,=0A=
        h =3D f.Deferred(),=0A=
        i =3D f.Callbacks("once memory"),=0A=
        j =3D d.statusCode || {},=0A=
        k, l =3D {},=0A=
        m =3D {},=0A=
        n, o, p, q, r, s =3D 0,=0A=
        t, u, v =3D {=0A=
          readyState: 0,=0A=
          setRequestHeader: function (a, b) {=0A=
            if (!s) {=0A=
              var c =3D a.toLowerCase();=0A=
              a =3D m[c] =3D m[c] || a, l[a] =3D b=0A=
            }=0A=
            return this=0A=
          },=0A=
          getAllResponseHeaders: function () {=0A=
            return s =3D=3D=3D 2 ? n : null=0A=
          },=0A=
          getResponseHeader: function (a) {=0A=
            var c;=0A=
            if (s =3D=3D=3D 2) {=0A=
              if (!o) {=0A=
                o =3D {};=0A=
                while (c =3D bG.exec(n)) o[c[1].toLowerCase()] =3D c[2]=0A=
              }=0A=
              c =3D o[a.toLowerCase()]=0A=
            }=0A=
            return c =3D=3D=3D b ? null : c=0A=
          },=0A=
          overrideMimeType: function (a) {=0A=
            s || (d.mimeType =3D a);=0A=
            return this=0A=
          },=0A=
          abort: function (a) {=0A=
            a =3D a || "abort", p && p.abort(a), w(0, a);=0A=
            return this=0A=
          }=0A=
        };=0A=
      h.promise(v), v.success =3D v.done, v.error =3D v.fail, v.complete =
=3D i.add, v.statusCode =3D function (a) {=0A=
        if (a) {=0A=
          var b;=0A=
          if (s < 2) for (b in a) j[b] =3D [j[b], a[b]];=0A=
          else b =3D a[v.status], v.then(b, b)=0A=
        }=0A=
        return this=0A=
      }, d.url =3D ((a || d.url) + "").replace(bF, "").replace(bK, bV[1] =
+ "//"), d.dataTypes =3D f.trim(d.dataType || =
"*").toLowerCase().split(bO), d.crossDomain =3D=3D null && (r =3D =
bQ.exec(d.url.toLowerCase()), d.crossDomain =3D !(!r || r[1] =3D=3D =
bV[1] && r[2] =3D=3D bV[2] && (r[3] || (r[1] =3D=3D=3D "http:" ? 80 : =
443)) =3D=3D (bV[3] || (bV[1] =3D=3D=3D "http:" ? 80 : 443)))), d.data =
&& d.processData && typeof d.data !=3D "string" && (d.data =3D =
f.param(d.data, d.traditional)), bZ(bS, d, c, v);=0A=
      if (s =3D=3D=3D 2) return !1;=0A=
      t =3D d.global, d.type =3D d.type.toUpperCase(), d.hasContent =3D =
!bJ.test(d.type), t && f.active++ =3D=3D=3D 0 && =
f.event.trigger("ajaxStart");=0A=
      if (!d.hasContent) {=0A=
        d.data && (d.url +=3D (bL.test(d.url) ? "&" : "?") + d.data, =
delete d.data), k =3D d.url;=0A=
        if (d.cache =3D=3D=3D !1) {=0A=
          var x =3D f.now(),=0A=
            y =3D d.url.replace(bP, "$1_=3D" + x);=0A=
          d.url =3D y + (y =3D=3D=3D d.url ? (bL.test(d.url) ? "&" : =
"?") + "_=3D" + x : "")=0A=
        }=0A=
      }(d.data && d.hasContent && d.contentType !=3D=3D !1 || =
c.contentType) && v.setRequestHeader("Content-Type", d.contentType), =
d.ifModified && (k =3D k || d.url, f.lastModified[k] && =
v.setRequestHeader("If-Modified-Since", f.lastModified[k]), f.etag[k] && =
v.setRequestHeader("If-None-Match", f.etag[k])), =
v.setRequestHeader("Accept", d.dataTypes[0] && d.accepts[d.dataTypes[0]] =
? d.accepts[d.dataTypes[0]] + (d.dataTypes[0] !=3D=3D "*" ? ", " + bW + =
"; q=3D0.01" : "") : d.accepts["*"]);=0A=
      for (u in d.headers) v.setRequestHeader(u, d.headers[u]);=0A=
      if (d.beforeSend && (d.beforeSend.call(e, v, d) =3D=3D=3D !1 || s =
=3D=3D=3D 2)) {=0A=
        v.abort();=0A=
        return !1=0A=
      }=0A=
      for (u in {=0A=
        success: 1,=0A=
        error: 1,=0A=
        complete: 1=0A=
      }) v[u](d[u]);=0A=
      p =3D bZ(bT, d, c, v);=0A=
      if (!p) w(-1, "No Transport");=0A=
      else {=0A=
        v.readyState =3D 1, t && g.trigger("ajaxSend", [v, d]), d.async =
&& d.timeout > 0 && (q =3D setTimeout(function () {=0A=
          v.abort("timeout")=0A=
        }, d.timeout));=0A=
        try {=0A=
          s =3D 1, p.send(l, w)=0A=
        } catch (z) {=0A=
          if (s < 2) w(-1, z);=0A=
          else throw z=0A=
        }=0A=
      }=0A=
      return v=0A=
    },=0A=
    param: function (a, c) {=0A=
      var d =3D [],=0A=
        e =3D function (a, b) {=0A=
          b =3D f.isFunction(b) ? b() : b, d[d.length] =3D =
encodeURIComponent(a) + "=3D" + encodeURIComponent(b)=0A=
        };=0A=
      c =3D=3D=3D b && (c =3D f.ajaxSettings.traditional);=0A=
      if (f.isArray(a) || a.jquery && !f.isPlainObject(a)) f.each(a, =
function () {=0A=
        e(this.name, this.value)=0A=
      });=0A=
      else for (var g in a) b_(g, a[g], c, e);=0A=
      return d.join("&").replace(bC, "+")=0A=
    }=0A=
  }), f.extend({=0A=
    active: 0,=0A=
    lastModified: {},=0A=
    etag: {}=0A=
  });=0A=
  var cc =3D f.now(),=0A=
    cd =3D /(\=3D)\?(&|$)|\?\?/i;=0A=
  f.ajaxSetup({=0A=
    jsonp: "callback",=0A=
    jsonpCallback: function () {=0A=
      return f.expando + "_" + cc++=0A=
    }=0A=
  }), f.ajaxPrefilter("json jsonp", function (b, c, d) {=0A=
    var e =3D typeof b.data =3D=3D "string" && =
/^application\/x\-www\-form\-urlencoded/.test(b.contentType);=0A=
    if (b.dataTypes[0] =3D=3D=3D "jsonp" || b.jsonp !=3D=3D !1 && =
(cd.test(b.url) || e && cd.test(b.data))) {=0A=
      var g, h =3D b.jsonpCallback =3D f.isFunction(b.jsonpCallback) ? =
b.jsonpCallback() : b.jsonpCallback,=0A=
        i =3D a[h],=0A=
        j =3D b.url,=0A=
        k =3D b.data,=0A=
        l =3D "$1" + h + "$2";=0A=
      b.jsonp !=3D=3D !1 && (j =3D j.replace(cd, l), b.url =3D=3D=3D j =
&& (e && (k =3D k.replace(cd, l)), b.data =3D=3D=3D k && (j +=3D =
(/\?/.test(j) ? "&" : "?") + b.jsonp + "=3D" + h))), b.url =3D j, b.data =
=3D k, a[h] =3D function (a) {=0A=
        g =3D [a]=0A=
      }, d.always(function () {=0A=
        a[h] =3D i, g && f.isFunction(i) && a[h](g[0])=0A=
      }), b.converters["script json"] =3D function () {=0A=
        g || f.error(h + " was not called");=0A=
        return g[0]=0A=
      }, b.dataTypes[0] =3D "json";=0A=
      return "script"=0A=
    }=0A=
  }), f.ajaxSetup({=0A=
    accepts: {=0A=
      script: "text/javascript, application/javascript, =
application/ecmascript, application/x-ecmascript"=0A=
    },=0A=
    contents: {=0A=
      script: /javascript|ecmascript/=0A=
    },=0A=
    converters: {=0A=
      "text script": function (a) {=0A=
        f.globalEval(a);=0A=
        return a=0A=
      }=0A=
    }=0A=
  }), f.ajaxPrefilter("script", function (a) {=0A=
    a.cache =3D=3D=3D b && (a.cache =3D !1), a.crossDomain && (a.type =
=3D "GET", a.global =3D !1)=0A=
  }), f.ajaxTransport("script", function (a) {=0A=
    if (a.crossDomain) {=0A=
      var d, e =3D c.head || c.getElementsByTagName("head")[0] || =
c.documentElement;=0A=
      return {=0A=
        send: function (f, g) {=0A=
          d =3D c.createElement("script"), d.async =3D "async", =
a.scriptCharset && (d.charset =3D a.scriptCharset), d.src =3D a.url, =
d.onload =3D d.onreadystatechange =3D function (a, c) {=0A=
            if (c || !d.readyState || =
/loaded|complete/.test(d.readyState)) d.onload =3D d.onreadystatechange =
=3D null, e && d.parentNode && e.removeChild(d), d =3D b, c || g(200, =
"success")=0A=
          }, e.insertBefore(d, e.firstChild)=0A=
        },=0A=
        abort: function () {=0A=
          d && d.onload(0, 1)=0A=
        }=0A=
      }=0A=
    }=0A=
  });=0A=
  var ce =3D a.ActiveXObject ?=0A=
  function () {=0A=
    for (var a in cg) cg[a](0, 1)=0A=
  } : !1, cf =3D 0, cg;=0A=
  f.ajaxSettings.xhr =3D a.ActiveXObject ?=0A=
  function () {=0A=
    return !this.isLocal && ch() || ci()=0A=
  } : ch, function (a) {=0A=
    f.extend(f.support, {=0A=
      ajax: !! a,=0A=
      cors: !! a && "withCredentials" in a=0A=
    })=0A=
  }(f.ajaxSettings.xhr()), f.support.ajax && f.ajaxTransport(function =
(c) {=0A=
    if (!c.crossDomain || f.support.cors) {=0A=
      var d;=0A=
      return {=0A=
        send: function (e, g) {=0A=
          var h =3D c.xhr(),=0A=
            i, j;=0A=
          c.username ? h.open(c.type, c.url, c.async, c.username, =
c.password) : h.open(c.type, c.url, c.async);=0A=
          if (c.xhrFields) for (j in c.xhrFields) h[j] =3D =
c.xhrFields[j];=0A=
          c.mimeType && h.overrideMimeType && =
h.overrideMimeType(c.mimeType), !c.crossDomain && !e["X-Requested-With"] =
&& (e["X-Requested-With"] =3D "XMLHttpRequest");=0A=
          try {=0A=
            for (j in e) h.setRequestHeader(j, e[j])=0A=
          } catch (k) {}=0A=
          h.send(c.hasContent && c.data || null), d =3D function (a, e) {=0A=
            var j, k, l, m, n;=0A=
            try {=0A=
              if (d && (e || h.readyState =3D=3D=3D 4)) {=0A=
                d =3D b, i && (h.onreadystatechange =3D f.noop, ce && =
delete cg[i]);=0A=
                if (e) h.readyState !=3D=3D 4 && h.abort();=0A=
                else {=0A=
                  j =3D h.status, l =3D h.getAllResponseHeaders(), m =3D =
{}, n =3D h.responseXML, n && n.documentElement && (m.xml =3D n);=0A=
                  try {=0A=
                    m.text =3D h.responseText=0A=
                  } catch (a) {}=0A=
                  try {=0A=
                    k =3D h.statusText=0A=
                  } catch (o) {=0A=
                    k =3D ""=0A=
                  }!j && c.isLocal && !c.crossDomain ? j =3D m.text ? =
200 : 404 : j =3D=3D=3D 1223 && (j =3D 204)=0A=
                }=0A=
              }=0A=
            } catch (p) {=0A=
              e || g(-1, p)=0A=
            }=0A=
            m && g(j, k, m, l)=0A=
          }, !c.async || h.readyState =3D=3D=3D 4 ? d() : (i =3D ++cf, =
ce && (cg || (cg =3D {}, f(a).unload(ce)), cg[i] =3D d), =
h.onreadystatechange =3D d)=0A=
        },=0A=
        abort: function () {=0A=
          d && d(0, 1)=0A=
        }=0A=
      }=0A=
    }=0A=
  });=0A=
  var cj =3D {},=0A=
    ck, cl, cm =3D /^(?:toggle|show|hide)$/,=0A=
    cn =3D /^([+\-]=3D)?([\d+.\-]+)([a-z%]*)$/i,=0A=
    co, cp =3D [=0A=
      ["height", "marginTop", "marginBottom", "paddingTop", =
"paddingBottom"],=0A=
      ["width", "marginLeft", "marginRight", "paddingLeft", =
"paddingRight"],=0A=
      ["opacity"]=0A=
    ],=0A=
    cq;=0A=
  f.fn.extend({=0A=
    show: function (a, b, c) {=0A=
      var d, e;=0A=
      if (a || a =3D=3D=3D 0) return this.animate(ct("show", 3), a, b, =
c);=0A=
      for (var g =3D 0, h =3D this.length; g < h; g++) d =3D this[g], =
d.style && (e =3D d.style.display, !f._data(d, "olddisplay") && e =
=3D=3D=3D "none" && (e =3D d.style.display =3D ""), (e =3D=3D=3D "" && =
f.css(d, "display") =3D=3D=3D "none" || =
!f.contains(d.ownerDocument.documentElement, d)) && f._data(d, =
"olddisplay", cu(d.nodeName)));=0A=
      for (g =3D 0; g < h; g++) {=0A=
        d =3D this[g];=0A=
        if (d.style) {=0A=
          e =3D d.style.display;=0A=
          if (e =3D=3D=3D "" || e =3D=3D=3D "none") d.style.display =3D =
f._data(d, "olddisplay") || ""=0A=
        }=0A=
      }=0A=
      return this=0A=
    },=0A=
    hide: function (a, b, c) {=0A=
      if (a || a =3D=3D=3D 0) return this.animate(ct("hide", 3), a, b, =
c);=0A=
      var d, e, g =3D 0,=0A=
        h =3D this.length;=0A=
      for (; g < h; g++) d =3D this[g], d.style && (e =3D f.css(d, =
"display"), e !=3D=3D "none" && !f._data(d, "olddisplay") && f._data(d, =
"olddisplay", e));=0A=
      for (g =3D 0; g < h; g++) this[g].style && (this[g].style.display =
=3D "none");=0A=
      return this=0A=
    },=0A=
    _toggle: f.fn.toggle,=0A=
    toggle: function (a, b, c) {=0A=
      var d =3D typeof a =3D=3D "boolean";=0A=
      f.isFunction(a) && f.isFunction(b) ? this._toggle.apply(this, =
arguments) : a =3D=3D null || d ? this.each(function () {=0A=
        var b =3D d ? a : f(this).is(":hidden");=0A=
        f(this)[b ? "show" : "hide"]()=0A=
      }) : this.animate(ct("toggle", 3), a, b, c);=0A=
      return this=0A=
    },=0A=
    fadeTo: function (a, b, c, d) {=0A=
      return this.filter(":hidden").css("opacity", =
0).show().end().animate({=0A=
        opacity: b=0A=
      }, a, c, d)=0A=
    },=0A=
    animate: function (a, b, c, d) {=0A=
      function g() {=0A=
        e.queue =3D=3D=3D !1 && f._mark(this);=0A=
        var b =3D f.extend({}, e),=0A=
          c =3D this.nodeType =3D=3D=3D 1,=0A=
          d =3D c && f(this).is(":hidden"),=0A=
          g, h, i, j, k, l, m, n, o, p, q;=0A=
        b.animatedProperties =3D {};=0A=
        for (i in a) {=0A=
          g =3D f.camelCase(i), i !=3D=3D g && (a[g] =3D a[i], delete =
a[i]);=0A=
          if ((k =3D f.cssHooks[g]) && "expand" in k) {=0A=
            l =3D k.expand(a[g]), delete a[g];=0A=
            for (i in l) i in a || (a[i] =3D l[i])=0A=
          }=0A=
        }=0A=
        for (g in a) {=0A=
          h =3D a[g], f.isArray(h) ? (b.animatedProperties[g] =3D h[1], =
h =3D a[g] =3D h[0]) : b.animatedProperties[g] =3D b.specialEasing && =
b.specialEasing[g] || b.easing || "swing";=0A=
          if (h =3D=3D=3D "hide" && d || h =3D=3D=3D "show" && !d) =
return b.complete.call(this);=0A=
          c && (g =3D=3D=3D "height" || g =3D=3D=3D "width") && =
(b.overflow =3D [this.style.overflow, this.style.overflowX, =
this.style.overflowY], f.css(this, "display") =3D=3D=3D "inline" && =
f.css(this, "float") =3D=3D=3D "none" && =
(!f.support.inlineBlockNeedsLayout || cu(this.nodeName) =3D=3D=3D =
"inline" ? this.style.display =3D "inline-block" : this.style.zoom =3D =
1))=0A=
        }=0A=
        b.overflow !=3D null && (this.style.overflow =3D "hidden");=0A=
        for (i in a) j =3D new f.fx(this, b, i), h =3D a[i], cm.test(h) =
? (q =3D f._data(this, "toggle" + i) || (h =3D=3D=3D "toggle" ? d ? =
"show" : "hide" : 0), q ? (f._data(this, "toggle" + i, q =3D=3D=3D =
"show" ? "hide" : "show"), j[q]()) : j[h]()) : (m =3D cn.exec(h), n =3D =
j.cur(), m ? (o =3D parseFloat(m[2]), p =3D m[3] || (f.cssNumber[i] ? "" =
: "px"), p !=3D=3D "px" && (f.style(this, i, (o || 1) + p), n =3D (o || =
1) / j.cur() * n, f.style(this, i, n + p)), m[1] && (o =3D (m[1] =
=3D=3D=3D "-=3D" ? -1 : 1) * o + n), j.custom(n, o, p)) : j.custom(n, h, =
""));=0A=
        return !0=0A=
      }=0A=
      var e =3D f.speed(b, c, d);=0A=
      if (f.isEmptyObject(a)) return this.each(e.complete, [!1]);=0A=
      a =3D f.extend({}, a);=0A=
      return e.queue =3D=3D=3D !1 ? this.each(g) : this.queue(e.queue, g)=0A=
    },=0A=
    stop: function (a, c, d) {=0A=
      typeof a !=3D "string" && (d =3D c, c =3D a, a =3D b), c && a =
!=3D=3D !1 && this.queue(a || "fx", []);=0A=
      return this.each(function () {=0A=
        function h(a, b, c) {=0A=
          var e =3D b[c];=0A=
          f.removeData(a, c, !0), e.stop(d)=0A=
        }=0A=
        var b, c =3D !1,=0A=
          e =3D f.timers,=0A=
          g =3D f._data(this);=0A=
        d || f._unmark(!0, this);=0A=
        if (a =3D=3D null) for (b in g) g[b] && g[b].stop && =
b.indexOf(".run") =3D=3D=3D b.length - 4 && h(this, g, b);=0A=
        else g[b =3D a + ".run"] && g[b].stop && h(this, g, b);=0A=
        for (b =3D e.length; b--;) e[b].elem =3D=3D=3D this && (a =3D=3D =
null || e[b].queue =3D=3D=3D a) && (d ? e[b](!0) : e[b].saveState(), c =
=3D !0, e.splice(b, 1));=0A=
        (!d || !c) && f.dequeue(this, a)=0A=
      })=0A=
    }=0A=
  }), f.each({=0A=
    slideDown: ct("show", 1),=0A=
    slideUp: ct("hide", 1),=0A=
    slideToggle: ct("toggle", 1),=0A=
    fadeIn: {=0A=
      opacity: "show"=0A=
    },=0A=
    fadeOut: {=0A=
      opacity: "hide"=0A=
    },=0A=
    fadeToggle: {=0A=
      opacity: "toggle"=0A=
    }=0A=
  }, function (a, b) {=0A=
    f.fn[a] =3D function (a, c, d) {=0A=
      return this.animate(b, a, c, d)=0A=
    }=0A=
  }), f.extend({=0A=
    speed: function (a, b, c) {=0A=
      var d =3D a && typeof a =3D=3D "object" ? f.extend({}, a) : {=0A=
        complete: c || !c && b || f.isFunction(a) && a,=0A=
        duration: a,=0A=
        easing: c && b || b && !f.isFunction(b) && b=0A=
      };=0A=
      d.duration =3D f.fx.off ? 0 : typeof d.duration =3D=3D "number" ? =
d.duration : d.duration in f.fx.speeds ? f.fx.speeds[d.duration] : =
f.fx.speeds._default;=0A=
      if (d.queue =3D=3D null || d.queue =3D=3D=3D !0) d.queue =3D "fx";=0A=
      d.old =3D d.complete, d.complete =3D function (a) {=0A=
        f.isFunction(d.old) && d.old.call(this), d.queue ? =
f.dequeue(this, d.queue) : a !=3D=3D !1 && f._unmark(this)=0A=
      };=0A=
      return d=0A=
    },=0A=
    easing: {=0A=
      linear: function (a) {=0A=
        return a=0A=
      },=0A=
      swing: function (a) {=0A=
        return -Math.cos(a * Math.PI) / 2 + .5=0A=
      }=0A=
    },=0A=
    timers: [],=0A=
    fx: function (a, b, c) {=0A=
      this.options =3D b, this.elem =3D a, this.prop =3D c, b.orig =3D =
b.orig || {}=0A=
    }=0A=
  }), f.fx.prototype =3D {=0A=
    update: function () {=0A=
      this.options.step && this.options.step.call(this.elem, this.now, =
this), (f.fx.step[this.prop] || f.fx.step._default)(this)=0A=
    },=0A=
    cur: function () {=0A=
      if (this.elem[this.prop] !=3D null && (!this.elem.style || =
this.elem.style[this.prop] =3D=3D null)) return this.elem[this.prop];=0A=
      var a, b =3D f.css(this.elem, this.prop);=0A=
      return isNaN(a =3D parseFloat(b)) ? !b || b =3D=3D=3D "auto" ? 0 : =
b : a=0A=
    },=0A=
    custom: function (a, c, d) {=0A=
      function h(a) {=0A=
        return e.step(a)=0A=
      }=0A=
      var e =3D this,=0A=
        g =3D f.fx;=0A=
      this.startTime =3D cq || cr(), this.end =3D c, this.now =3D =
this.start =3D a, this.pos =3D this.state =3D 0, this.unit =3D d || =
this.unit || (f.cssNumber[this.prop] ? "" : "px"), h.queue =3D =
this.options.queue, h.elem =3D this.elem, h.saveState =3D function () {=0A=
        f._data(e.elem, "fxshow" + e.prop) =3D=3D=3D b && =
(e.options.hide ? f._data(e.elem, "fxshow" + e.prop, e.start) : =
e.options.show && f._data(e.elem, "fxshow" + e.prop, e.end))=0A=
      }, h() && f.timers.push(h) && !co && (co =3D setInterval(g.tick, =
g.interval))=0A=
    },=0A=
    show: function () {=0A=
      var a =3D f._data(this.elem, "fxshow" + this.prop);=0A=
      this.options.orig[this.prop] =3D a || f.style(this.elem, =
this.prop), this.options.show =3D !0, a !=3D=3D b ? =
this.custom(this.cur(), a) : this.custom(this.prop =3D=3D=3D "width" || =
this.prop =3D=3D=3D "height" ? 1 : 0, this.cur()), f(this.elem).show()=0A=
    },=0A=
    hide: function () {=0A=
      this.options.orig[this.prop] =3D f._data(this.elem, "fxshow" + =
this.prop) || f.style(this.elem, this.prop), this.options.hide =3D !0, =
this.custom(this.cur(), 0)=0A=
    },=0A=
    step: function (a) {=0A=
      var b, c, d, e =3D cq || cr(),=0A=
        g =3D !0,=0A=
        h =3D this.elem,=0A=
        i =3D this.options;=0A=
      if (a || e >=3D i.duration + this.startTime) {=0A=
        this.now =3D this.end, this.pos =3D this.state =3D 1, =
this.update(), i.animatedProperties[this.prop] =3D !0;=0A=
        for (b in i.animatedProperties) i.animatedProperties[b] !=3D=3D =
!0 && (g =3D !1);=0A=
        if (g) {=0A=
          i.overflow !=3D null && !f.support.shrinkWrapBlocks && =
f.each(["", "X", "Y"], function (a, b) {=0A=
            h.style["overflow" + b] =3D i.overflow[a]=0A=
          }), i.hide && f(h).hide();=0A=
          if (i.hide || i.show) for (b in i.animatedProperties) =
f.style(h, b, i.orig[b]), f.removeData(h, "fxshow" + b, !0), =
f.removeData(h, "toggle" + b, !0);=0A=
          d =3D i.complete, d && (i.complete =3D !1, d.call(h))=0A=
        }=0A=
        return !1=0A=
      }=0A=
      i.duration =3D=3D Infinity ? this.now =3D e : (c =3D e - =
this.startTime, this.state =3D c / i.duration, this.pos =3D =
f.easing[i.animatedProperties[this.prop]](this.state, c, 0, 1, =
i.duration), this.now =3D this.start + (this.end - this.start) * =
this.pos), this.update();=0A=
      return !0=0A=
    }=0A=
  }, f.extend(f.fx, {=0A=
    tick: function () {=0A=
      var a, b =3D f.timers,=0A=
        c =3D 0;=0A=
      for (; c < b.length; c++) a =3D b[c], !a() && b[c] =3D=3D=3D a && =
b.splice(c--, 1);=0A=
      b.length || f.fx.stop()=0A=
    },=0A=
    interval: 13,=0A=
    stop: function () {=0A=
      clearInterval(co), co =3D null=0A=
    },=0A=
    speeds: {=0A=
      slow: 600,=0A=
      fast: 200,=0A=
      _default: 400=0A=
    },=0A=
    step: {=0A=
      opacity: function (a) {=0A=
        f.style(a.elem, "opacity", a.now)=0A=
      },=0A=
      _default: function (a) {=0A=
        a.elem.style && a.elem.style[a.prop] !=3D null ? =
a.elem.style[a.prop] =3D a.now + a.unit : a.elem[a.prop] =3D a.now=0A=
      }=0A=
    }=0A=
  }), f.each(cp.concat.apply([], cp), function (a, b) {=0A=
    b.indexOf("margin") && (f.fx.step[b] =3D function (a) {=0A=
      f.style(a.elem, b, Math.max(0, a.now) + a.unit)=0A=
    })=0A=
  }), f.expr && f.expr.filters && (f.expr.filters.animated =3D function =
(a) {=0A=
    return f.grep(f.timers, function (b) {=0A=
      return a =3D=3D=3D b.elem=0A=
    }).length=0A=
  });=0A=
  var cv, cw =3D /^t(?:able|d|h)$/i,=0A=
    cx =3D /^(?:body|html)$/i;=0A=
  "getBoundingClientRect" in c.documentElement ? cv =3D function (a, b, =
c, d) {=0A=
    try {=0A=
      d =3D a.getBoundingClientRect()=0A=
    } catch (e) {}=0A=
    if (!d || !f.contains(c, a)) return d ? {=0A=
      top: d.top,=0A=
      left: d.left=0A=
    } : {=0A=
      top: 0,=0A=
      left: 0=0A=
    };=0A=
    var g =3D b.body,=0A=
      h =3D cy(b),=0A=
      i =3D c.clientTop || g.clientTop || 0,=0A=
      j =3D c.clientLeft || g.clientLeft || 0,=0A=
      k =3D h.pageYOffset || f.support.boxModel && c.scrollTop || =
g.scrollTop,=0A=
      l =3D h.pageXOffset || f.support.boxModel && c.scrollLeft || =
g.scrollLeft,=0A=
      m =3D d.top + k - i,=0A=
      n =3D d.left + l - j;=0A=
    return {=0A=
      top: m,=0A=
      left: n=0A=
    }=0A=
  } : cv =3D function (a, b, c) {=0A=
    var d, e =3D a.offsetParent,=0A=
      g =3D a,=0A=
      h =3D b.body,=0A=
      i =3D b.defaultView,=0A=
      j =3D i ? i.getComputedStyle(a, null) : a.currentStyle,=0A=
      k =3D a.offsetTop,=0A=
      l =3D a.offsetLeft;=0A=
    while ((a =3D a.parentNode) && a !=3D=3D h && a !=3D=3D c) {=0A=
      if (f.support.fixedPosition && j.position =3D=3D=3D "fixed") break;=0A=
      d =3D i ? i.getComputedStyle(a, null) : a.currentStyle, k -=3D =
a.scrollTop, l -=3D a.scrollLeft, a =3D=3D=3D e && (k +=3D a.offsetTop, =
l +=3D a.offsetLeft, f.support.doesNotAddBorder && =
(!f.support.doesAddBorderForTableAndCells || !cw.test(a.nodeName)) && (k =
+=3D parseFloat(d.borderTopWidth) || 0, l +=3D =
parseFloat(d.borderLeftWidth) || 0), g =3D e, e =3D a.offsetParent), =
f.support.subtractsBorderForOverflowNotVisible && d.overflow !=3D=3D =
"visible" && (k +=3D parseFloat(d.borderTopWidth) || 0, l +=3D =
parseFloat(d.borderLeftWidth) || 0), j =3D d=0A=
    }=0A=
    if (j.position =3D=3D=3D "relative" || j.position =3D=3D=3D =
"static") k +=3D h.offsetTop, l +=3D h.offsetLeft;=0A=
    f.support.fixedPosition && j.position =3D=3D=3D "fixed" && (k +=3D =
Math.max(c.scrollTop, h.scrollTop), l +=3D Math.max(c.scrollLeft, =
h.scrollLeft));=0A=
    return {=0A=
      top: k,=0A=
      left: l=0A=
    }=0A=
  }, f.fn.offset =3D function (a) {=0A=
    if (arguments.length) return a =3D=3D=3D b ? this : =
this.each(function (b) {=0A=
      f.offset.setOffset(this, a, b)=0A=
    });=0A=
    var c =3D this[0],=0A=
      d =3D c && c.ownerDocument;=0A=
    if (!d) return null;=0A=
    if (c =3D=3D=3D d.body) return f.offset.bodyOffset(c);=0A=
    return cv(c, d, d.documentElement)=0A=
  }, f.offset =3D {=0A=
    bodyOffset: function (a) {=0A=
      var b =3D a.offsetTop,=0A=
        c =3D a.offsetLeft;=0A=
      f.support.doesNotIncludeMarginInBodyOffset && (b +=3D =
parseFloat(f.css(a, "marginTop")) || 0, c +=3D parseFloat(f.css(a, =
"marginLeft")) || 0);=0A=
      return {=0A=
        top: b,=0A=
        left: c=0A=
      }=0A=
    },=0A=
    setOffset: function (a, b, c) {=0A=
      var d =3D f.css(a, "position");=0A=
      d =3D=3D=3D "static" && (a.style.position =3D "relative");=0A=
      var e =3D f(a),=0A=
        g =3D e.offset(),=0A=
        h =3D f.css(a, "top"),=0A=
        i =3D f.css(a, "left"),=0A=
        j =3D (d =3D=3D=3D "absolute" || d =3D=3D=3D "fixed") && =
f.inArray("auto", [h, i]) > -1,=0A=
        k =3D {},=0A=
        l =3D {},=0A=
        m, n;=0A=
      j ? (l =3D e.position(), m =3D l.top, n =3D l.left) : (m =3D =
parseFloat(h) || 0, n =3D parseFloat(i) || 0), f.isFunction(b) && (b =3D =
b.call(a, c, g)), b.top !=3D null && (k.top =3D b.top - g.top + m), =
b.left !=3D null && (k.left =3D b.left - g.left + n), "using" in b ? =
b.using.call(a, k) : e.css(k)=0A=
    }=0A=
  }, f.fn.extend({=0A=
    position: function () {=0A=
      if (!this[0]) return null;=0A=
      var a =3D this[0],=0A=
        b =3D this.offsetParent(),=0A=
        c =3D this.offset(),=0A=
        d =3D cx.test(b[0].nodeName) ? {=0A=
          top: 0,=0A=
          left: 0=0A=
        } : b.offset();=0A=
      c.top -=3D parseFloat(f.css(a, "marginTop")) || 0, c.left -=3D =
parseFloat(f.css(a, "marginLeft")) || 0, d.top +=3D =
parseFloat(f.css(b[0], "borderTopWidth")) || 0, d.left +=3D =
parseFloat(f.css(b[0], "borderLeftWidth")) || 0;=0A=
      return {=0A=
        top: c.top - d.top,=0A=
        left: c.left - d.left=0A=
      }=0A=
    },=0A=
    offsetParent: function () {=0A=
      return this.map(function () {=0A=
        var a =3D this.offsetParent || c.body;=0A=
        while (a && !cx.test(a.nodeName) && f.css(a, "position") =
=3D=3D=3D "static") a =3D a.offsetParent;=0A=
        return a=0A=
      })=0A=
    }=0A=
  }), f.each({=0A=
    scrollLeft: "pageXOffset",=0A=
    scrollTop: "pageYOffset"=0A=
  }, function (a, c) {=0A=
    var d =3D /Y/.test(c);=0A=
    f.fn[a] =3D function (e) {=0A=
      return f.access(this, function (a, e, g) {=0A=
        var h =3D cy(a);=0A=
        if (g =3D=3D=3D b) return h ? c in h ? h[c] : f.support.boxModel =
&& h.document.documentElement[e] || h.document.body[e] : a[e];=0A=
        h ? h.scrollTo(d ? f(h).scrollLeft() : g, d ? g : =
f(h).scrollTop()) : a[e] =3D g=0A=
      }, a, e, arguments.length, null)=0A=
    }=0A=
  }), f.each({=0A=
    Height: "height",=0A=
    Width: "width"=0A=
  }, function (a, c) {=0A=
    var d =3D "client" + a,=0A=
      e =3D "scroll" + a,=0A=
      g =3D "offset" + a;=0A=
    f.fn["inner" + a] =3D function () {=0A=
      var a =3D this[0];=0A=
      return a ? a.style ? parseFloat(f.css(a, c, "padding")) : =
this[c]() : null=0A=
    }, f.fn["outer" + a] =3D function (a) {=0A=
      var b =3D this[0];=0A=
      return b ? b.style ? parseFloat(f.css(b, c, a ? "margin" : =
"border")) : this[c]() : null=0A=
    }, f.fn[c] =3D function (a) {=0A=
      return f.access(this, function (a, c, h) {=0A=
        var i, j, k, l;=0A=
        if (f.isWindow(a)) {=0A=
          i =3D a.document, j =3D i.documentElement[d];=0A=
          return f.support.boxModel && j || i.body && i.body[d] || j=0A=
        }=0A=
        if (a.nodeType =3D=3D=3D 9) {=0A=
          i =3D a.documentElement;=0A=
          if (i[d] >=3D i[e]) return i[d];=0A=
          return Math.max(a.body[e], i[e], a.body[g], i[g])=0A=
        }=0A=
        if (h =3D=3D=3D b) {=0A=
          k =3D f.css(a, c), l =3D parseFloat(k);=0A=
          return f.isNumeric(l) ? l : k=0A=
        }=0A=
        f(a).css(c, h)=0A=
      }, c, a, arguments.length, null)=0A=
    }=0A=
  }), a.jQuery =3D a.$ =3D f, typeof define =3D=3D "function" && =
define.amd && define.amd.jQuery && define("jquery", [], function () {=0A=
    return f=0A=
  })=0A=
})(window);
------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://decorplanit.com/plugin/autoNumeric-1.8.1.js

/**=0A=
* autoNumeric.js=0A=
* @author: Bob Knothe=0A=
* @author: Sokolov Yura aka funny_falcon=0A=
* @version: 1.8.1 - 2013-1-17 GMT 10:30 PM=0A=
*=0A=
* Created by Robert J. Knothe on 2010-10-25. Please report any bug at =
http://www.decorplanit.com/plugin/=0A=
* Created by Sokolov Yura on 2010-11-07. http://github.com/funny_falcon=0A=
*=0A=
* Copyright (c) 2011 Robert J. Knothe  http://www.decorplanit.com/plugin/=0A=
* Copyright (c) 2011 Sokolov Yura aka funny_falcon=0A=
*=0A=
* The MIT License (http://www.opensource.org/licenses/mit-license.php)=0A=
*=0A=
* Permission is hereby granted, free of charge, to any person=0A=
* obtaining a copy of this software and associated documentation=0A=
* files (the "Software"), to deal in the Software without=0A=
* restriction, including without limitation the rights to use,=0A=
* copy, modify, merge, publish, distribute, sublicense, and/or sell=0A=
* copies of the Software, and to permit persons to whom the=0A=
* Software is furnished to do so, subject to the following=0A=
* conditions:=0A=
*=0A=
* The above copyright notice and this permission notice shall be=0A=
* included in all copies or substantial portions of the Software.=0A=
*=0A=
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,=0A=
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES=0A=
* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND=0A=
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT=0A=
* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,=0A=
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING=0A=
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR=0A=
* OTHER DEALINGS IN THE SOFTWARE.=0A=
*/=0A=
(function ($) {=0A=
    /* "use strict"; */=0A=
    /*jslint browser: true*/=0A=
    /*global jQuery*/=0A=
    /**=0A=
    * Cross browser routine for getting selected range/cursor position=0A=
    */=0A=
    function getElementSelection(that) {=0A=
        var position =3D {};=0A=
        if (that.selectionStart =3D=3D=3D undefined) {=0A=
            that.focus();=0A=
            var select =3D document.selection.createRange();=0A=
            position.length =3D select.text.length;=0A=
            select.moveStart('character', -that.value.length);=0A=
            position.end =3D select.text.length;=0A=
            position.start =3D position.end - position.length;=0A=
        } else {=0A=
            position.start =3D that.selectionStart;=0A=
            position.end =3D that.selectionEnd;=0A=
            position.length =3D position.end - position.start;=0A=
        }=0A=
        return position;=0A=
    }=0A=
    /**=0A=
    * Cross browser routine for setting selected range/cursor position=0A=
    */=0A=
    function setElementSelection(that, start, end) {=0A=
        if (that.selectionStart =3D=3D=3D undefined) {=0A=
            that.focus();=0A=
            var r =3D that.createTextRange();=0A=
            r.collapse(true);=0A=
            r.moveEnd('character', end);=0A=
            r.moveStart('character', start);=0A=
            r.select();=0A=
        } else {=0A=
            that.selectionStart =3D start;=0A=
            that.selectionEnd =3D end;=0A=
        }=0A=
    }=0A=
    /**=0A=
    * run callbacks in parameters if any=0A=
    * any parameter could be a callback:=0A=
    * - a function, which invoked with jQuery element, parameters and =
this parameter name and returns parameter value=0A=
    * - a name of function, attached to =
$(selector).autoNumeric.functionName(){} - which was called previously=0A=
    */=0A=
    function runCallbacks($this, settings) {=0A=
        /**=0A=
        * loops through the settings object (option array) to find the =
following=0A=
        * k =3D option name example k=3DaNum=0A=
        * val =3D option value example val=3D0123456789=0A=
        */=0A=
        $.each(settings, function (k, val) {=0A=
            if (typeof val =3D=3D=3D 'function') {=0A=
                settings[k] =3D val($this, settings, k);=0A=
            } else if (typeof $this.autoNumeric[val] =3D=3D=3D =
'function') {=0A=
                /**=0A=
                * calls the attached function from the html5 data =
example: data-a-sign=3D"functionName"=0A=
                */=0A=
                settings[k] =3D $this.autoNumeric[val]($this, settings, =
k);=0A=
            }=0A=
        });=0A=
    }=0A=
    function convertKeyToNumber(settings, key) {=0A=
        if (typeof (settings[key]) =3D=3D=3D 'string') {=0A=
            settings[key] *=3D 1;=0A=
        }=0A=
    }=0A=
    /**=0A=
    * Preparing user defined options for further usage=0A=
    * merge them with defaults appropriatly=0A=
    */=0A=
    function autoCode($this, settings) {=0A=
        runCallbacks($this, settings);=0A=
        settings.oEvent =3D null;=0A=
        settings.tagList =3D ['DD', 'DT', 'H1', 'H2', 'H3', 'H4', 'H5', =
'H6', 'LABEL', 'P', 'SPAN', 'TD', 'TH'];=0A=
        var vmax =3D settings.vMax.toString().split('.'), vmin =3D =
(!settings.vMin && settings.vMin !=3D=3D 0) ? [] : =
settings.vMin.toString().split('.');=0A=
        convertKeyToNumber(settings, 'vMax');=0A=
        convertKeyToNumber(settings, 'vMin');=0A=
        convertKeyToNumber(settings, 'mDec'); /** set mDec if not =
defained by user */=0A=
        settings.allowLeading =3D true;=0A=
        settings.aNeg =3D settings.vMin < 0 ? '-' : '';=0A=
        vmax[0] =3D vmax[0].replace('-', '');=0A=
        vmin[0] =3D vmin[0].replace('-', '');=0A=
        settings.mInt =3D Math.max(vmax[0].length, vmin[0].length, 1);=0A=
        if (settings.mDec =3D=3D=3D null) {=0A=
            var vmaxLength =3D 0, vminLength =3D 0;=0A=
            if (vmax[1]) {=0A=
                vmaxLength =3D vmax[1].length;=0A=
            }=0A=
            if (vmin[1]) {=0A=
                vminLength =3D vmin[1].length;=0A=
            }=0A=
            settings.mDec =3D Math.max(vmaxLength, vminLength);=0A=
        }/** set alternative decimal separator key */=0A=
        if (settings.altDec =3D=3D=3D null && settings.mDec > 0) {=0A=
            if (settings.aDec =3D=3D=3D '.' && settings.aSep !=3D=3D =
',') {=0A=
                settings.altDec =3D ',';=0A=
            } else if (settings.aDec =3D=3D=3D ',' && settings.aSep =
!=3D=3D '.') {=0A=
                settings.altDec =3D '.';=0A=
            }=0A=
        }=0A=
        /** cache regexps for autoStrip */=0A=
        var aNegReg =3D settings.aNeg ? '([-\\' + settings.aNeg + ']?)' =
: '(-?)';=0A=
        settings.aNegRegAutoStrip =3D aNegReg;=0A=
        settings.skipFirstAutoStrip =3D new RegExp(aNegReg + '[^-' + =
(settings.aNeg ? '\\' + settings.aNeg : '') + '\\' + settings.aDec + =
'\\d]' + '.*?(\\d|\\' + settings.aDec + '\\d)');=0A=
        settings.skipLastAutoStrip =3D new RegExp('(\\d\\' + =
settings.aDec + '?)[^\\' + settings.aDec + '\\d]\\D*$');=0A=
        var allowed =3D '-' + settings.aNum + '\\' + settings.aDec;=0A=
        if (settings.altDec && settings.altDec !=3D=3D settings.aSep) {=0A=
            allowed +=3D settings.altDec;=0A=
        }=0A=
        settings.allowedAutoStrip =3D new RegExp('[^' + allowed + ']', =
'gi');=0A=
        settings.numRegAutoStrip =3D new RegExp(aNegReg + '(?:\\' + =
settings.aDec + '?(\\d+\\' + settings.aDec + '\\d+)|(\\d*(?:\\' + =
settings.aDec + '\\d*)?))');=0A=
        return settings;=0A=
    }=0A=
    /**=0A=
    * strip all unwanted characters and leave only a number alert=0A=
    */=0A=
    function autoStrip(s, settings, strip_zero) {=0A=
        if (settings.aSign) { /** remove currency sign */=0A=
            while (s.indexOf(settings.aSign) > -1) {=0A=
                s =3D s.replace(settings.aSign, '');=0A=
            }=0A=
        }=0A=
        s =3D s.replace(settings.skipFirstAutoStrip, '$1$2'); /** first =
replace anything before digits */=0A=
        s =3D s.replace(settings.skipLastAutoStrip, '$1'); /** then =
replace anything after digits */=0A=
        s =3D s.replace(settings.allowedAutoStrip, ''); /** then remove =
any uninterested characters */=0A=
        if (settings.altDec) {=0A=
            s =3D s.replace(settings.altDec, settings.aDec);=0A=
        } /** get only number string */=0A=
        var m =3D s.match(settings.numRegAutoStrip);=0A=
        s =3D m ? [m[1], m[2], m[3]].join('') : '';=0A=
        if ((settings.lZero =3D=3D=3D 'allow' || settings.lZero =
=3D=3D=3D 'keep') && strip_zero !=3D=3D 'strip') {=0A=
            var parts =3D [], nSign =3D '';=0A=
            parts =3D s.split(settings.aDec);=0A=
            if (parts[0].indexOf('-') !=3D=3D -1) {=0A=
                nSign =3D '-';=0A=
                parts[0] =3D parts[0].replace('-', '');=0A=
            }=0A=
            if (parts[0].length > settings.mInt && parts[0].charAt(0) =
=3D=3D=3D '0') {/** strip leading zero if need */=0A=
                parts[0] =3D parts[0].slice(1);=0A=
            }=0A=
            s =3D nSign + parts.join(settings.aDec);=0A=
        }=0A=
        if ((strip_zero && settings.lZero =3D=3D=3D 'deny') || =
(strip_zero && settings.lZero =3D=3D=3D 'allow' && settings.allowLeading =
=3D=3D=3D false)) {=0A=
            var strip_reg =3D '^' + settings.aNegRegAutoStrip + '0*(\\d' =
+ (strip_zero =3D=3D=3D 'leading' ? ')' : '|$)');=0A=
            strip_reg =3D new RegExp(strip_reg);=0A=
            s =3D s.replace(strip_reg, '$1$2');=0A=
        }=0A=
        return s;=0A=
    }=0A=
    /**=0A=
    * places or removes brackets on negative values=0A=
    */=0A=
    function negativeBracket(s, nBracket, oEvent) {/** oEvent =3D =
settings.oEvent */=0A=
        nBracket =3D nBracket.split('');=0A=
        if (oEvent =3D=3D=3D 'set' || oEvent =3D=3D=3D 'focusout') {=0A=
            s =3D s.replace('-', '');=0A=
            s =3D nBracket[0] + s + nBracket[1];=0A=
        } else if ((oEvent =3D=3D=3D 'get' || oEvent =3D=3D=3D 'focusin' =
|| oEvent =3D=3D=3D 'pageLoad') && s.charAt(0) =3D=3D=3D nBracket[0]) {=0A=
            s =3D s.replace(nBracket[0], '-');=0A=
            s =3D s.replace(nBracket[1], '');=0A=
        }=0A=
        return s;=0A=
    }=0A=
    /**=0A=
    * truncate decimal part of a number=0A=
    */=0A=
    function truncateDecimal(s, aDec, mDec) {=0A=
        if (aDec && mDec) {=0A=
            var parts =3D s.split(aDec);=0A=
            /** truncate decimal part to satisfying length=0A=
            * cause we would round it anyway */=0A=
            if (parts[1] && parts[1].length > mDec) {=0A=
                if (mDec > 0) {=0A=
                    parts[1] =3D parts[1].substring(0, mDec);=0A=
                    s =3D parts.join(aDec);=0A=
                } else {=0A=
                    s =3D parts[0];=0A=
                }=0A=
            }=0A=
        }=0A=
        return s;=0A=
    }=0A=
    /**=0A=
    * prepare number string to be converted to real number=0A=
    */=0A=
    function fixNumber(s, aDec, aNeg) {=0A=
        if (aDec && aDec !=3D=3D '.') {=0A=
            s =3D s.replace(aDec, '.');=0A=
        }=0A=
        if (aNeg && aNeg !=3D=3D '-') {=0A=
            s =3D s.replace(aNeg, '-');=0A=
        }=0A=
        if (!s.match(/\d/)) {=0A=
            s +=3D '0';=0A=
        }=0A=
        return s;=0A=
    }=0A=
    /**=0A=
    * prepare real number to be converted to our format=0A=
    */=0A=
    function presentNumber(s, aDec, aNeg) {=0A=
        if (aNeg && aNeg !=3D=3D '-') {=0A=
            s =3D s.replace('-', aNeg);=0A=
        }=0A=
        if (aDec && aDec !=3D=3D '.') {=0A=
            s =3D s.replace('.', aDec);=0A=
        }=0A=
        return s;=0A=
    }=0A=
    /**=0A=
    * checking that number satisfy format conditions=0A=
    * and lays between settings.vMin and settings.vMax=0A=
    * and the string length does not exceed the digits in settings.vMin =
and settings.vMax=0A=
    */=0A=
    function autoCheck(s, settings) {=0A=
        s =3D autoStrip(s, settings);=0A=
        s =3D truncateDecimal(s, settings.aDec, settings.mDec);=0A=
        s =3D fixNumber(s, settings.aDec, settings.aNeg);=0A=
        var value =3D +s;=0A=
        if (settings.oEvent =3D=3D=3D 'set' && (value < settings.vMin || =
value > settings.vMax)) {=0A=
            $.error("The value (" + value + ") from the 'set' method =
falls outside of the vMin / vMax range");=0A=
        }=0A=
        return value >=3D settings.vMin && value <=3D settings.vMax;=0A=
    }=0A=
    /**=0A=
    * private function to check for empty value=0A=
    */=0A=
    function checkEmpty(iv, settings, signOnEmpty) {=0A=
        if (iv =3D=3D=3D '' || iv =3D=3D=3D settings.aNeg) {=0A=
            if (settings.wEmpty =3D=3D=3D 'zero') {=0A=
                return iv + '0';=0A=
            }=0A=
            if (settings.wEmpty =3D=3D=3D 'sign' || signOnEmpty) {=0A=
                return iv + settings.aSign;=0A=
            }=0A=
            return iv;=0A=
        }=0A=
        return null;=0A=
    }=0A=
    /**=0A=
    * private function that formats our number=0A=
    */=0A=
    function autoGroup(iv, settings) {=0A=
        iv =3D autoStrip(iv, settings);=0A=
        var testNeg =3D iv, empty =3D checkEmpty(iv, settings, true);=0A=
        if (empty !=3D=3D null) {=0A=
            return empty;=0A=
        }=0A=
        var digitalGroup =3D '';=0A=
        if (settings.dGroup =3D=3D=3D 2) {=0A=
            digitalGroup =3D /(\d)((\d)(\d{2}?)+)$/;=0A=
        } else if (settings.dGroup =3D=3D=3D 4) {=0A=
            digitalGroup =3D /(\d)((\d{4}?)+)$/;=0A=
        } else {=0A=
            digitalGroup =3D /(\d)((\d{3}?)+)$/;=0A=
        } /** splits the string at the decimal string */=0A=
        var ivSplit =3D iv.split(settings.aDec);=0A=
        if (settings.altDec && ivSplit.length =3D=3D=3D 1) {=0A=
            ivSplit =3D iv.split(settings.altDec);=0A=
        } /** assigns the whole number to the a varibale (s) */=0A=
        var s =3D ivSplit[0];=0A=
        if (settings.aSep) {=0A=
            while (digitalGroup.test(s)) { /**  re-inserts the thousand =
sepparator via a regualer expression */=0A=
                s =3D s.replace(digitalGroup, '$1' + settings.aSep + =
'$2');=0A=
            }=0A=
        }=0A=
        if (settings.mDec !=3D=3D 0 && ivSplit.length > 1) {=0A=
            if (ivSplit[1].length > settings.mDec) {=0A=
                ivSplit[1] =3D ivSplit[1].substring(0, settings.mDec);=0A=
            } /** joins the whole number with the deciaml value */=0A=
            iv =3D s + settings.aDec + ivSplit[1];=0A=
        } else { /** if whole numers only */=0A=
            iv =3D s;=0A=
        }=0A=
        if (settings.aSign) {=0A=
            var has_aNeg =3D iv.indexOf(settings.aNeg) !=3D=3D -1;=0A=
            iv =3D iv.replace(settings.aNeg, '');=0A=
            iv =3D settings.pSign =3D=3D=3D 'p' ? settings.aSign + iv : =
iv + settings.aSign;=0A=
            if (has_aNeg) {=0A=
                iv =3D settings.aNeg + iv;=0A=
            }=0A=
        }=0A=
        if (settings.oEvent =3D=3D=3D 'set' && testNeg < 0 && =
settings.nBracket !=3D=3D null) { /** removes the negative sign and =
places brackets */=0A=
            iv =3D negativeBracket(iv, settings.nBracket, =
settings.oEvent);=0A=
        }=0A=
        return iv;=0A=
    }=0A=
    /**=0A=
    * round number after setting by pasting or $().autoNumericSet()=0A=
    * private function for round the number=0A=
    * please note this handled as text - Javascript math function can =
return inaccurate values=0A=
    * also this offers multiple rounding metods that are not easily =
accomplished in javascript=0A=
    */=0A=
    function autoRound(iv, settings) { /** value to string */=0A=
        iv =3D (iv =3D=3D=3D '') ? '0' : iv.toString();=0A=
        convertKeyToNumber(settings, 'mDec'); /** set mDec to number =
needed when mDec set by 'update method */=0A=
        var ivRounded =3D '', i =3D 0, nSign =3D '', rDec =3D (typeof =
(settings.aPad) =3D=3D=3D 'boolean' || settings.aPad =3D=3D=3D null) ? =
(settings.aPad ? settings.mDec : 0) : +settings.aPad;=0A=
        var truncateZeros =3D function (ivRounded) { /** truncate not =
needed zeros */=0A=
            var regex =3D rDec =3D=3D=3D 0 ? (/(\.[1-9]*)0*$/) : rDec =
=3D=3D=3D 1 ? (/(\.\d[1-9]*)0*$/) : new RegExp('(\\.\\d{' + rDec + =
'}[1-9]*)0*$');=0A=
            ivRounded =3D ivRounded.replace(regex, '$1'); /** If there =
are no decimal places, we don't need a decimal point at the end */=0A=
            if (rDec =3D=3D=3D 0) {=0A=
                ivRounded =3D ivRounded.replace(/\.$/, '');=0A=
            }=0A=
            return ivRounded;=0A=
        };=0A=
        if (iv.charAt(0) =3D=3D=3D '-') { /** Checks if the iv (input =
Value)is a negative value */=0A=
            nSign =3D '-'; /** removes the negative sign will be added =
back later if required */=0A=
            iv =3D iv.replace('-', '');=0A=
        } /** prepend a zero if first character is not a digit (then it =
is likely to be a dot)*/=0A=
        if (!iv.match(/^\d/)) {=0A=
            iv =3D '0' + iv;=0A=
        } /** determines if the value is zero - if zero no negative sign =
*/=0A=
        if (nSign =3D=3D=3D '-' && +iv =3D=3D=3D 0) {=0A=
            nSign =3D '';=0A=
        }=0A=
        if ((+iv > 0 && settings.lZero !=3D=3D 'keep') || (iv.length > 0 =
&& settings.lZero =3D=3D=3D 'allow')) { /** trims leading zero's if =
needed */=0A=
            iv =3D iv.replace(/^0*(\d)/, '$1');=0A=
        }=0A=
        var dPos =3D iv.lastIndexOf('.'); /** virtual decimal position */=0A=
        var vdPos =3D dPos =3D=3D=3D -1 ? iv.length - 1 : dPos; /** =
checks decimal places to determine if rounding is required */=0A=
        var cDec =3D (iv.length - 1) - vdPos; /** check if no rounding =
is required */=0A=
        if (cDec <=3D settings.mDec) {=0A=
            ivRounded =3D iv; /** check if we need to pad with zeros */=0A=
            if (cDec < rDec) {=0A=
                if (dPos =3D=3D=3D -1) {=0A=
                    ivRounded +=3D '.';=0A=
                }=0A=
                while (cDec < rDec) {=0A=
                    var zeros =3D '000000'.substring(0, rDec - cDec);=0A=
                    ivRounded +=3D zeros;=0A=
                    cDec +=3D zeros.length;=0A=
                }=0A=
            } else if (cDec > rDec) {=0A=
                ivRounded =3D truncateZeros(ivRounded);=0A=
            } else if (cDec =3D=3D=3D 0 && rDec =3D=3D=3D 0) {=0A=
                ivRounded =3D ivRounded.replace(/\.$/, '');=0A=
            }=0A=
            return nSign + ivRounded;=0A=
        } /** rounded length of the string after rounding  */=0A=
        var rLength =3D dPos + settings.mDec; /** test round */=0A=
        var tRound =3D +iv.charAt(rLength + 1);=0A=
        var ivArray =3D iv.substring(0, rLength + 1).split('');=0A=
        var odd =3D (iv.charAt(rLength) =3D=3D=3D '.') ? =
(iv.charAt(rLength - 1) % 2) : (iv.charAt(rLength) % 2);=0A=
        if ((tRound > 4 && settings.mRound =3D=3D=3D 'S') || (tRound > 4 =
&& settings.mRound =3D=3D=3D 'A' && nSign =3D=3D=3D '') || (tRound > 5 =
&& settings.mRound =3D=3D=3D 'A' && nSign =3D=3D=3D '-') || (tRound > 5 =
&& settings.mRound =3D=3D=3D 's') || (tRound > 5 && settings.mRound =
=3D=3D=3D 'a' && nSign =3D=3D=3D '') || (tRound > 4 && settings.mRound =
=3D=3D=3D 'a' && nSign =3D=3D=3D '-') || (tRound > 5 && settings.mRound =
=3D=3D=3D 'B') || (tRound =3D=3D=3D 5 && settings.mRound =3D=3D=3D 'B' =
&& odd =3D=3D=3D 1) || (tRound > 0 && settings.mRound =3D=3D=3D 'C' && =
nSign =3D=3D=3D '') || (tRound > 0 && settings.mRound =3D=3D=3D 'F' && =
nSign =3D=3D=3D '-') || (tRound > 0 && settings.mRound =3D=3D=3D 'U')) {=0A=
            /** Round up the last digit if required, and continue until =
no more 9's are found */=0A=
            for (i =3D (ivArray.length - 1); i >=3D 0; i -=3D 1) {=0A=
                if (ivArray[i] !=3D=3D '.') {=0A=
                    ivArray[i] =3D +ivArray[i] + 1;=0A=
                    if (ivArray[i] < 10) {=0A=
                        break;=0A=
                    } else if (i > 0) {=0A=
                        ivArray[i] =3D '0';=0A=
                    }=0A=
                }=0A=
            }=0A=
        } /** Reconstruct the string, converting any 10's to 0's */=0A=
        ivArray =3D ivArray.slice(0, rLength + 1);=0A=
        ivRounded =3D truncateZeros(ivArray.join('')); /** return =
rounded value */=0A=
        return nSign + ivRounded;=0A=
    }=0A=
    /**=0A=
    * Holder object for field properties=0A=
    */=0A=
    function AutoNumericHolder(that, settings) {=0A=
        this.settings =3D settings;=0A=
        this.that =3D that;=0A=
        this.$that =3D $(that);=0A=
        this.formatted =3D false;=0A=
        this.settingsClone =3D autoCode(this.$that, this.settings);=0A=
        this.value =3D that.value;=0A=
    }=0A=
    AutoNumericHolder.prototype =3D {=0A=
        init: function (e) {=0A=
            this.value =3D this.that.value;=0A=
            this.settingsClone =3D autoCode(this.$that, this.settings);=0A=
            this.ctrlKey =3D e.ctrlKey;=0A=
            this.cmdKey =3D e.metaKey;=0A=
            this.shiftKey =3D e.shiftKey;=0A=
            this.selection =3D getElementSelection(this.that); /** =
keypress event overwrites meaningfull value of e.keyCode */=0A=
            if (e.type =3D=3D=3D 'keydown' || e.type =3D=3D=3D 'keyup') {=0A=
                this.kdCode =3D e.keyCode;=0A=
            }=0A=
            this.which =3D e.which;=0A=
            this.processed =3D false;=0A=
            this.formatted =3D false;=0A=
        },=0A=
        setSelection: function (start, end, setReal) {=0A=
            start =3D Math.max(start, 0);=0A=
            end =3D Math.min(end, this.that.value.length);=0A=
            this.selection =3D {=0A=
                start: start,=0A=
                end: end,=0A=
                length: end - start=0A=
            };=0A=
            if (setReal =3D=3D=3D undefined || setReal) {=0A=
                setElementSelection(this.that, start, end);=0A=
            }=0A=
        },=0A=
        setPosition: function (pos, setReal) {=0A=
            this.setSelection(pos, pos, setReal);=0A=
        },=0A=
        getBeforeAfter: function () {=0A=
            var value =3D this.value;=0A=
            var left =3D value.substring(0, this.selection.start);=0A=
            var right =3D value.substring(this.selection.end, =
value.length);=0A=
            return [left, right];=0A=
        },=0A=
        getBeforeAfterStriped: function () {=0A=
            var parts =3D this.getBeforeAfter();=0A=
            parts[0] =3D autoStrip(parts[0], this.settingsClone);=0A=
            parts[1] =3D autoStrip(parts[1], this.settingsClone);=0A=
            return parts;=0A=
        },=0A=
        /**=0A=
        * strip parts from excess characters and leading zeroes=0A=
        */=0A=
        normalizeParts: function (left, right) {=0A=
            var settingsClone =3D this.settingsClone;=0A=
            right =3D autoStrip(right, settingsClone); /** if right is =
not empty and first character is not aDec, */=0A=
            /** we could strip all zeros, otherwise only leading */=0A=
            var strip =3D right.match(/^\d/) ? true : 'leading';=0A=
            left =3D autoStrip(left, settingsClone, strip); /** prevents =
multiple leading zeros from being entered */=0A=
            if ((left =3D=3D=3D '' || left =3D=3D=3D settingsClone.aNeg) =
&& settingsClone.lZero =3D=3D=3D 'deny') {=0A=
                if (right > '') {=0A=
                    right =3D right.replace(/^0*(\d)/, '$1');=0A=
                }=0A=
            }=0A=
            var new_value =3D left + right; /** insert zero if has =
leading dot */=0A=
            if (settingsClone.aDec) {=0A=
                var m =3D new_value.match(new RegExp('^' + =
settingsClone.aNegRegAutoStrip + '\\' + settingsClone.aDec));=0A=
                if (m) {=0A=
                    left =3D left.replace(m[1], m[1] + '0');=0A=
                    new_value =3D left + right;=0A=
                }=0A=
            } /** insert zero if number is empty and io.wEmpty =3D=3D =
'zero' */=0A=
            if (settingsClone.wEmpty =3D=3D=3D 'zero' && (new_value =
=3D=3D=3D settingsClone.aNeg || new_value =3D=3D=3D '')) {=0A=
                left +=3D '0';=0A=
            }=0A=
            return [left, right];=0A=
        },=0A=
        /**=0A=
        * set part of number to value keeping position of cursor=0A=
        */=0A=
        setValueParts: function (left, right) {=0A=
            var settingsClone =3D this.settingsClone;=0A=
            var parts =3D this.normalizeParts(left, right);=0A=
            var new_value =3D parts.join('');=0A=
            var position =3D parts[0].length;=0A=
            if (autoCheck(new_value, settingsClone)) {=0A=
                new_value =3D truncateDecimal(new_value, =
settingsClone.aDec, settingsClone.mDec);=0A=
                if (position > new_value.length) {=0A=
                    position =3D new_value.length;=0A=
                }=0A=
                this.value =3D new_value;=0A=
                this.setPosition(position, false);=0A=
                return true;=0A=
            }=0A=
            return false;=0A=
        },=0A=
        /**=0A=
        * helper function for expandSelectionOnSign=0A=
        * returns sign position of a formatted value=0A=
        */=0A=
        signPosition: function () {=0A=
            var settingsClone =3D this.settingsClone, aSign =3D =
settingsClone.aSign, that =3D this.that;=0A=
            if (aSign) {=0A=
                var aSignLen =3D aSign.length;=0A=
                if (settingsClone.pSign =3D=3D=3D 'p') {=0A=
                    var hasNeg =3D settingsClone.aNeg && that.value && =
that.value.charAt(0) =3D=3D=3D settingsClone.aNeg;=0A=
                    return hasNeg ? [1, aSignLen + 1] : [0, aSignLen];=0A=
                }=0A=
                var valueLen =3D that.value.length;=0A=
                return [valueLen - aSignLen, valueLen];=0A=
            }=0A=
            return [1000, -1];=0A=
        },=0A=
        /**=0A=
        * expands selection to cover whole sign=0A=
        * prevents partial deletion/copying/overwritting of a sign=0A=
        */=0A=
        expandSelectionOnSign: function (setReal) {=0A=
            var sign_position =3D this.signPosition();=0A=
            var selection =3D this.selection;=0A=
            if (selection.start < sign_position[1] && selection.end > =
sign_position[0]) { /** if selection catches something except sign and =
catches only space from sign */=0A=
                if ((selection.start < sign_position[0] || selection.end =
> sign_position[1]) && this.value.substring(Math.max(selection.start, =
sign_position[0]), Math.min(selection.end, =
sign_position[1])).match(/^\s*$/)) { /** then select without empty space =
*/=0A=
                    if (selection.start < sign_position[0]) {=0A=
                        this.setSelection(selection.start, =
sign_position[0], setReal);=0A=
                    } else {=0A=
                        this.setSelection(sign_position[1], =
selection.end, setReal);=0A=
                    }=0A=
                } else { /** else select with whole sign */=0A=
                    this.setSelection(Math.min(selection.start, =
sign_position[0]), Math.max(selection.end, sign_position[1]), setReal);=0A=
                }=0A=
            }=0A=
        },=0A=
        /**=0A=
        * try to strip pasted value to digits=0A=
        */=0A=
        checkPaste: function () {=0A=
            if (this.valuePartsBeforePaste !=3D=3D undefined) {=0A=
                var parts =3D this.getBeforeAfter();=0A=
                var oldParts =3D this.valuePartsBeforePaste;=0A=
                delete this.valuePartsBeforePaste; /** try to strip =
pasted value first */=0A=
                parts[0] =3D parts[0].substr(0, oldParts[0].length) + =
autoStrip(parts[0].substr(oldParts[0].length), this.settingsClone);=0A=
                if (!this.setValueParts(parts[0], parts[1])) {=0A=
                    this.value =3D oldParts.join('');=0A=
                    this.setPosition(oldParts[0].length, false);=0A=
                }=0A=
            }=0A=
        },=0A=
        /**=0A=
        * process pasting, cursor moving and skipping of not interesting =
keys=0A=
        * if returns true, futher processing is not performed=0A=
        */=0A=
        skipAllways: function (e) {=0A=
            var kdCode =3D this.kdCode, which =3D this.which, ctrlKey =
=3D this.ctrlKey, cmdKey =3D this.cmdKey; /** catch the ctrl up on =
ctrl-v */=0A=
            if (kdCode =3D=3D=3D 17 && e.type =3D=3D=3D 'keyup' && =
this.valuePartsBeforePaste !=3D=3D undefined) {=0A=
                this.checkPaste();=0A=
                return false;=0A=
            }=0A=
            /** codes are taken from =
http://www.cambiaresearch.com/c4/702b8cd1-e5b0-42e6-83ac-25f0306e3e25/Jav=
ascript-Char-Codes-Key-Codes.aspx=0A=
            * skip Fx keys, windows keys, other special keys */=0A=
            if ((kdCode >=3D 112 && kdCode <=3D 123) || (kdCode >=3D 91 =
&& kdCode <=3D 93) || (kdCode >=3D 9 && kdCode <=3D 31) || (kdCode < 8 =
&& (which =3D=3D=3D 0 || which =3D=3D=3D kdCode)) || kdCode =3D=3D=3D =
144 || kdCode =3D=3D=3D 145 || kdCode =3D=3D=3D 45) {=0A=
                return true;=0A=
            }=0A=
            if ((ctrlKey || cmdKey) && kdCode =3D=3D=3D 65) { /** if =
select all (a=3D65)*/=0A=
                return true;=0A=
            }=0A=
            if ((ctrlKey || cmdKey) && (kdCode =3D=3D=3D 67 || kdCode =
=3D=3D=3D 86 || kdCode =3D=3D=3D 88)) {/** if copy (c=3D67) paste =
(v=3D86) or cut (x=3D88) */=0A=
                if (e.type =3D=3D=3D 'keydown') {=0A=
                    this.expandSelectionOnSign();=0A=
                }=0A=
                if (kdCode =3D=3D=3D 86) { /** try to prevent wrong =
paste */=0A=
                    if (e.type =3D=3D=3D 'keydown' || e.type =3D=3D=3D =
'keypress') {=0A=
                        if (this.valuePartsBeforePaste =3D=3D=3D =
undefined) {=0A=
                            this.valuePartsBeforePaste =3D =
this.getBeforeAfter();=0A=
                        }=0A=
                    } else {=0A=
                        this.checkPaste();=0A=
                    }=0A=
                }=0A=
                return e.type =3D=3D=3D 'keydown' || e.type =3D=3D=3D =
'keypress' || kdCode =3D=3D=3D 67;=0A=
            }=0A=
            if (ctrlKey || cmdKey) {=0A=
                return true;=0A=
            }=0A=
            if (kdCode =3D=3D=3D 37 || kdCode =3D=3D=3D 39) { /** jump =
over thousand separator */=0A=
                var aSep =3D this.settingsClone.aSep, start =3D =
this.selection.start, value =3D this.that.value;=0A=
                if (e.type =3D=3D=3D 'keydown' && aSep && =
!this.shiftKey) {=0A=
                    if (kdCode =3D=3D=3D 37 && value.charAt(start - 2) =
=3D=3D=3D aSep) {=0A=
                        this.setPosition(start - 1);=0A=
                    } else if (kdCode =3D=3D=3D 39 && =
value.charAt(start) =3D=3D=3D aSep) {=0A=
                        this.setPosition(start + 1);=0A=
                    }=0A=
                }=0A=
                return true;=0A=
            }=0A=
            if (kdCode >=3D 34 && kdCode <=3D 40) {=0A=
                return true;=0A=
            }=0A=
            return false;=0A=
        },=0A=
        /**=0A=
        * process deletion of characters=0A=
        * returns true if processing performed=0A=
        */=0A=
        processAllways: function () {=0A=
            var parts; /** process backspace or delete */=0A=
            if (this.kdCode =3D=3D=3D 8 || this.kdCode =3D=3D=3D 46) {=0A=
                if (!this.selection.length) {=0A=
                    parts =3D this.getBeforeAfterStriped();=0A=
                    if (this.kdCode =3D=3D=3D 8) {=0A=
                        parts[0] =3D parts[0].substring(0, =
parts[0].length - 1);=0A=
                    } else {=0A=
                        parts[1] =3D parts[1].substring(1, =
parts[1].length);=0A=
                    }=0A=
                    this.setValueParts(parts[0], parts[1]);=0A=
                } else {=0A=
                    this.expandSelectionOnSign(false);=0A=
                    parts =3D this.getBeforeAfterStriped();=0A=
                    this.setValueParts(parts[0], parts[1]);=0A=
                }=0A=
                return true;=0A=
            }=0A=
            return false;=0A=
        },=0A=
        /**=0A=
        * process insertion of characters=0A=
        * returns true if processing performed=0A=
        */=0A=
        processKeypress: function () {=0A=
            var settingsClone =3D this.settingsClone;=0A=
            var cCode =3D String.fromCharCode(this.which);=0A=
            var parts =3D this.getBeforeAfterStriped();=0A=
            var left =3D parts[0], right =3D parts[1]; /** start rules =
when the decimal charactor key is pressed */=0A=
            /** always use numeric pad dot to insert decimal separator */=0A=
            if (cCode =3D=3D=3D settingsClone.aDec || =
(settingsClone.altDec && cCode =3D=3D=3D settingsClone.altDec) || =
((cCode =3D=3D=3D '.' || cCode =3D=3D=3D ',') && this.kdCode =3D=3D=3D =
110)) { /** do not allow decimal character if no decimal part allowed */=0A=
                if (!settingsClone.mDec || !settingsClone.aDec) {=0A=
                    return true;=0A=
                } /** do not allow decimal character before aNeg =
character */=0A=
                if (settingsClone.aNeg && =
right.indexOf(settingsClone.aNeg) > -1) {=0A=
                    return true;=0A=
                } /** do not allow decimal character if other decimal =
character present */=0A=
                if (left.indexOf(settingsClone.aDec) > -1) {=0A=
                    return true;=0A=
                }=0A=
                if (right.indexOf(settingsClone.aDec) > 0) {=0A=
                    return true;=0A=
                }=0A=
                if (right.indexOf(settingsClone.aDec) =3D=3D=3D 0) {=0A=
                    right =3D right.substr(1);=0A=
                }=0A=
                this.setValueParts(left + settingsClone.aDec, right);=0A=
                return true;=0A=
            } /** start rule on negative sign */=0A=
            if (cCode =3D=3D=3D '-' || cCode =3D=3D=3D '+') { /** =
prevent minus if not allowed */=0A=
                if (!settingsClone.aNeg) {=0A=
                    return true;=0A=
                } /** carret is always after minus */=0A=
                if (left =3D=3D=3D '' && =
right.indexOf(settingsClone.aNeg) > -1) {=0A=
                    left =3D settingsClone.aNeg;=0A=
                    right =3D right.substring(1, right.length);=0A=
                } /** change sign of number, remove part if should */=0A=
                if (left.charAt(0) =3D=3D=3D settingsClone.aNeg) {=0A=
                    left =3D left.substring(1, left.length);=0A=
                } else {=0A=
                    left =3D (cCode =3D=3D=3D '-') ? settingsClone.aNeg =
+ left : left;=0A=
                }=0A=
                this.setValueParts(left, right);=0A=
                return true;=0A=
            } /** digits */=0A=
            if (cCode >=3D '0' && cCode <=3D '9') { /** if try to insert =
digit before minus */=0A=
                if (settingsClone.aNeg && left =3D=3D=3D '' && =
right.indexOf(settingsClone.aNeg) > -1) {=0A=
                    left =3D settingsClone.aNeg;=0A=
                    right =3D right.substring(1, right.length);=0A=
                }=0A=
                this.setValueParts(left + cCode, right);=0A=
                return true;=0A=
            } /** prevent any other character */=0A=
            return true;=0A=
        },=0A=
        /**=0A=
        * formatting of just processed value with keeping of cursor =
position=0A=
        */=0A=
        formatQuick: function () {=0A=
            var settingsClone =3D this.settingsClone;=0A=
            var parts =3D this.getBeforeAfterStriped();=0A=
            var leftLength =3D this.value;=0A=
            if ((settingsClone.aSep =3D=3D=3D '' || (settingsClone.aSep =
!=3D=3D '' && leftLength.indexOf(settingsClone.aSep) =3D=3D=3D -1)) && =
(settingsClone.aSign =3D=3D=3D '' || (settingsClone.aSign !=3D=3D '' && =
leftLength.indexOf(settingsClone.aSign) =3D=3D=3D -1))) {=0A=
                var subParts =3D [], nSign =3D '';=0A=
                subParts =3D leftLength.split(settingsClone.aDec);=0A=
                if (subParts[0].indexOf('-') > -1) {=0A=
                    nSign =3D '-';=0A=
                    subParts[0] =3D subParts[0].replace('-', '');=0A=
                    parts[0] =3D parts[0].replace('-', '');=0A=
                }=0A=
                if (subParts[0].length > settingsClone.mInt && =
parts[0].charAt(0) =3D=3D=3D '0') {/** strip leading zero if need */=0A=
                    parts[0] =3D parts[0].slice(1);=0A=
                }=0A=
                parts[0] =3D nSign + parts[0];=0A=
            }=0A=
            var value =3D autoGroup(this.value, this.settingsClone);=0A=
            var position =3D value.length;=0A=
            if (value) {=0A=
                /** prepare regexp which searches for cursor position =
from unformatted left part */=0A=
                var left_ar =3D parts[0].split('');=0A=
                var i =3D 0;=0A=
                for (i; i < left_ar.length; i +=3D 1) { /** thanks Peter =
Kovari */=0A=
                    if (!left_ar[i].match('\\d')) {=0A=
                        left_ar[i] =3D '\\' + left_ar[i];=0A=
                    }=0A=
                }=0A=
                var leftReg =3D new RegExp('^.*?' + left_ar.join('.*?'));=0A=
                /** search cursor position in formatted value */=0A=
                var newLeft =3D value.match(leftReg);=0A=
                if (newLeft) {=0A=
                    position =3D newLeft[0].length;=0A=
                    /** if we are just before sign which is in prefix =
position */=0A=
                    if (((position =3D=3D=3D 0 && value.charAt(0) =
!=3D=3D settingsClone.aNeg) || (position =3D=3D=3D 1 && value.charAt(0) =
=3D=3D=3D settingsClone.aNeg)) && settingsClone.aSign && =
settingsClone.pSign =3D=3D=3D 'p') {=0A=
                        /** place carret after prefix sign */=0A=
                        position =3D this.settingsClone.aSign.length + =
(value.charAt(0) =3D=3D=3D '-' ? 1 : 0);=0A=
                    }=0A=
                } else if (settingsClone.aSign && settingsClone.pSign =
=3D=3D=3D 's') {=0A=
                    /** if we could not find a place for cursor and have =
a sign as a suffix */=0A=
                    /** place carret before suffix currency sign */=0A=
                    position -=3D settingsClone.aSign.length;=0A=
                }=0A=
            }=0A=
            this.that.value =3D value;=0A=
            this.setPosition(position);=0A=
            this.formatted =3D true;=0A=
        }=0A=
    };=0A=
    /** thanks to Anthony & Evan C */=0A=
    function autoGet(obj) {=0A=
        if (typeof obj =3D=3D=3D 'string') {=0A=
            obj =3D obj.replace(/\[/g, "\\[").replace(/\]/g, "\\]");=0A=
            obj =3D '#' + obj.replace(/(:|\.)/g, '\\$1');=0A=
            /** obj =3D '#' + =
obj.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=3D>\|])/g, '\\$1'); */ /** =
possible modification to replace the above 2 lines */=0A=
        }=0A=
        return $(obj);=0A=
    }=0A=
    function getHolder($that, settings) {=0A=
        var data =3D $that.data('autoNumeric');=0A=
        if (!data) {=0A=
            data =3D {};=0A=
            $that.data('autoNumeric', data);=0A=
        }=0A=
        var holder =3D data.holder;=0A=
        if (holder =3D=3D=3D undefined && settings) {=0A=
            holder =3D new AutoNumericHolder($that.get(0), settings);=0A=
            data.holder =3D holder;=0A=
        }=0A=
        return holder;=0A=
    }=0A=
    var methods =3D {=0A=
        init: function (options) {=0A=
            return this.each(function () {=0A=
                var $this =3D $(this);=0A=
                var settings =3D $this.data('autoNumeric');/** attempt =
to grab 'autoNumeric' settings, if they don't exist returns "undefined". =
*/=0A=
                var tagData =3D $this.data();/** attempt to grab HTML5 =
data, if they don't exist we'll get "undefined".*/=0A=
                if (typeof settings !=3D=3D 'object') {/** If we could't =
grab settings, create them from defaults and passed options. */=0A=
                    var defaults =3D {=0A=
                        /**  allowed  numeric values=0A=
                        * please do not modify=0A=
                        */=0A=
                        aNum: '0123456789',=0A=
                        /** allowed thousand separator characters=0A=
                        * comma =3D ','=0A=
                        * period "full stop" =3D '.'=0A=
                        * apostrophe is escaped =3D '\''=0A=
                        * space =3D ' '=0A=
                        * none =3D ''=0A=
                        * NOTE: do not use numeric characters=0A=
                        */=0A=
                        aSep: ',',=0A=
                        /** digital grouping for the thousand separator =
used in Format=0A=
                        * dGroup: '2', results in 99,99,99,999 common in =
India=0A=
                        * dGroup: '3', results in 999,999,999 default=0A=
                        * dGroup: '4', results in 9999,9999,9999 used in =
some Asian countries=0A=
                        */=0A=
                        dGroup: '3',=0A=
                        /** allowed decimal separator characters=0A=
                        * period "full stop" =3D '.'=0A=
                        * comma =3D ','=0A=
                        */=0A=
                        aDec: '.',=0A=
                        /** allow to declare alternative decimal =
separator which is automatically replaced by aDec=0A=
                        * developed for countries the use a comma ',' as =
the decimal character=0A=
                        * and have keyboards\numeric pads that have a =
period 'full stop' as the decimal characters (Spain is an example)=0A=
                        */=0A=
                        altDec: null,=0A=
                        /** allowed currency symbol=0A=
                        * Must be in quotes aSign: '$',=0A=
                        */=0A=
                        aSign: '',=0A=
                        /** placement of currency sign=0A=
                        * for prefix  pSign: 'p',=0A=
                        * for suffix pSign: 's',=0A=
                        */=0A=
                        pSign: 'p',=0A=
                        /** maximum possible value=0A=
                        * value must be enclosed in quotes and use the =
period for the decimal point=0A=
                        * value must be larger than vMin=0A=
                        */=0A=
                        vMax: '999999999.99',=0A=
                        /** minimum possible value=0A=
                        * value must be enclosed in quotes and use the =
period for the decimal point=0A=
                        * value must be smaller than vMax=0A=
                        */=0A=
                        vMin: '0.00',=0A=
                        /** max number of decimal places =3D used to =
overide deciaml places set by the vMin & vMax values=0A=
                        * value must be enclosed in quotes example mDec: =
'3',=0A=
                        * This can also set the value via a call back =
function mDec: 'css:#=0A=
                        */=0A=
                        mDec: null,=0A=
                        /** method used for rounding=0A=
                        * mRound: 'S', Round-Half-Up Symmetric (default)=0A=
                        * mRound: 'A', Round-Half-Up Asymmetric=0A=
                        * mRound: 's', Round-Half-Down Symmetric (lower =
case s)=0A=
                        * mRound: 'a', Round-Half-Down Asymmetric (lower =
case a)=0A=
                        * mRound: 'B', Round-Half-Even "Bankers Rounding"=0A=
                        * mRound: 'U', Round Up "Round-Away-From-Zero"=0A=
                        * mRound: 'D', Round Down "Round-Toward-Zero" - =
same as trancate=0A=
                        * mRound: 'C', Round to Ceiling "Toward Positive =
Infinity"=0A=
                        * mRound: 'F', Round to Floor "Toward Negative =
Infinity"=0A=
                        */=0A=
                        mRound: 'S',=0A=
                        /** controls decimal padding=0A=
                        * aPad: true - always Pad decimals with zeros=0A=
                        * aPad: false - does not pad with zeros.=0A=
                        * aPad: `some number` - pad decimals with zero =
to number different from mDec=0A=
                        * thanks to Jonas Johansson for the suggestion=0A=
                        */=0A=
                        aPad: true,=0A=
                        /** places brackets on negative value -$ 999.99 =
to (999.99) =0A=
                        * visible only when the field does NOT have focus=0A=
                        * nBracket: '()', or nBracket: '[]' or nBracket: =
null (no brackets)=0A=
                        */=0A=
                        nBracket: null,=0A=
                        /** Displayed on empty string=0A=
                        * wEmpty: 'empty', - input can be blank=0A=
                        * wEmpty: 'zero', - displays zero=0A=
                        * wEmpty: 'sign', - displays the currency sign=0A=
                        */=0A=
                        wEmpty: 'empty',=0A=
                        /** controls leading zero behavior=0A=
                        * lZero: 'allow', - allows leading zeros to be =
entered. Zeros will be truncated when entering additional digits. On =
focusout zeros will be deleted.=0A=
                        * lZero: 'deny', - allows only one leading zero =
on values less than one=0A=
                        * lZero: 'keep', - allows leading zeros to be =
entered. on fousout zeros will be retained.=0A=
                        */=0A=
                        lZero: 'allow',=0A=
                        /** determine if the default value will be =
formatted on page ready.=0A=
                        * true =3D atomatically formats the default =
value on page ready  =0A=
                        * false =3D will not format the default value=0A=
                        */=0A=
                        aForm: true,=0A=
                        /** future use */=0A=
                        onSomeEvent: function () {}=0A=
                    };=0A=
                    settings =3D $.extend({}, defaults, tagData, =
options);/** Merge defaults, tagData and options */=0A=
                    if (settings.aDec =3D=3D=3D settings.aSep) {=0A=
                        $.error("autoNumeric will not function properly =
when the decimal character aDec: '" + settings.aDec + "' and thousand =
seperater aSep: '" + settings.aSep + "' are the same character");=0A=
                        return this;=0A=
                    }=0A=
                    if ($.inArray($this.prop('tagName'), =
settings.tagList) !=3D=3D -1) {=0A=
                        $.error("The <" + $this.prop('tagName') + "> is =
not supported by autoNumeric()");=0A=
                        return this;=0A=
                    }=0A=
                    $this.data('autoNumeric', settings);/** Save our new =
settings */=0A=
                } else {=0A=
                    $.error("autoNumeric has already been initialized. =
If you are trying to pass options please use the 'update' method");=0A=
                    return this;=0A=
                }=0A=
                var holder =3D getHolder($this, settings);=0A=
                if (settings.runOnce =3D=3D=3D undefined && =
settings.aForm && ($this[0].value || $this.text() !=3D=3D '' || =
settings.wEmpty !=3D=3D 'empty')) {=0A=
                    if ($this.is('input[type=3Dtext]')) {=0A=
                        if (settings.nBracket !=3D=3D null && =
($this[0].value || settings.wEmpty !=3D=3D 'empty')) { /** routine to =
handle page refresh */=0A=
                            settings.oEvent =3D "pageLoad";=0A=
                            $this[0].value =3D =
negativeBracket($this[0].value, settings.nBracket, settings.oEvent);=0A=
                            $this[0].value =3D autoStrip($this[0].value, =
settings);=0A=
                        }=0A=
                        $this.autoNumeric('set', $this.val());=0A=
                    }=0A=
                    if ($.inArray($this.prop('tagName'), =
settings.tagList) !=3D=3D -1) {=0A=
                        $this.autoNumeric('set', $this.text());=0A=
                    }=0A=
                }=0A=
                settings.runOnce =3D true;=0A=
                if ($this.is('input[type=3Dtext]') && =
!$this.is('[readonly]')) {=0A=
                    $this.bind('keydown.autoNumeric', function (e) {=0A=
                        holder =3D getHolder($this);=0A=
                        if (holder.settings.aDec =3D=3D=3D =
holder.settings.aSep) {=0A=
                            $.error("autoNumeric will not function =
properly when the decimal character aDec: '" + holder.settings.aDec + "' =
and thousand seperater aSep: '" + holder.settings.aSep + "' are the same =
character");=0A=
                            return this;=0A=
                        }=0A=
                        /* The below streamed code / comment allows the =
"enter" keydown to throw a change() event */=0A=
                        /* if (e.keyCode =3D=3D=3D 13 && holder.inVal =
!=3D=3D $this.val()){=0A=
                            $this.change();=0A=
                            holder.inVal =3D $this.val();=0A=
                        } */=0A=
                        holder.init(e);=0A=
                        holder.settings.oEvent =3D 'keydown';=0A=
                        if (holder.skipAllways(e)) {=0A=
                            holder.processed =3D true;=0A=
                            return true;=0A=
                        }=0A=
                        if (holder.processAllways()) {=0A=
                            holder.processed =3D true;=0A=
                            holder.formatQuick();=0A=
                            e.preventDefault();=0A=
                            return false;=0A=
                        }=0A=
                        holder.formatted =3D false;=0A=
                        return true;=0A=
                    });=0A=
                    $this.bind('keypress.autoNumeric', function (e) {=0A=
                        var holder =3D getHolder($this), processed =3D =
holder.processed;=0A=
                        holder.init(e);=0A=
                        holder.settings.oEvent =3D 'keypress';=0A=
                        if (holder.skipAllways(e)) {=0A=
                            return true;=0A=
                        }=0A=
                        if (processed) {=0A=
                            e.preventDefault();=0A=
                            return false;=0A=
                        }=0A=
                        if (holder.processAllways() || =
holder.processKeypress()) {=0A=
                            holder.formatQuick();=0A=
                            e.preventDefault();=0A=
                            return false;=0A=
                        }=0A=
                        holder.formatted =3D false;=0A=
=0A=
                    });=0A=
                    $this.bind('keyup.autoNumeric', function (e) {=0A=
                        var holder =3D getHolder($this);=0A=
                        holder.init(e);=0A=
                        holder.settings.oEvent =3D 'keyup';=0A=
                        var skip =3D holder.skipAllways(e);=0A=
                        holder.kdCode =3D 0;=0A=
                        delete holder.valuePartsBeforePaste;=0A=
                        if (skip) {=0A=
                            return true;=0A=
                        }=0A=
                        if (this.value =3D=3D=3D '') {=0A=
                            return true;=0A=
                        }=0A=
                        if (!holder.formatted) {=0A=
                            holder.formatQuick();=0A=
                        }=0A=
                    });=0A=
                    $this.bind('focusin.autoNumeric', function () {=0A=
                        var holder =3D getHolder($this);=0A=
                        holder.settingsClone.oEvent =3D 'focusin';=0A=
                        if (holder.settingsClone.nBracket !=3D=3D null) {=0A=
                            var checkVal =3D $this.val();=0A=
                            $this.val(negativeBracket(checkVal, =
holder.settingsClone.nBracket, holder.settingsClone.oEvent));=0A=
                        }=0A=
                        holder.inVal =3D $this.val();=0A=
                        var onempty =3D checkEmpty(holder.inVal, =
holder.settingsClone, true);=0A=
                        if (onempty !=3D=3D null) {=0A=
                            $this.val(onempty);=0A=
                        }=0A=
                    });=0A=
                    $this.bind('focusout.autoNumeric', function () {=0A=
                        var holder =3D getHolder($this), settingsClone =
=3D holder.settingsClone, value =3D $this.val(), origValue =3D value;=0A=
                        holder.settingsClone.oEvent =3D 'focusout';=0A=
                        var strip_zero =3D '';/* added to control =
leading zero */=0A=
                        if (settingsClone.lZero =3D=3D=3D 'allow') {/* =
added to control leading zero */=0A=
                            settingsClone.allowLeading =3D false;=0A=
                            strip_zero =3D 'leading';=0A=
                        }=0A=
                        if (value !=3D=3D '') {=0A=
                            value =3D autoStrip(value, settingsClone, =
strip_zero);=0A=
                            if (checkEmpty(value, settingsClone) =
=3D=3D=3D null && autoCheck(value, settingsClone, $this[0])) {=0A=
                                value =3D fixNumber(value, =
settingsClone.aDec, settingsClone.aNeg);=0A=
                                value =3D autoRound(value, =
settingsClone);=0A=
                                value =3D presentNumber(value, =
settingsClone.aDec, settingsClone.aNeg);=0A=
                            } else {=0A=
                                value =3D '';=0A=
                            }=0A=
                        }=0A=
                        var groupedValue =3D checkEmpty(value, =
settingsClone, false);=0A=
                        if (groupedValue =3D=3D=3D null) {=0A=
                            groupedValue =3D autoGroup(value, =
settingsClone);=0A=
                        }=0A=
                        if (groupedValue !=3D=3D origValue) {=0A=
                            $this.val(groupedValue);=0A=
                        }=0A=
                        if (groupedValue !=3D=3D holder.inVal) {=0A=
                            $this.change();=0A=
                            delete holder.inVal;=0A=
                        }=0A=
                        if (settingsClone.nBracket !=3D=3D null && =
$this.autoNumeric('get') < 0) {=0A=
                            holder.settingsClone.oEvent =3D 'focusout';=0A=
                            $this.val(negativeBracket($this.val(), =
settingsClone.nBracket, settingsClone.oEvent));=0A=
                        }=0A=
                    });=0A=
                } else if ($this.is('input[type=3Dtext]') && =
$this.is('[readonly]')) {=0A=
                    this.blur();=0A=
                }=0A=
            });=0A=
        },=0A=
        /** method to remove settings and stop autoNumeric() */=0A=
        destroy: function () {=0A=
            return $(this).each(function () {=0A=
                var $this =3D $(this);=0A=
                $this.unbind('.autoNumeric');=0A=
                $this.removeData('autoNumeric');=0A=
            });=0A=
        },=0A=
        /** method to update settings=0A=
        * can call as many times */=0A=
        update: function (options) {=0A=
            return $(this).each(function () {=0A=
                var $this =3D autoGet($(this)), settings =3D =
$this.data('autoNumeric');=0A=
                if (typeof settings !=3D=3D 'object') {=0A=
                    $.error("You must initialize autoNumeric('init', =
{options}) prior to calling the 'update' method");=0A=
                    return this;=0A=
                }=0A=
                var strip =3D $this.autoNumeric('get');=0A=
                settings =3D $.extend(settings, options);=0A=
                if (settings.aDec =3D=3D=3D settings.aSep) {=0A=
                    $.error("autoNumeric will not function properly when =
the decimal character aDec: '" + settings.aDec + "' and thousand =
seperater aSep: '" + settings.aSep + "' are the same character");=0A=
                    return this;=0A=
                }=0A=
                $this.data('autoNumeric', settings);=0A=
                if ($this.val() !=3D=3D '' || $this.text() !=3D=3D '') {=0A=
                    return $this.autoNumeric('set', strip);=0A=
                }=0A=
                return;=0A=
            });=0A=
        },=0A=
        /** returns a formated strings for "input:text" fields  Uses =
jQuery's .val() method*/=0A=
        set: function (valueIn) {=0A=
            return $(this).each(function () {=0A=
                var $this =3D autoGet($(this)), settings =3D =
$this.data('autoNumeric'), value =3D valueIn;=0A=
                /** added the following routine to handle numbers less =
than 0 that are stored in Exponential notaion ex: .0000001 stored as =
1e-7 */=0A=
                if (value < 0.000001 && value > 0) {=0A=
                    value =3D (value + 1).toString();=0A=
                    value =3D value.substring(1);=0A=
                }=0A=
                if (value < 0 && value > -1) {=0A=
                    value =3D (value - 1).toString();=0A=
                    value =3D '-' + value.substring(2);=0A=
                }=0A=
                settings.oEvent =3D 'set';=0A=
                if (typeof settings !=3D=3D 'object') {=0A=
                    $.error("You must initialize autoNumeric('init', =
{options}) prior to calling the 'set' method");=0A=
                    return this;=0A=
                }=0A=
                value.toString();=0A=
                value =3D autoRound(value, settings);=0A=
                value =3D presentNumber(value, settings.aDec, =
settings.aNeg);=0A=
                if (!autoCheck(value, settings)) {=0A=
                    value =3D autoRound('', settings);=0A=
                }=0A=
                value =3D autoGroup(value, settings);=0A=
                if ($this.is('input[type=3Dtext]')) {=0A=
                    return $this.val(value);=0A=
                }=0A=
                if ($.inArray($this.prop('tagName'), settings.tagList) =
!=3D=3D -1) {=0A=
                    return $this.text(value);=0A=
                }=0A=
                $.error("The <" + $this.prop('tagName') + "> is not =
supported by autoNumeric()");=0A=
                return false;=0A=
            });=0A=
        },=0A=
        /** method to get the unformated value from a specific input =
field, returns a numeric value */=0A=
        get: function () {=0A=
            var $this =3D autoGet($(this)), settings =3D =
$this.data('autoNumeric');=0A=
            settings.oEvent =3D 'get';=0A=
            if (typeof settings !=3D=3D 'object') {=0A=
                $.error("You must initialize autoNumeric('init', =
{options}) prior to calling the 'get' method");=0A=
                return this;=0A=
            }=0A=
            /** code here, use .eq(0) to grab first element in selector=0A=
            we'll just grab the HTML of that element for our value */=0A=
            var getValue =3D '';=0A=
            if ($this.is('input[type=3Dtext]')) {=0A=
                getValue =3D $this.eq(0).val();=0A=
            } else if ($.inArray($this.prop('tagName'), =
settings.tagList) !=3D=3D -1) {=0A=
                getValue =3D $this.eq(0).text();=0A=
            } else {=0A=
                $.error("The <" + $this.prop('tagName') + "> is not =
supported by autoNumeric()");=0A=
                return false;=0A=
            }=0A=
            if (getValue =3D=3D=3D '' && settings.wEmpty =3D=3D=3D =
'empty') {=0A=
                return getValue;=0A=
            }=0A=
            if (settings.nBracket !=3D=3D null && getValue !=3D=3D '') {=0A=
                getValue =3D negativeBracket(getValue, =
settings.nBracket, settings.oEvent);=0A=
            }=0A=
            if (settings.runOnce || settings.aForm =3D=3D=3D false) {=0A=
                getValue =3D autoStrip(getValue, settings);=0A=
            }=0A=
            getValue =3D fixNumber(getValue, settings.aDec, =
settings.aNeg);=0A=
            if (+getValue =3D=3D=3D 0 && settings.lZero !=3D=3D 'keep') {=0A=
                getValue =3D '0';=0A=
            }=0A=
            if (settings.lZero =3D=3D=3D 'keep') {=0A=
                return getValue;=0A=
            }=0A=
            return +getValue;=0A=
        },=0A=
        /** method to get the unformated value from multiple fields */=0A=
        getString: function () {=0A=
            var isAutoNumeric =3D false, $this =3D autoGet($(this)), str =
=3D  $this.serialize(), parts =3D str.split('&'), i =3D 0;=0A=
            for (i; i < parts.length; i +=3D 1) {=0A=
                var miniParts =3D parts[i].split('=3D');=0A=
                var settings =3D $('input:text[name=3D' + miniParts[0] + =
']').data('autoNumeric');=0A=
                if (typeof settings =3D=3D=3D 'object') {=0A=
                    if (miniParts[1] !=3D=3D '') {=0A=
                        miniParts[1] =3D $('input[name=3D' + =
miniParts[0] + ']').autoNumeric('get');=0A=
                        parts[i] =3D miniParts.join('=3D');=0A=
                    } else {=0A=
                        parts[i] =3D miniParts.join('=3D');=0A=
                    }=0A=
                    isAutoNumeric =3D true;=0A=
                }=0A=
            }=0A=
            if (isAutoNumeric =3D=3D=3D true) {=0A=
                return parts.join('&');=0A=
            }=0A=
            $.error("You must initialize autoNumeric('init', {options}) =
prior to calling the 'getString' method");=0A=
            return this;=0A=
        },=0A=
        /** method to get the unformated value from multiple fields */=0A=
        getArray: function () {=0A=
            var isAutoNumeric =3D false, $this =3D autoGet($(this)), =
formFields =3D  $this.serializeArray();=0A=
            $.each(formFields, function (i, field) {=0A=
                var settings =3D $('input:text[name=3D' + field.name + =
']').data('autoNumeric');=0A=
                if (typeof settings =3D=3D=3D 'object') {=0A=
                    if (field.value !=3D=3D '') {=0A=
                        field.value =3D $('input[name=3D' + field.name + =
']').autoNumeric('get').toString();=0A=
                    }=0A=
                    isAutoNumeric =3D true;=0A=
                }=0A=
            });=0A=
            if (isAutoNumeric =3D=3D=3D true) {=0A=
                return formFields;=0A=
            }=0A=
            $.error("You must initialize autoNumeric('init', {options}) =
prior to calling the 'getArray' method");=0A=
            return this;=0A=
        },=0A=
        /** returns the settings object for those who need to look under =
the hood */=0A=
        getSettings: function () {=0A=
            var $this =3D autoGet($(this));=0A=
            return $this.eq(0).data('autoNumeric');=0A=
        }=0A=
    };=0A=
    $.fn.autoNumeric =3D function (method) {=0A=
        if (methods[method]) {=0A=
            return methods[method].apply(this, =
Array.prototype.slice.call(arguments, 1));=0A=
        }=0A=
        if (typeof method =3D=3D=3D 'object' || !method) {=0A=
            return methods.init.apply(this, arguments);=0A=
        }=0A=
        $.error('Method "' +  method + '" is not supported by =
autoNumeric()');=0A=
    };=0A=
}(jQuery));
------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://decorplanit.com/plugin/autoNumeric-1.8.0-sample.js

$(document).ready(function (e) {=0A=
    /* demo samples */=0A=
    $('.demo').autoNumeric('init');=0A=
    $('#demoDefaults').bind('blur focusout keypress keyup', function () {=0A=
        var demoGet =3D $('#demoDefaults').autoNumeric('get');=0A=
        $('#demoGet').val(demoGet);=0A=
        $('#demoSet').autoNumeric('set', demoGet);=0A=
    });=0A=
    /* tutorial samples */=0A=
    $('#someID_defaults').autoNumeric('init');=0A=
    $('#someID_HTML5').autoNumeric('init');=0A=
    $('#someID_options').autoNumeric('init', {aSign: ' EUR', pSign: 's' =
});=0A=
    /* scripts for option & data code generator  */=0A=
    /* changes the selected radio button on altDec  */=0A=
    $('#altDecInput').focus(function () {=0A=
        $('#altDecDefault').attr('checked', false);=0A=
        $('#altDecUserDefined').attr('checked', 'checked');=0A=
    });=0A=
    /* rountine that prevents  numeric characters from being entered the =
the altDec field  */=0A=
    $('#altDecInput').keypress(function (e) {=0A=
        var cc =3D String.fromCharCode(e.which);=0A=
        if (e.which !=3D=3D 32 && cc >=3D 0 && cc <=3D 9) {=0A=
            e.preventDefault();=0A=
        }=0A=
    });=0A=
    /* changes the selected radio button on aSign  */=0A=
    $('#aSignInput').focus(function () {=0A=
        $('#aSignDefault').attr('checked', false);=0A=
        $('#aSignUserDefined').attr('checked', 'checked');=0A=
    });=0A=
    /* rountine that prevents  apostrophe, comma, more than one period =
(full stop) or numeric characters from being entered the the aSign field =
 */=0A=
    $('#aSignInput').keypress(function (e) {=0A=
        var cc =3D String.fromCharCode(e.which);=0A=
        if ((e.which !=3D=3D 32 && cc >=3D 0 && cc <=3D 9) || cc =
=3D=3D=3D ', ' || cc =3D=3D=3D "'" || (cc =3D=3D=3D "." && =
this.value.lastIndexOf('.') !=3D=3D -1)) {=0A=
            e.preventDefault();=0A=
        }=0A=
    });=0A=
    /* changes the selected radio button on vMin  */=0A=
    $('#vMinInput').focus(function () {=0A=
        $('#vMinDefault').attr('checked', false);=0A=
        $('#vMinUserDefined').attr('checked', 'checked');=0A=
    });=0A=
    /* changes the selected radio button on vMax  */=0A=
    $('#vMaxInput').focus(function () {=0A=
        $('#vMaxDefault').attr('checked', false);=0A=
        $('#vMaxUserDefined').attr('checked', 'checked');=0A=
    });=0A=
    /* changes the selected radio button on mDec  */=0A=
    $('#mDecInput').focus(function () {=0A=
        $('#mDecDefault').attr('checked', false);=0A=
        $('#mDecUserDefined').attr('checked', 'checked');=0A=
    });=0A=
    $("input.md").bind('click keyup blur', function () {=0A=
        var optionCode =3D '', aSepOption =3D '', dGroupOption =3D '', =
aDecOption =3D '', altDecOption =3D '', aSignOption =3D '', pSignOption =
=3D '', vMinOption =3D '', vMaxOption =3D '', mDecOption =3D '', =
mRoundOption =3D '', aPadOption =3D '', nBracketOption =3D '', =
wEmptyOption =3D '', lZeroOption =3D '', aFormOption =3D '';=0A=
        var dataCode =3D '', aSepData =3D '', dGroupData =3D '', =
aDecData =3D '', altDecData =3D '', aSignData =3D '', pSignData =3D '', =
vMinData =3D '', vMaxData =3D '', mDecData =3D '', mRoundData =3D '', =
aPadData =3D '', nBracketData =3D '', wEmptyData =3D '', lZeroData =3D =
'', aFormData =3D '';=0A=
        var aSepOptionArray =3D ['', "aSep: '\\''", "aSep: '.'", "aSep: =
' '", "aSep: ''"], aSepDataArray =3D ['', 'data-a-sep=3D"\'"', =
'data-a-sep=3D"."', 'data-a-sep=3D" "', 'data-a-sep=3D""'];=0A=
        var dGroupOptionArray =3D ['', "dGroup: '2'", "dGroup: '4'"], =
dGroupDataArray =3D ['', 'data-d-group=3D"2"', 'data-d-group=3D"4"'];=0A=
        var aDecOptionArray =3D ['', "aDec: ','"], aDecDataArray =3D =
['', 'data-a-dec=3D","'];=0A=
        var pSignOptionArray =3D ['',  "pSign: 's'"], pSignDataArray =3D =
['', 'data-p-sign=3D"s"'];=0A=
        var mRoundOptionArray =3D ['', "mRound: 'A'", "mRound: 's'", =
"mRound: 'a'", "mRound: 'B'", "mRound: 'U'", "mRound: 'D'", "mRound: =
'C'", "mRound: 'F'"], mRoundDataArray =3D ['', 'data-m-round=3D"A"', =
'data-m-round=3D"s"', 'data-m-round=3D"a"', 'data-m-round=3D"B"', =
'data-m-round=3D"U"', 'data-m-round=3D"D"', 'data-m-round=3D"C"', =
'data-m-round=3D"F"'];=0A=
        var aPadOptionArray =3D ['', "aPad: false"], aPadDataArray =3D =
['', 'data-a-pad=3D"false"'];=0A=
        var nBracketOptionArray =3D ['', "nBracket: '()'"], =
nBracketDataArray =3D ['', 'data-n-bracket=3D"()"'];=0A=
        var wEmptyOptionArray =3D ['', "wEmpty: 'zero'", "wEmpty: =
'sign'"], wEmptyDataArray =3D ['', 'data-w-empty=3D"zero"', =
'data-w-empty=3D"sign"'];=0A=
        var lZeroOptionArray =3D ['', "lZero: 'deny'", "lZero: 'keep'"], =
lZeroDataArray =3D ['', 'data-l-zero=3D"deny"', 'data-l-zero=3D"keep"'];=0A=
        var aFormOptionArray =3D ['', "aForm: false"], aFormDataArray =
=3D ['', 'data-a-form=3D"false"'];=0A=
        if ($("input:radio[name=3DaSep]:checked").attr('id') =3D=3D=3D =
'aSepDefault') {=0A=
            $('input:radio[name=3DaDec]:nth(0)').removeAttr('disabled');=0A=
            $('input:radio[name=3DaDec]:nth(0)').attr('checked', true);=0A=
            $('input:radio[name=3DaDec]:nth(1)').attr('disabled', true);=0A=
        }=0A=
        if ($("input:radio[name=3DaSep]:checked").attr('id') =3D=3D=3D =
'aSepPeriod') {=0A=
            $('input:radio[name=3DaDec]:nth(1)').removeAttr("disabled");=0A=
            $('input:radio[name=3DaDec]:nth(1)').attr('checked', true);=0A=
            $('input:radio[name=3DaDec]:nth(0)').attr("disabled", true);=0A=
        }=0A=
        if ($("input:radio[name=3DaSep]:checked").attr('id') !=3D=3D =
'aSepDefault' && $("input:radio[name=3DaSep]:checked").attr('id') =
!=3D=3D 'aSepPeriod') {=0A=
            $('input:radio[name=3DaDec]:nth(0)').removeAttr("disabled");=0A=
            $('input:radio[name=3DaDec]:nth(1)').removeAttr("disabled");=0A=
        }=0A=
        aSepOption =3D =
aSepOptionArray[$("input:radio[name=3DaSep]:checked").val()];=0A=
        aSepData =3D =
aSepDataArray[$("input:radio[name=3DaSep]:checked").val()];=0A=
        dGroupOption =3D =
dGroupOptionArray[$("input:radio[name=3DdGroup]:checked").val()];=0A=
        dGroupData =3D =
dGroupDataArray[$("input:radio[name=3DdGroup]:checked").val()];=0A=
        aDecOption =3D =
aDecOptionArray[$("input:radio[name=3DaDec]:checked").val()];=0A=
        aDecData =3D =
aDecDataArray[$("input:radio[name=3DaDec]:checked").val()];=0A=
        if ($("input:radio[name=3DaltDec]:checked").attr('id') =3D=3D=3D =
'altDecDefault') {=0A=
            $('#altDecInput').val('');=0A=
        }=0A=
        var altDecEntered =3D $('#altDecInput').val();=0A=
        if (altDecEntered !=3D=3D '') {=0A=
            altDecOption =3D "altDec: '" + altDecEntered + "'";=0A=
            altDecData =3D 'data-alt-dec=3D"' + altDecEntered + '"';=0A=
        } else {=0A=
            altDecOption =3D '';=0A=
            altDecData =3D '';=0A=
        }=0A=
        if ($("input:radio[name=3DaSign]:checked").attr('id') =3D=3D=3D =
'aSignDefault') {=0A=
            $('#aSignInput').val('');=0A=
        }=0A=
        var aSignEntered =3D $('#aSignInput').val();=0A=
        if (aSignEntered !=3D=3D '') {=0A=
            aSignOption =3D "aSign: '" + aSignEntered + "'";=0A=
            aSignData =3D 'data-a-sign=3D"' + aSignEntered + '"';=0A=
        } else {=0A=
            aSignOption =3D '';=0A=
            aSignData =3D '';=0A=
        }=0A=
        pSignOption =3D =
pSignOptionArray[$("input:radio[name=3DpSign]:checked").val()];=0A=
        pSignData =3D =
pSignDataArray[$("input:radio[name=3DpSign]:checked").val()];=0A=
        if ($("input:radio[name=3DvMin]:checked").attr('id') =3D=3D=3D =
'vMinDefault') {=0A=
            $('#vMinInput').val('');=0A=
        }=0A=
        var vMinEntered =3D $('#vMinInput').val();=0A=
        if (vMinEntered !=3D=3D '') {=0A=
            vMinOption =3D "vMin: '" + vMinEntered + "'";=0A=
            vMinData =3D 'data-v-min=3D"' + vMinEntered + '"';=0A=
        } else {=0A=
            vMinOption =3D '';=0A=
            vMinData =3D '';=0A=
        }=0A=
        if ($("input:radio[name=3DvMax]:checked").attr('id') =3D=3D=3D =
'vMaxDefault') {=0A=
            $('#vMaxInput').val('');=0A=
        }=0A=
        var vMaxEntered =3D $('#vMaxInput').val();=0A=
        if (vMaxEntered !=3D=3D '') {=0A=
            vMaxOption =3D "vMax: '" + vMaxEntered + "'";=0A=
            vMaxData =3D 'data-v-max=3D"' + vMaxEntered + '"';=0A=
        } else {=0A=
            vMaxOption =3D '';=0A=
            vMaxData =3D '';=0A=
        }=0A=
        var mDecEntered =3D $('#mDecInput').val();=0A=
        if (mDecEntered !=3D=3D '') {=0A=
            mDecOption =3D "mDec: '" + mDecEntered + "'";=0A=
            mDecData =3D 'data-m-dec=3D"' + mDecEntered + '"';=0A=
        } else {=0A=
            mDecOption =3D '';=0A=
            mDecData =3D '';=0A=
        }		=0A=
        mRoundOption =3D =
mRoundOptionArray[$("input:radio[name=3DmRound]:checked").val()];=0A=
        mRoundData =3D =
mRoundDataArray[$("input:radio[name=3DmRound]:checked").val()];=0A=
        aPadOption =3D =
aPadOptionArray[$("input:radio[name=3DaPad]:checked").val()];=0A=
        aPadData =3D =
aPadDataArray[$("input:radio[name=3DaPad]:checked").val()];=0A=
        nBracketOption =3D =
nBracketOptionArray[$("input:radio[name=3DnBracket]:checked").val()];=0A=
        nBracketData =3D =
nBracketDataArray[$("input:radio[name=3DnBracket]:checked").val()];=0A=
        wEmptyOption =3D =
wEmptyOptionArray[$("input:radio[name=3DwEmpty]:checked").val()];=0A=
        wEmptyData =3D =
wEmptyDataArray[$("input:radio[name=3DwEmpty]:checked").val()];=0A=
        lZeroOption =3D =
lZeroOptionArray[$("input:radio[name=3DlZero]:checked").val()];=0A=
        lZeroData =3D =
lZeroDataArray[$("input:radio[name=3DlZero]:checked").val()];=0A=
        aFormOption =3D =
aFormOptionArray[$("input:radio[name=3DaForm]:checked").val()];=0A=
        aFormData =3D =
aFormDataArray[$("input:radio[name=3DaForm]:checked").val()];=0A=
		if (aSepOption !=3D=3D '') {=0A=
            optionCode =3D aSepOption;=0A=
            dataCode =3D aSepData;=0A=
        }=0A=
        if (dGroupOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + dGroupOption;=0A=
                dataCode =3D dataCode + ' ' + dGroupData;=0A=
            } else {=0A=
                optionCode =3D dGroupOption;=0A=
                dataCode =3D dGroupData;=0A=
            }=0A=
        }=0A=
        if (aDecOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + aDecOption;=0A=
                dataCode =3D dataCode + ' ' + aDecData;=0A=
            } else {=0A=
                optionCode =3D aDecOption;=0A=
                dataCode =3D aDecData;=0A=
            }=0A=
        }=0A=
        if (altDecOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + altDecOption;=0A=
                dataCode =3D dataCode + ' ' + altDecData;=0A=
            } else {=0A=
                optionCode =3D altDecOption;=0A=
                dataCode =3D altDecData;=0A=
            }=0A=
        }=0A=
        if (aSignOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode  + ', ' + aSignOption;=0A=
                dataCode =3D dataCode + ' ' + aSignData;=0A=
            } else {=0A=
                optionCode =3D aSignOption;=0A=
                dataCode =3D aSignData;=0A=
            }=0A=
        }=0A=
        if (pSignOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + pSignOption;=0A=
                dataCode =3D dataCode + ' ' + pSignData;=0A=
            } else {=0A=
                optionCode =3D pSignOption;=0A=
                dataCode =3D pSignData;=0A=
            }=0A=
        }=0A=
        if (vMinOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + vMinOption;=0A=
                dataCode =3D dataCode + ' ' + vMinData;=0A=
            } else {=0A=
                optionCode =3D vMinOption;=0A=
                dataCode =3D vMinData;=0A=
            }=0A=
        }=0A=
        if (vMaxOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + vMaxOption;=0A=
                dataCode =3D dataCode + ' ' + vMaxData;=0A=
            } else {=0A=
                optionCode =3D vMaxOption;=0A=
                dataCode =3D vMaxData;=0A=
            }=0A=
        }=0A=
        if (mDecOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + mDecOption;=0A=
                dataCode =3D optionCode + mDecData;				=0A=
            } else {=0A=
                optionCode =3D mDecOption;=0A=
				dataCode =3D mDecData;=0A=
            }=0A=
        }=0A=
        if (mRoundOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + mRoundOption;=0A=
                dataCode =3D dataCode + ' ' + mRoundData;=0A=
            } else {=0A=
                optionCode =3D mRoundOption;=0A=
                dataCode =3D mRoundData;=0A=
            }=0A=
        }=0A=
        if (aPadOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + aPadOption;=0A=
                dataCode =3D dataCode + ' ' + aPadData;=0A=
            } else {=0A=
                optionCode =3D aPadOption;=0A=
                dataCode =3D aPadData;=0A=
            }=0A=
        }=0A=
        if (nBracketOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + nBracketOption;=0A=
                dataCode =3D dataCode + ' ' + nBracketData;=0A=
            } else {=0A=
                optionCode =3D nBracketOption;=0A=
                dataCode =3D nBracketData;=0A=
            }=0A=
        }=0A=
        if (wEmptyOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + wEmptyOption;=0A=
                dataCode =3D dataCode + ' ' + wEmptyData;=0A=
            } else {=0A=
                optionCode =3D wEmptyOption;=0A=
                dataCode =3D wEmptyData;=0A=
            }=0A=
        }=0A=
        if (lZeroOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + lZeroOption;=0A=
                dataCode =3D dataCode + ' ' + lZeroData;=0A=
            } else {=0A=
                optionCode =3D lZeroOption;=0A=
                dataCode =3D lZeroData;=0A=
            }=0A=
        }=0A=
        if (aFormOption !=3D=3D '') {=0A=
            if (optionCode !=3D=3D '') {=0A=
                optionCode =3D optionCode + ', ' + aFormOption;=0A=
                dataCode =3D dataCode + ' ' + aFormData;=0A=
            } else {=0A=
                optionCode =3D aFormOption;=0A=
                dataCode =3D aFormData;=0A=
            }=0A=
        }=0A=
        $('#optionCode').text('');=0A=
        $('#dataCode').text('');=0A=
        if (optionCode !=3D=3D '') {=0A=
            $('#optionCode').text('{' + optionCode + '}');=0A=
            $('#dataCode').text(dataCode);=0A=
        }=0A=
    });=0A=
    /* clears the metadata code  */=0A=
    $('#rd').click(function () {=0A=
        $('#optionCode').text('');=0A=
        $('#dataCode').text('');=0A=
    });=0A=
    /* ends scripts for metadata code generator  */=0A=
=0A=
    /* script  for defaults demo  */=0A=
    $('#d_noMeta').blur(function () {=0A=
        var convertInput =3D '';=0A=
        convertInput =3D $(this).autoNumericGet();=0A=
        $('#d_Get').val(convertInput);=0A=
        $('#d_Set').autoNumericSet(convertInput);=0A=
    });=0A=
    /* end script  for defaults demo  */=0A=
=0A=
	/* general init on the class=3D"auto" */=0A=
	$('.auto').autoNumeric('init');=0A=
=0A=
	/* init method */=0A=
    var test =3D {aSign: '=E2=82=AC '};=0A=
    $('#demoInit').autoNumeric(test);=0A=
=0A=
	/* destroy method */=0A=
    $('#demoDestroyInput').autoNumeric('init');=0A=
    $('#demoDestroyButton').click(function () {=0A=
        $('#demoDestroyInput').autoNumeric('destroy');=0A=
    });=0A=
    $('#demoInitButton').click(function () {=0A=
        $('#demoDestroyInput').autoNumeric('init');=0A=
    });=0A=
=0A=
	/* update method script */=0A=
    $('#demoUpdateInput').autoNumeric('init');=0A=
    $('#demoUpdateButton1').click(function () {=0A=
        $('#demoUpdateInput').autoNumeric('update', {aSign: '$ '});=0A=
    });=0A=
    $('#demoUpdateButton2').click(function () {=0A=
        $('#demoUpdateInput').autoNumeric('update', {aSign: '=E2=82=AC =
'});=0A=
    });=0A=
=0A=
	/* set method script */=0A=
	$('.demoSet').autoNumeric('init');=0A=
	$('#demoSetValue').focus(function () {=0A=
        $('#demoSetInput').val('');=0A=
		$('#demoSetSpan').text('Number placed here:');=0A=
    });=0A=
	$('#demoSetButton').click(function () {=0A=
        var demoSetValue =3D $('#demoSetValue').val();=0A=
		$('.demoSet').autoNumeric('set', demoSetValue);		=0A=
    });=0A=
=0A=
	/* get method script */=0A=
	$('#demoGetButton1').click(function () {=0A=
		 var getInput =3D $('#demoGetInput').autoNumeric('get');=0A=
		$('#demoGetValue1').val(getInput);=0A=
    });=0A=
	$('#demoGetButton2').click(function () {=0A=
		 var getTd =3D $('#demoGetTd').autoNumeric('get');	=0A=
		$('#demoGetValue2').val(getTd);=0A=
    });=0A=
=0A=
	/* getString method script */=0A=
    $('#getStringButton').click(function () {=0A=
        console.log($('form:eq(11)').serialize());=0A=
       	var testGetString =3D $('form:eq(11)').autoNumeric('getString');=0A=
       	console.log(testGetString);=0A=
        return false;=0A=
    });=0A=
=0A=
	/* getarray method script */=0A=
    var totalCost =3D $('#widget').autoNumeric('get') * =
$('#cost').autoNumeric('get');=0A=
    $('#total').autoNumeric('set', totalCost);=0A=
    $('#widget, #cost').keyup(function () {=0A=
        totalCost =3D $('#widget').autoNumeric('get') * =
$('#cost').autoNumeric('get');=0A=
        $('#total').autoNumeric('set', totalCost);=0A=
    });=0A=
    $('#getArrayButton').click(function () {=0A=
        console.log($('form:eq(12)').serializeArray());=0A=
        var testGetArray =3D $('form:eq(12)').autoNumeric('getArray');=0A=
        console.log(testGetArray);=0A=
        console.log(JSON.stringify(testGetArray));=0A=
        return false;=0A=
    });=0A=
=0A=
	/* getSettings method script */=0A=
    $('#getSettingsButton').click(function () {=0A=
        var testGetSettings =3D $('#fi7').autoNumeric('getSettings');=0A=
        console.log(testGetSettings);=0A=
        return false;=0A=
    });=0A=
=0A=
	/* mRound demo */=0A=
	$('.auto_mRound').autoNumeric('init');=0A=
    $('#mRoundValue').focus(function () {=0A=
		$('.auto_mRound').val('');=0A=
    });=0A=
	$('#mRoundDecimal').change(function () {=0A=
		var getValue =3D $('#mRoundValue').autoNumeric('get');=0A=
		var getDecimal =3D $('#mRoundDecimal').val();=0A=
		var getOption =3D $.parseJSON('{"mDec":  "' + getDecimal + '"}');=0A=
		console.log(getOption);=0A=
		$('.auto_mRound').autoNumeric('update', getOption);=0A=
		$('.auto_mRound').autoNumeric('set', getValue);=0A=
    });=0A=
    $('#mRoundButton').click(function () {=0A=
		var getValue =3D $('#mRoundValue').autoNumeric('get');=0A=
		var getDecimal =3D $('#mRoundDecimal').val();=0A=
		var getOption =3D $.parseJSON('{"mDec":  ' + getDecimal + '}');=0A=
		$('.auto_mRound').autoNumeric('update', getOption);=0A=
		$('.auto_mRound').autoNumeric('set', getValue);=0A=
    });=0A=
=0A=
    $('#i1').keyup(function () {=0A=
        var strip =3D $('#i1').autoNumeric('get');=0A=
        $('#i2').val(strip);=0A=
        $('#i3').autoNumeric('set', strip);=0A=
        $('#span1').autoNumeric('set', strip);=0A=
    });=0A=
=0A=
    $('#i6').autoNumeric('init');=0A=
    $('#b5').click(function () {=0A=
        $('#i6').val('');=0A=
        $('#i6').autoNumeric('update', {lZero: 'deny'});=0A=
        $('#i6').focus();=0A=
    });=0A=
    $('#b6').click(function () {=0A=
        $('#i6').val('');=0A=
        $('#i6').autoNumeric('update', {lZero: 'allow'});=0A=
        $('#i6').focus();=0A=
    });=0A=
    $('#b7').click(function () {=0A=
        $('#i6').val('');=0A=
        $('#i6').autoNumeric('update', {lZero: 'keep'});=0A=
        $('#i6').focus();=0A=
    });=0A=
    $('#fi7').autoNumeric('init');=0A=
    $('#fb8').click(function () {=0A=
        $('#fi7').autoNumeric('update', {nBracket: null});=0A=
    });=0A=
    $('#fb9').click(function () {=0A=
        $('#fi7').autoNumeric('update', {nBracket: '()'});=0A=
    });=0A=
=0A=
    $('a').smoothScroll();=0A=
    //console.log($('#fi7').data('autoNumeric'));=0A=
    //if (jQuery) {=0A=
        //console.log('jQuery is loaded');=0A=
    //} else {=0A=
        //console.log('jQuery is not loaded');=0A=
    //}=0A=
    //console.log($('#demoBrackets').autoNumeric('get'));=0A=
    //$('#someID_defaults').autoNumeric('update', {aPad: 'false'});=0A=
});
------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://decorplanit.com/plugin/json2.js

/*=0A=
    json2.js=0A=
    2011-10-19=0A=
=0A=
    Public Domain.=0A=
=0A=
    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.=0A=
=0A=
    See http://www.JSON.org/js.html=0A=
=0A=
=0A=
    This code should be minified before deployment.=0A=
    See http://javascript.crockford.com/jsmin.html=0A=
=0A=
    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS =
YOU DO=0A=
    NOT CONTROL.=0A=
=0A=
=0A=
    This file creates a global JSON object containing two methods: =
stringify=0A=
    and parse.=0A=
=0A=
        JSON.stringify(value, replacer, space)=0A=
            value       any JavaScript value, usually an object or array.=0A=
=0A=
            replacer    an optional parameter that determines how object=0A=
                        values are stringified for objects. It can be a=0A=
                        function or an array of strings.=0A=
=0A=
            space       an optional parameter that specifies the =
indentation=0A=
                        of nested structures. If it is omitted, the text =
will=0A=
                        be packed without extra whitespace. If it is a =
number,=0A=
                        it will specify the number of spaces to indent =
at each=0A=
                        level. If it is a string (such as '\t' or =
'&nbsp;'),=0A=
                        it contains the characters used to indent at =
each level.=0A=
=0A=
            This method produces a JSON text from a JavaScript value.=0A=
=0A=
            When an object value is found, if the object contains a =
toJSON=0A=
            method, its toJSON method will be called and the result will =
be=0A=
            stringified. A toJSON method does not serialize: it returns =
the=0A=
            value represented by the name/value pair that should be =
serialized,=0A=
            or undefined if nothing should be serialized. The toJSON =
method=0A=
            will be passed the key associated with the value, and this =
will be=0A=
            bound to the value=0A=
=0A=
            For example, this would serialize Dates as ISO strings.=0A=
=0A=
                Date.prototype.toJSON =3D function (key) {=0A=
                    function f(n) {=0A=
                        // Format integers to have at least two digits.=0A=
                        return n < 10 ? '0' + n : n;=0A=
                    }=0A=
=0A=
                    return this.getUTCFullYear()   + '-' +=0A=
                         f(this.getUTCMonth() + 1) + '-' +=0A=
                         f(this.getUTCDate())      + 'T' +=0A=
                         f(this.getUTCHours())     + ':' +=0A=
                         f(this.getUTCMinutes())   + ':' +=0A=
                         f(this.getUTCSeconds())   + 'Z';=0A=
                };=0A=
=0A=
            You can provide an optional replacer method. It will be =
passed the=0A=
            key and value of each member, with this bound to the =
containing=0A=
            object. The value that is returned from your method will be=0A=
            serialized. If your method returns undefined, then the =
member will=0A=
            be excluded from the serialization.=0A=
=0A=
            If the replacer parameter is an array of strings, then it =
will be=0A=
            used to select the members to be serialized. It filters the =
results=0A=
            such that only members with keys listed in the replacer =
array are=0A=
            stringified.=0A=
=0A=
            Values that do not have JSON representations, such as =
undefined or=0A=
            functions, will not be serialized. Such values in objects =
will be=0A=
            dropped; in arrays they will be replaced with null. You can =
use=0A=
            a replacer function to replace those with JSON values.=0A=
            JSON.stringify(undefined) returns undefined.=0A=
=0A=
            The optional space parameter produces a stringification of =
the=0A=
            value that is filled with line breaks and indentation to =
make it=0A=
            easier to read.=0A=
=0A=
            If the space parameter is a non-empty string, then that =
string will=0A=
            be used for indentation. If the space parameter is a number, =
then=0A=
            the indentation will be that many spaces.=0A=
=0A=
            Example:=0A=
=0A=
            text =3D JSON.stringify(['e', {pluribus: 'unum'}]);=0A=
            // text is '["e",{"pluribus":"unum"}]'=0A=
=0A=
=0A=
            text =3D JSON.stringify(['e', {pluribus: 'unum'}], null, =
'\t');=0A=
            // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'=0A=
=0A=
            text =3D JSON.stringify([new Date()], function (key, value) {=0A=
                return this[key] instanceof Date ?=0A=
                    'Date(' + this[key] + ')' : value;=0A=
            });=0A=
            // text is '["Date(---current time---)"]'=0A=
=0A=
=0A=
        JSON.parse(text, reviver)=0A=
            This method parses a JSON text to produce an object or array.=0A=
            It can throw a SyntaxError exception.=0A=
=0A=
            The optional reviver parameter is a function that can filter =
and=0A=
            transform the results. It receives each of the keys and =
values,=0A=
            and its return value is used instead of the original value.=0A=
            If it returns what it received, then the structure is not =
modified.=0A=
            If it returns undefined then the member is deleted.=0A=
=0A=
            Example:=0A=
=0A=
            // Parse the text. Values that look like ISO date strings =
will=0A=
            // be converted to Date objects.=0A=
=0A=
            myData =3D JSON.parse(text, function (key, value) {=0A=
                var a;=0A=
                if (typeof value =3D=3D=3D 'string') {=0A=
                    a =3D=0A=
/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value=
);=0A=
                    if (a) {=0A=
                        return new Date(Date.UTC(+a[1], +a[2] - 1, =
+a[3], +a[4],=0A=
                            +a[5], +a[6]));=0A=
                    }=0A=
                }=0A=
                return value;=0A=
            });=0A=
=0A=
            myData =3D JSON.parse('["Date(09/09/2001)"]', function (key, =
value) {=0A=
                var d;=0A=
                if (typeof value =3D=3D=3D 'string' &&=0A=
                        value.slice(0, 5) =3D=3D=3D 'Date(' &&=0A=
                        value.slice(-1) =3D=3D=3D ')') {=0A=
                    d =3D new Date(value.slice(5, -1));=0A=
                    if (d) {=0A=
                        return d;=0A=
                    }=0A=
                }=0A=
                return value;=0A=
            });=0A=
=0A=
=0A=
    This is a reference implementation. You are free to copy, modify, or=0A=
    redistribute.=0A=
*/=0A=
/*jslint evil: true, regexp: true */=0A=
/*members "", "\b", "\t", "\n", "\f", "\r", "\"", JSON, "\\", apply,=0A=
    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,=0A=
    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,=0A=
    lastIndex, length, parse, prototype, push, replace, slice, stringify,=0A=
    test, toJSON, toString, valueOf=0A=
*/=0A=
// Create a JSON object only if one does not already exist. We create the=0A=
// methods in a closure to avoid creating global variables.=0A=
var JSON;=0A=
if (!JSON) {=0A=
  JSON =3D {};=0A=
}(function () {=0A=
  'use strict';=0A=
=0A=
  function f(n) {=0A=
    // Format integers to have at least two digits.=0A=
    return n < 10 ? '0' + n : n;=0A=
  }=0A=
  if (typeof Date.prototype.toJSON !=3D=3D 'function') {=0A=
    Date.prototype.toJSON =3D function (key) {=0A=
      return isFinite(this.valueOf()) ? this.getUTCFullYear() + '-' + =
f(this.getUTCMonth() + 1) + '-' + f(this.getUTCDate()) + 'T' + =
f(this.getUTCHours()) + ':' + f(this.getUTCMinutes()) + ':' + =
f(this.getUTCSeconds()) + 'Z' : null;=0A=
    };=0A=
    String.prototype.toJSON =3D Number.prototype.toJSON =3D =
Boolean.prototype.toJSON =3D function (key) {=0A=
      return this.valueOf();=0A=
    };=0A=
  }=0A=
  var cx =3D =
/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u=
2060-\u206f\ufeff\ufff0-\uffff]/g,=0A=
    escapable =3D =
/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200=
f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,=0A=
    gap, indent, meta =3D { // table of character substitutions=0A=
      '\b': '\\b',=0A=
      '\t': '\\t',=0A=
      '\n': '\\n',=0A=
      '\f': '\\f',=0A=
      '\r': '\\r',=0A=
      '"': '\\"',=0A=
      '\\': '\\\\'=0A=
    },=0A=
    rep;=0A=
=0A=
  function quote(string) {=0A=
    // If the string contains no control characters, no quote =
characters, and no=0A=
    // backslash characters, then we can safely slap some quotes around =
it.=0A=
    // Otherwise we must also replace the offending characters with safe =
escape=0A=
    // sequences.=0A=
    escapable.lastIndex =3D 0;=0A=
    return escapable.test(string) ? '"' + string.replace(escapable, =
function (a) {=0A=
      var c =3D meta[a];=0A=
      return typeof c =3D=3D=3D 'string' ? c : '\\u' + ('0000' + =
a.charCodeAt(0).toString(16)).slice(-4);=0A=
    }) + '"' : '"' + string + '"';=0A=
  }=0A=
=0A=
  function str(key, holder) {=0A=
    // Produce a string from holder[key].=0A=
    var i, // The loop counter.=0A=
    k, // The member key.=0A=
    v, // The member value.=0A=
    length, mind =3D gap,=0A=
      partial, value =3D holder[key];=0A=
    // If the value has a toJSON method, call it to obtain a replacement =
value.=0A=
    if (value && typeof value =3D=3D=3D 'object' && typeof value.toJSON =
=3D=3D=3D 'function') {=0A=
      value =3D value.toJSON(key);=0A=
    }=0A=
    // If we were called with a replacer function, then call the =
replacer to=0A=
    // obtain a replacement value.=0A=
    if (typeof rep =3D=3D=3D 'function') {=0A=
      value =3D rep.call(holder, key, value);=0A=
    }=0A=
    // What happens next depends on the value's type.=0A=
    switch (typeof value) {=0A=
    case 'string':=0A=
      return quote(value);=0A=
    case 'number':=0A=
      // JSON numbers must be finite. Encode non-finite numbers as null.=0A=
      return isFinite(value) ? String(value) : 'null';=0A=
    case 'boolean':=0A=
    case 'null':=0A=
      // If the value is a boolean or null, convert it to a string. Note:=0A=
      // typeof null does not produce 'null'. The case is included here =
in=0A=
      // the remote chance that this gets fixed someday.=0A=
      return String(value);=0A=
      // If the type is 'object', we might be dealing with an object or =
an array or=0A=
      // null.=0A=
    case 'object':=0A=
      // Due to a specification blunder in ECMAScript, typeof null is =
'object',=0A=
      // so watch out for that case.=0A=
      if (!value) {=0A=
        return 'null';=0A=
      }=0A=
      // Make an array to hold the partial results of stringifying this =
object value.=0A=
      gap +=3D indent;=0A=
      partial =3D [];=0A=
      // Is the value an array?=0A=
      if (Object.prototype.toString.apply(value) =3D=3D=3D '[object =
Array]') {=0A=
        // The value is an array. Stringify every element. Use null as a =
placeholder=0A=
        // for non-JSON values.=0A=
        length =3D value.length;=0A=
        for (i =3D 0; i < length; i +=3D 1) {=0A=
          partial[i] =3D str(i, value) || 'null';=0A=
        }=0A=
        // Join all of the elements together, separated with commas, and =
wrap them in=0A=
        // brackets.=0A=
        v =3D partial.length =3D=3D=3D 0 ? '[]' : gap ? '[\n' + gap + =
partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') =
+ ']';=0A=
        gap =3D mind;=0A=
        return v;=0A=
      }=0A=
      // If the replacer is an array, use it to select the members to be =
stringified.=0A=
      if (rep && typeof rep =3D=3D=3D 'object') {=0A=
        length =3D rep.length;=0A=
        for (i =3D 0; i < length; i +=3D 1) {=0A=
          if (typeof rep[i] =3D=3D=3D 'string') {=0A=
            k =3D rep[i];=0A=
            v =3D str(k, value);=0A=
            if (v) {=0A=
              partial.push(quote(k) + (gap ? ': ' : ':') + v);=0A=
            }=0A=
          }=0A=
        }=0A=
      } else {=0A=
        // Otherwise, iterate through all of the keys in the object.=0A=
        for (k in value) {=0A=
          if (Object.prototype.hasOwnProperty.call(value, k)) {=0A=
            v =3D str(k, value);=0A=
            if (v) {=0A=
              partial.push(quote(k) + (gap ? ': ' : ':') + v);=0A=
            }=0A=
          }=0A=
        }=0A=
      }=0A=
      // Join all of the member texts together, separated with commas,=0A=
      // and wrap them in braces.=0A=
      v =3D partial.length =3D=3D=3D 0 ? '{}' : gap ? '{\n' + gap + =
partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') =
+ '}';=0A=
      gap =3D mind;=0A=
      return v;=0A=
    }=0A=
  }=0A=
  // If the JSON object does not yet have a stringify method, give it =
one.=0A=
  if (typeof JSON.stringify !=3D=3D 'function') {=0A=
    JSON.stringify =3D function (value, replacer, space) {=0A=
      // The stringify method takes a value and an optional replacer, =
and an optional=0A=
      // space parameter, and returns a JSON text. The replacer can be a =
function=0A=
      // that can replace values, or an array of strings that will =
select the keys.=0A=
      // A default replacer method can be provided. Use of the space =
parameter can=0A=
      // produce text that is more easily readable.=0A=
      var i;=0A=
      gap =3D '';=0A=
      indent =3D '';=0A=
      // If the space parameter is a number, make an indent string =
containing that=0A=
      // many spaces.=0A=
      if (typeof space =3D=3D=3D 'number') {=0A=
        for (i =3D 0; i < space; i +=3D 1) {=0A=
          indent +=3D ' ';=0A=
        }=0A=
        // If the space parameter is a string, it will be used as the =
indent string.=0A=
      } else if (typeof space =3D=3D=3D 'string') {=0A=
        indent =3D space;=0A=
      }=0A=
      // If there is a replacer, it must be a function or an array.=0A=
      // Otherwise, throw an error.=0A=
      rep =3D replacer;=0A=
      if (replacer && typeof replacer !=3D=3D 'function' && (typeof =
replacer !=3D=3D 'object' || typeof replacer.length !=3D=3D 'number')) {=0A=
        throw new Error('JSON.stringify');=0A=
      }=0A=
      // Make a fake root object containing our value under the key of =
''.=0A=
      // Return the result of stringifying the value.=0A=
      return str('', {=0A=
        '': value=0A=
      });=0A=
    };=0A=
  }=0A=
  // If the JSON object does not yet have a parse method, give it one.=0A=
  if (typeof JSON.parse !=3D=3D 'function') {=0A=
    JSON.parse =3D function (text, reviver) {=0A=
      // The parse method takes a text and an optional reviver function, =
and returns=0A=
      // a JavaScript value if the text is a valid JSON text.=0A=
      var j;=0A=
=0A=
      function walk(holder, key) {=0A=
        // The walk method is used to recursively walk the resulting =
structure so=0A=
        // that modifications can be made.=0A=
        var k, v, value =3D holder[key];=0A=
        if (value && typeof value =3D=3D=3D 'object') {=0A=
          for (k in value) {=0A=
            if (Object.prototype.hasOwnProperty.call(value, k)) {=0A=
              v =3D walk(value, k);=0A=
              if (v !=3D=3D undefined) {=0A=
                value[k] =3D v;=0A=
              } else {=0A=
                delete value[k];=0A=
              }=0A=
            }=0A=
          }=0A=
        }=0A=
        return reviver.call(holder, key, value);=0A=
      }=0A=
      // Parsing happens in four stages. In the first stage, we replace =
certain=0A=
      // Unicode characters with escape sequences. JavaScript handles =
many characters=0A=
      // incorrectly, either silently deleting them, or treating them as =
line endings.=0A=
      text =3D String(text);=0A=
      cx.lastIndex =3D 0;=0A=
      if (cx.test(text)) {=0A=
        text =3D text.replace(cx, function (a) {=0A=
          return '\\u' + ('0000' + =
a.charCodeAt(0).toString(16)).slice(-4);=0A=
        });=0A=
      }=0A=
      // In the second stage, we run the text against regular =
expressions that look=0A=
      // for non-JSON patterns. We are especially concerned with '()' =
and 'new'=0A=
      // because they can cause invocation, and '=3D' because it can =
cause mutation.=0A=
      // But just to be safe, we want to reject all unexpected forms.=0A=
      // We split the second stage into 4 regexp operations in order to =
work around=0A=
      // crippling inefficiencies in IE's and Safari's regexp engines. =
First we=0A=
      // replace the JSON backslash pairs with '@' (a non-JSON =
character). Second, we=0A=
      // replace all simple value tokens with ']' characters. Third, we =
delete all=0A=
      // open brackets that follow a colon or comma or that begin the =
text. Finally,=0A=
      // we look to see that the remaining characters are only =
whitespace or ']' or=0A=
      // ',' or ':' or '{' or '}'. If that is so, then the text is safe =
for eval.=0A=
      if =
(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,=
 =
'@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\=
d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {=0A=
        // In the third stage we use the eval function to compile the =
text into a=0A=
        // JavaScript structure. The '{' operator is subject to a =
syntactic ambiguity=0A=
        // in JavaScript: it can begin a block or an object literal. We =
wrap the text=0A=
        // in parens to eliminate the ambiguity.=0A=
        j =3D eval('(' + text + ')');=0A=
        // In the optional fourth stage, we recursively walk the new =
structure, passing=0A=
        // each name/value pair to a reviver function for possible =
transformation.=0A=
        return typeof reviver =3D=3D=3D 'function' ? walk({=0A=
          '': j=0A=
        }, '') : j;=0A=
      }=0A=
      // If the text is not JSON parseable, then a SyntaxError is thrown.=0A=
      throw new SyntaxError('JSON.parse');=0A=
    };=0A=
  }=0A=
}());
------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://decorplanit.com/plugin/smoothScroll.js

/*! Smooth Scroll - v1.4.5 - 2012-07-22=0A=
 * Copyright (c) 2012 Karl Swedberg; Licensed MIT, GPL */=0A=
(function ($) {=0A=
  var version =3D '1.4.5',=0A=
    defaults =3D {=0A=
      exclude: [],=0A=
      excludeWithin: [],=0A=
      offset: 0,=0A=
      direction: 'top',=0A=
      // one of 'top' or 'left'=0A=
      scrollElement: null,=0A=
      // jQuery set of elements you wish to scroll (for $.smoothScroll).=0A=
      //  if null (default), $('html, body').firstScrollable() is used.=0A=
      scrollTarget: null,=0A=
      // only use if you want to override default behavior=0A=
      beforeScroll: function () {},=0A=
      // fn(opts) function to be called before scrolling occurs. "this" =
is the element(s) being scrolled=0A=
      afterScroll: function () {},=0A=
      // fn(opts) function to be called after scrolling occurs. "this" =
is the triggering element=0A=
      easing: 'swing',=0A=
      speed: 400,=0A=
      autoCoefficent: 2 // coefficient for "auto" speed=0A=
    },=0A=
    getScrollable =3D function (opts) {=0A=
      var scrollable =3D [],=0A=
        scrolled =3D false,=0A=
        dir =3D opts.dir && opts.dir =3D=3D 'left' ? 'scrollLeft' : =
'scrollTop';=0A=
      this.each(function () {=0A=
        if (this =3D=3D document || this =3D=3D window) {=0A=
          return;=0A=
        }=0A=
        var el =3D $(this);=0A=
        if (el[dir]() > 0) {=0A=
          scrollable.push(this);=0A=
        } else {=0A=
          // if scroll(Top|Left) =3D=3D=3D 0, nudge the element 1px and =
see if it moves=0A=
          el[dir](1);=0A=
          scrolled =3D el[dir]() > 0;=0A=
          // then put it back, of course=0A=
          el[dir](0);=0A=
          if (scrolled) {=0A=
            scrollable.push(this);=0A=
          }=0A=
        }=0A=
      });=0A=
      if (opts.el =3D=3D=3D 'first' && scrollable.length) {=0A=
        scrollable =3D [scrollable[0]];=0A=
      }=0A=
      return scrollable;=0A=
    },=0A=
    isTouch =3D 'ontouchend' in document;=0A=
  $.fn.extend({=0A=
    scrollable: function (dir) {=0A=
      var scrl =3D getScrollable.call(this, {=0A=
        dir: dir=0A=
      });=0A=
      return this.pushStack(scrl);=0A=
    },=0A=
    firstScrollable: function (dir) {=0A=
      var scrl =3D getScrollable.call(this, {=0A=
        el: 'first',=0A=
        dir: dir=0A=
      });=0A=
      return this.pushStack(scrl);=0A=
    },=0A=
    smoothScroll: function (options) {=0A=
      options =3D options || {};=0A=
      var opts =3D $.extend({}, $.fn.smoothScroll.defaults, options),=0A=
        locationPath =3D $.smoothScroll.filterPath(location.pathname);=0A=
      this.unbind('click.smoothscroll').bind('click.smoothscroll', =
function (event) {=0A=
        var link =3D this,=0A=
          $link =3D $(this),=0A=
          exclude =3D opts.exclude,=0A=
          excludeWithin =3D opts.excludeWithin,=0A=
          elCounter =3D 0,=0A=
          ewlCounter =3D 0,=0A=
          include =3D true,=0A=
          clickOpts =3D {},=0A=
          hostMatch =3D ((location.hostname =3D=3D=3D link.hostname) || =
!link.hostname),=0A=
          pathMatch =3D opts.scrollTarget || =
($.smoothScroll.filterPath(link.pathname) || locationPath) =3D=3D=3D =
locationPath,=0A=
          thisHash =3D escapeSelector(link.hash);=0A=
        if (!opts.scrollTarget && (!hostMatch || !pathMatch || =
!thisHash)) {=0A=
          include =3D false;=0A=
        } else {=0A=
          while (include && elCounter < exclude.length) {=0A=
            if ($link.is(escapeSelector(exclude[elCounter++]))) {=0A=
              include =3D false;=0A=
            }=0A=
          }=0A=
          while (include && ewlCounter < excludeWithin.length) {=0A=
            if ($link.closest(excludeWithin[ewlCounter++]).length) {=0A=
              include =3D false;=0A=
            }=0A=
          }=0A=
        }=0A=
        if (include) {=0A=
          event.preventDefault();=0A=
          $.extend(clickOpts, opts, {=0A=
            scrollTarget: opts.scrollTarget || thisHash,=0A=
            link: link=0A=
          });=0A=
          $.smoothScroll(clickOpts);=0A=
        }=0A=
      });=0A=
      return this;=0A=
    }=0A=
  });=0A=
  $.smoothScroll =3D function (options, px) {=0A=
    var opts, $scroller, scrollTargetOffset, speed, scrollerOffset =3D 0,=0A=
      offPos =3D 'offset',=0A=
      scrollDir =3D 'scrollTop',=0A=
      aniProps =3D {},=0A=
      aniOpts =3D {},=0A=
      useScrollTo =3D false,=0A=
      scrollprops =3D [];=0A=
    if (typeof options =3D=3D=3D 'number') {=0A=
      opts =3D $.fn.smoothScroll.defaults;=0A=
      scrollTargetOffset =3D options;=0A=
    } else {=0A=
      opts =3D $.extend({}, $.fn.smoothScroll.defaults, options || {});=0A=
      if (opts.scrollElement) {=0A=
        offPos =3D 'position';=0A=
        if (opts.scrollElement.css('position') =3D=3D 'static') {=0A=
          opts.scrollElement.css('position', 'relative');=0A=
        }=0A=
      }=0A=
      scrollTargetOffset =3D px || ($(opts.scrollTarget)[offPos]() && =
$(opts.scrollTarget)[offPos]()[opts.direction]) || 0;=0A=
    }=0A=
    opts =3D $.extend({=0A=
      link: null=0A=
    }, opts);=0A=
    scrollDir =3D opts.direction =3D=3D 'left' ? 'scrollLeft' : =
scrollDir;=0A=
    if (opts.scrollElement) {=0A=
      $scroller =3D opts.scrollElement;=0A=
      scrollerOffset =3D $scroller[scrollDir]();=0A=
    } else {=0A=
      $scroller =3D $('html, body').firstScrollable();=0A=
      useScrollTo =3D isTouch && 'scrollTo' in window;=0A=
    }=0A=
    aniProps[scrollDir] =3D scrollTargetOffset + scrollerOffset + =
opts.offset;=0A=
    opts.beforeScroll.call($scroller, opts);=0A=
    if (useScrollTo) {=0A=
      scrollprops =3D (opts.direction =3D=3D 'left') ? =
[aniProps[scrollDir], 0] : [0, aniProps[scrollDir]];=0A=
      window.scrollTo.apply(window, scrollprops);=0A=
      opts.afterScroll.call(opts.link, opts);=0A=
    } else {=0A=
      speed =3D opts.speed;=0A=
      // automatically calculate the speed of the scroll based on =
distance / coefficient=0A=
      if (speed =3D=3D=3D 'auto') {=0A=
        // if aniProps[scrollDir] =3D=3D 0 then we'll use scrollTop() =
value instead=0A=
        speed =3D aniProps[scrollDir] || $scroller.scrollTop();=0A=
        // divide the speed by the coefficient=0A=
        speed =3D speed / opts.autoCoefficent;=0A=
      }=0A=
      aniOpts =3D {=0A=
        duration: speed,=0A=
        easing: opts.easing,=0A=
        complete: function () {=0A=
          opts.afterScroll.call(opts.link, opts);=0A=
        }=0A=
      };=0A=
      if (opts.step) {=0A=
        aniOpts.step =3D opts.step;=0A=
      }=0A=
      $scroller.stop().animate(aniProps, aniOpts);=0A=
    }=0A=
  };=0A=
  $.smoothScroll.version =3D version;=0A=
  $.smoothScroll.filterPath =3D function (string) {=0A=
    return string.replace(/^\//, =
'').replace(/(index|default).[a-zA-Z]{3,4}$/, '').replace(/\/$/, '');=0A=
  };=0A=
  // default options=0A=
  $.fn.smoothScroll.defaults =3D defaults;=0A=
=0A=
  function escapeSelector(str) {=0A=
    return str.replace(/(:|\.)/g, '\\$1');=0A=
  }=0A=
})(jQuery);
------=_NextPart_000_0000_01CDFD47.C3D51740
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://decorplanit.com/plugin/scripts/prettify.js

var q=3Dnull;window.PR_SHOULD_USE_CONTINUATION=3D!0;=0A=
(function(){function L(a){function m(a){var =
f=3Da.charCodeAt(0);if(f!=3D=3D92)return f;var =
b=3Da.charAt(1);return(f=3Dr[b])?f:"0"<=3Db&&b<=3D"7"?parseInt(a.substrin=
g(1),8):b=3D=3D=3D"u"||b=3D=3D=3D"x"?parseInt(a.substring(2),16):a.charCo=
deAt(1)}function =
e(a){if(a<32)return(a<16?"\\x0":"\\x")+a.toString(16);a=3DString.fromChar=
Code(a);if(a=3D=3D=3D"\\"||a=3D=3D=3D"-"||a=3D=3D=3D"["||a=3D=3D=3D"]")a=3D=
"\\"+a;return a}function h(a){for(var =
f=3Da.substring(1,a.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\=
[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g),a=3D=0A=
[],b=3D[],o=3Df[0]=3D=3D=3D"^",c=3Do?1:0,i=3Df.length;c<i;++c){var =
j=3Df[c];if(/\\[bdsw]/i.test(j))a.push(j);else{var =
j=3Dm(j),d;c+2<i&&"-"=3D=3D=3Df[c+1]?(d=3Dm(f[c+2]),c+=3D2):d=3Dj;b.push(=
[j,d]);d<65||j>122||(d<65||j>90||b.push([Math.max(65,j)|32,Math.min(d,90)=
|32]),d<97||j>122||b.push([Math.max(97,j)&-33,Math.min(d,122)&-33]))}}b.s=
ort(function(a,f){return =
a[0]-f[0]||f[1]-a[1]});f=3D[];j=3D[NaN,NaN];for(c=3D0;c<b.length;++c)i=3D=
b[c],i[0]<=3Dj[1]+1?j[1]=3DMath.max(j[1],i[1]):f.push(j=3Di);b=3D["["];o&=
&b.push("^");b.push.apply(b,a);for(c=3D0;c<=0A=
f.length;++c)i=3Df[c],b.push(e(i[0])),i[1]>i[0]&&(i[1]+1>i[0]&&b.push("-"=
),b.push(e(i[1])));b.push("]");return b.join("")}function y(a){for(var =
f=3Da.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-=
f]{2}|\\\d+|\\[^\dux]|\(\?[!:=3D]|[()^]|[^()[\\^]+/g),b=3Df.length,d=3D[]=
,c=3D0,i=3D0;c<b;++c){var =
j=3Df[c];j=3D=3D=3D"("?++i:"\\"=3D=3D=3Dj.charAt(0)&&(j=3D+j.substring(1)=
)&&j<=3Di&&(d[j]=3D-1)}for(c=3D1;c<d.length;++c)-1=3D=3D=3Dd[c]&&(d[c]=3D=
++t);for(i=3Dc=3D0;c<b;++c)j=3Df[c],j=3D=3D=3D"("?(++i,d[i]=3D=3D=3Dvoid =
0&&(f[c]=3D"(?:")):"\\"=3D=3D=3Dj.charAt(0)&&=0A=
(j=3D+j.substring(1))&&j<=3Di&&(f[c]=3D"\\"+d[i]);for(i=3Dc=3D0;c<b;++c)"=
^"=3D=3D=3Df[c]&&"^"!=3D=3Df[c+1]&&(f[c]=3D"");if(a.ignoreCase&&s)for(c=3D=
0;c<b;++c)j=3Df[c],a=3Dj.charAt(0),j.length>=3D2&&a=3D=3D=3D"["?f[c]=3Dh(=
j):a!=3D=3D"\\"&&(f[c]=3Dj.replace(/[A-Za-z]/g,function(a){a=3Da.charCode=
At(0);return"["+String.fromCharCode(a&-33,a|32)+"]"}));return =
f.join("")}for(var t=3D0,s=3D!1,l=3D!1,p=3D0,d=3Da.length;p<d;++p){var =
g=3Da[p];if(g.ignoreCase)l=3D!0;else =
if(/[a-z]/i.test(g.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/=
gi,""))){s=3D!0;l=3D!1;break}}for(var r=3D=0A=
{b:8,t:9,n:10,v:11,f:12,r:13},n=3D[],p=3D0,d=3Da.length;p<d;++p){g=3Da[p]=
;if(g.global||g.multiline)throw =
Error(""+g);n.push("(?:"+y(g)+")")}return =
RegExp(n.join("|"),l?"gi":"g")}function M(a){function =
m(a){switch(a.nodeType){case 1:if(e.test(a.className))break;for(var =
g=3Da.firstChild;g;g=3Dg.nextSibling)m(g);g=3Da.nodeName;if("BR"=3D=3D=3D=
g||"LI"=3D=3D=3Dg)h[s]=3D"\n",t[s<<1]=3Dy++,t[s++<<1|1]=3Da;break;case =
3:case =
4:g=3Da.nodeValue,g.length&&(g=3Dp?g.replace(/\r\n?/g,"\n"):g.replace(/[\=
t\n\r ]+/g," "),h[s]=3Dg,t[s<<1]=3Dy,y+=3Dg.length,=0A=
t[s++<<1|1]=3Da)}}var =
e=3D/(?:^|\s)nocode(?:\s|$)/,h=3D[],y=3D0,t=3D[],s=3D0,l;a.currentStyle?l=
=3Da.currentStyle.whiteSpace:window.getComputedStyle&&(l=3Ddocument.defau=
ltView.getComputedStyle(a,q).getPropertyValue("white-space"));var =
p=3Dl&&"pre"=3D=3D=3Dl.substring(0,3);m(a);return{a:h.join("").replace(/\=
n$/,""),c:t}}function =
B(a,m,e,h){m&&(a=3D{a:m,d:a},e(a),h.push.apply(h,a.e))}function =
x(a,m){function e(a){for(var =
l=3Da.d,p=3D[l,"pln"],d=3D0,g=3Da.a.match(y)||[],r=3D{},n=3D0,z=3Dg.lengt=
h;n<z;++n){var f=3Dg[n],b=3Dr[f],o=3Dvoid 0,c;if(typeof b=3D=3D=3D=0A=
"string")c=3D!1;else{var =
i=3Dh[f.charAt(0)];if(i)o=3Df.match(i[1]),b=3Di[0];else{for(c=3D0;c<t;++c=
)if(i=3Dm[c],o=3Df.match(i[1])){b=3Di[0];break}o||(b=3D"pln")}if((c=3Db.l=
ength>=3D5&&"lang-"=3D=3D=3Db.substring(0,5))&&!(o&&typeof =
o[1]=3D=3D=3D"string"))c=3D!1,b=3D"src";c||(r[f]=3Db)}i=3Dd;d+=3Df.length=
;if(c){c=3Do[1];var =
j=3Df.indexOf(c),k=3Dj+c.length;o[2]&&(k=3Df.length-o[2].length,j=3Dk-c.l=
ength);b=3Db.substring(5);B(l+i,f.substring(0,j),e,p);B(l+i+j,c,C(b,c),p)=
;B(l+i+k,f.substring(k),e,p)}else p.push(l+i,b)}a.e=3Dp}var =
h=3D{},y;(function(){for(var e=3Da.concat(m),=0A=
l=3D[],p=3D{},d=3D0,g=3De.length;d<g;++d){var =
r=3De[d],n=3Dr[3];if(n)for(var =
k=3Dn.length;--k>=3D0;)h[n.charAt(k)]=3Dr;r=3Dr[1];n=3D""+r;p.hasOwnPrope=
rty(n)||(l.push(r),p[n]=3Dq)}l.push(/[\S\s]/);y=3DL(l)})();var =
t=3Dm.length;return e}function u(a){var =
m=3D[],e=3D[];a.tripleQuotedStrings?m.push(["str",/^(?:'''(?:[^'\\]|\\[\S=
\s]|''?(?=3D[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=3D[^"]))*(?:"""|=
$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,q,"'\""]):=
a.multiLineStrings?m.push(["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^=
"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,=0A=
q,"'\"`"]):m.push(["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|=
\\.)*(?:"|$))/,q,"\"'"]);a.verbatimStrings&&e.push(["str",/^@"(?:[^"]|"")=
*(?:"|$)/,q]);var =
h=3Da.hashComments;h&&(a.cStyleComments?(h>1?m.push(["com",/^#(?:##(?:[^#=
]|#(?!##))*(?:###|$)|.*)/,q,"#"]):m.push(["com",/^#(?:(?:define|elif|else=
|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\n\r]*)/=
,q,"#"]),e.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[=
\w-]+\.h|[a-z]\w*)>/,q])):m.push(["com",/^#[^\n\r]*/,=0A=
q,"#"]));a.cStyleComments&&(e.push(["com",/^\/\/[^\n\r]*/,q]),e.push(["co=
m",/^\/\*[\S\s]*?(?:\*\/|$)/,q]));a.regexLiterals&&e.push(["lang-regex",/=
^(?:^^\.?|[!+-]|!=3D|!=3D=3D|#|%|%=3D|&|&&|&&=3D|&=3D|\(|\*|\*=3D|\+=3D|,=
|-=3D|->|\/|\/=3D|:|::|;|<|<<|<<=3D|<=3D|=3D|=3D=3D|=3D=3D=3D|>|>=3D|>>|>=
>=3D|>>>|>>>=3D|[?@[^]|\^=3D|\^\^|\^\^=3D|{|\||\|=3D|\|\||\|\|=3D|~|break=
|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)=
\s*(\/(?=3D[^*/])(?:[^/[\\]|\\[\S\s]|\[(?:[^\\\]]|\\[\S\s])*(?:]|$))+\/)/=
]);(h=3Da.types)&&e.push(["typ",h]);a=3D(""+a.keywords).replace(/^ | $/g,=0A=
"");a.length&&e.push(["kwd",RegExp("^(?:"+a.replace(/[\s,]+/g,"|")+")\\b"=
),q]);m.push(["pln",/^\s+/,q," =
\r\n\t\xa0"]);e.push(["lit",/^@[$_a-z][\w$@]*/i,q],["typ",/^(?:[@_]?[A-Z]=
+[a-z][\w$@]*|\w+_t\b)/,q],["pln",/^[$_a-z][\w$@]*/i,q],["lit",/^(?:0x[\d=
a-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,q,"01234=
56789"],["pln",/^\\[\S\s]?/,q],["pun",/^.[^\s\w"-$'./@\\`]*/,q]);return =
x(m,e)}function D(a,m){function e(a){switch(a.nodeType){case =
1:if(k.test(a.className))break;if("BR"=3D=3D=3Da.nodeName)h(a),=0A=
a.parentNode&&a.parentNode.removeChild(a);else =
for(a=3Da.firstChild;a;a=3Da.nextSibling)e(a);break;case 3:case =
4:if(p){var b=3Da.nodeValue,d=3Db.match(t);if(d){var =
c=3Db.substring(0,d.index);a.nodeValue=3Dc;(b=3Db.substring(d.index+d[0].=
length))&&a.parentNode.insertBefore(s.createTextNode(b),a.nextSibling);h(=
a);c||a.parentNode.removeChild(a)}}}}function h(a){function b(a,d){var =
e=3Dd?a.cloneNode(!1):a,f=3Da.parentNode;if(f){var =
f=3Db(f,1),g=3Da.nextSibling;f.appendChild(e);for(var =
h=3Dg;h;h=3Dg)g=3Dh.nextSibling,f.appendChild(h)}return e}=0A=
for(;!a.nextSibling;)if(a=3Da.parentNode,!a)return;for(var =
a=3Db(a.nextSibling,0),e;(e=3Da.parentNode)&&e.nodeType=3D=3D=3D1;)a=3De;=
d.push(a)}var =
k=3D/(?:^|\s)nocode(?:\s|$)/,t=3D/\r\n?|\n/,s=3Da.ownerDocument,l;a.curre=
ntStyle?l=3Da.currentStyle.whiteSpace:window.getComputedStyle&&(l=3Ds.def=
aultView.getComputedStyle(a,q).getPropertyValue("white-space"));var =
p=3Dl&&"pre"=3D=3D=3Dl.substring(0,3);for(l=3Ds.createElement("LI");a.fir=
stChild;)l.appendChild(a.firstChild);for(var =
d=3D[l],g=3D0;g<d.length;++g)e(d[g]);m=3D=3D=3D(m|0)&&d[0].setAttribute("=
value",=0A=
m);var r=3Ds.createElement("OL");r.className=3D"linenums";for(var =
n=3DMath.max(0,m-1|0)||0,g=3D0,z=3Dd.length;g<z;++g)l=3Dd[g],l.className=3D=
"L"+(g+n)%10,l.firstChild||l.appendChild(s.createTextNode("\xa0")),r.appe=
ndChild(l);a.appendChild(r)}function k(a,m){for(var =
e=3Dm.length;--e>=3D0;){var =
h=3Dm[e];A.hasOwnProperty(h)?window.console&&console.warn("cannot =
override language handler %s",h):A[h]=3Da}}function =
C(a,m){if(!a||!A.hasOwnProperty(a))a=3D/^\s*</.test(m)?"default-markup":"=
default-code";return A[a]}function E(a){var m=3D=0A=
a.g;try{var e=3DM(a.h),h=3De.a;a.a=3Dh;a.c=3De.c;a.d=3D0;C(m,h)(a);var =
k=3D/\bMSIE\b/.test(navigator.userAgent),m=3D/\n/g,t=3Da.a,s=3Dt.length,e=
=3D0,l=3Da.c,p=3Dl.length,h=3D0,d=3Da.e,g=3Dd.length,a=3D0;d[g]=3Ds;var =
r,n;for(n=3Dr=3D0;n<g;)d[n]!=3D=3Dd[n+2]?(d[r++]=3Dd[n++],d[r++]=3Dd[n++]=
):n+=3D2;g=3Dr;for(n=3Dr=3D0;n<g;){for(var =
z=3Dd[n],f=3Dd[n+1],b=3Dn+2;b+2<=3Dg&&d[b+1]=3D=3D=3Df;)b+=3D2;d[r++]=3Dz=
;d[r++]=3Df;n=3Db}for(d.length=3Dr;h<p;){var =
o=3Dl[h+2]||s,c=3Dd[a+2]||s,b=3DMath.min(o,c),i=3Dl[h+1],j;if(i.nodeType!=
=3D=3D1&&(j=3Dt.substring(e,b))){k&&(j=3Dj.replace(m,"\r"));i.nodeValue=3D=0A=
j;var =
u=3Di.ownerDocument,v=3Du.createElement("SPAN");v.className=3Dd[a+1];var =
x=3Di.parentNode;x.replaceChild(v,i);v.appendChild(i);e<o&&(l[h+1]=3Di=3D=
u.createTextNode(t.substring(b,o)),x.insertBefore(i,v.nextSibling))}e=3Db=
;e>=3Do&&(h+=3D2);e>=3Dc&&(a+=3D2)}}catch(w){"console"in =
window&&console.log(w&&w.stack?w.stack:w)}}var =
v=3D["break,continue,do,else,for,if,return,while"],w=3D[[v,"auto,case,cha=
r,const,default,double,enum,extern,float,goto,int,long,register,short,sig=
ned,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],=0A=
"catch,class,delete,false,import,new,operator,private,protected,public,th=
is,throw,true,try,typeof"],F=3D[w,"alignof,align_union,asm,axiom,bool,con=
cept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,expo=
rt,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,st=
atic_assert,static_cast,template,typeid,typename,using,virtual,where"],G=3D=
[w,"abstract,boolean,byte,extends,final,finally,implements,import,instanc=
eof,null,native,package,strictfp,super,synchronized,throws,transient"],=0A=
H=3D[G,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixe=
d,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,o=
ut,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,s=
tring,select,uint,ulong,unchecked,unsafe,ushort,var"],w=3D[w,"debugger,ev=
al,export,function,get,null,set,undefined,var,with,Infinity,NaN"],I=3D[v,=
"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,=
in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,N=
one"],=0A=
J=3D[v,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,=
module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unles=
s,until,when,yield,BEGIN,END"],v=3D[v,"case,done,elif,esac,eval,fi,functi=
on,in,local,set,then,until"],K=3D/^(DIR|FILE|vector|(de|priority_)?queue|=
list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/,=
N=3D/\S/,O=3Du({keywords:[F,H,w,"caller,delete,die,do,dump,elsif,eval,exi=
t,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo=
,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END"+=0A=
I,J,v],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiteral=
s:!0}),A=3D{};k(O,["default-code"]);k(x([],[["pln",/^[^<?]+/],["dec",/^<!=
\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]=
+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)=
/],["lang-",/^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<scrip=
t\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\=
S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),=0A=
["default-markup","htm","html","mxml","xhtml","xml","xsl"]);k(x([["pln",/=
^\s+/,q," =
\t\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,q,"\"'"]],[["tag",/^^<\/?[a-z](?=
:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=3D]|on)[a-z](?:[\w:-]*\w)?/i]=
,["lang-uq.val",/^=3D\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=3D\s)))/],["pun",/^[/=
<->]+/],["lang-js",/^on\w+\s*=3D\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=3D\=
s*'([^']+)'/i],["lang-js",/^on\w+\s*=3D\s*([^\s"'>]+)/i],["lang-css",/^st=
yle\s*=3D\s*"([^"]+)"/i],["lang-css",/^style\s*=3D\s*'([^']+)'/i],["lang-=
css",=0A=
/^style\s*=3D\s*([^\s"'>]+)/i]]),["in.tag"]);k(x([],[["atv",/^[\S\s]+/]])=
,["uq.val"]);k(u({keywords:F,hashComments:!0,cStyleComments:!0,types:K}),=
["c","cc","cpp","cxx","cyc","m"]);k(u({keywords:"null,true,false"}),["jso=
n"]);k(u({keywords:H,hashComments:!0,cStyleComments:!0,verbatimStrings:!0=
,types:K}),["cs"]);k(u({keywords:G,cStyleComments:!0}),["java"]);k(u({key=
words:v,hashComments:!0,multiLineStrings:!0}),["bsh","csh","sh"]);k(u({ke=
ywords:I,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),=0A=
["cv","py"]);k(u({keywords:"caller,delete,die,do,dump,elsif,eval,exit,for=
each,for,goto,if,import,last,local,my,next,no,our,print,package,redo,requ=
ire,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0=
,multiLineStrings:!0,regexLiterals:!0}),["perl","pl","pm"]);k(u({keywords=
:J,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb"]);k(u({ke=
ywords:w,cStyleComments:!0,regexLiterals:!0}),["js"]);k(u({keywords:"all,=
and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,=
no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,whi=
le,yes",=0A=
hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:=
!0,regexLiterals:!0}),["coffee"]);k(x([],[["str",/^[\S\s]+/]]),["regex"])=
;window.prettyPrintOne=3Dfunction(a,m,e){var =
h=3Ddocument.createElement("PRE");h.innerHTML=3Da;e&&D(h,e);E({g:m,i:e,h:=
h});return h.innerHTML};window.prettyPrint=3Dfunction(a){function =
m(){for(var =
e=3Dwindow.PR_SHOULD_USE_CONTINUATION?l.now()+250:Infinity;p<h.length&&l.=
now()<e;p++){var =
n=3Dh[p],k=3Dn.className;if(k.indexOf("prettyprint")>=3D0){var =
k=3Dk.match(g),f,b;if(b=3D=0A=
!k){b=3Dn;for(var o=3Dvoid 0,c=3Db.firstChild;c;c=3Dc.nextSibling)var =
i=3Dc.nodeType,o=3Di=3D=3D=3D1?o?b:c:i=3D=3D=3D3?N.test(c.nodeValue)?b:o:=
o;b=3D(f=3Do=3D=3D=3Db?void =
0:o)&&"CODE"=3D=3D=3Df.tagName}b&&(k=3Df.className.match(g));k&&(k=3Dk[1]=
);b=3D!1;for(o=3Dn.parentNode;o;o=3Do.parentNode)if((o.tagName=3D=3D=3D"p=
re"||o.tagName=3D=3D=3D"code"||o.tagName=3D=3D=3D"xmp")&&o.className&&o.c=
lassName.indexOf("prettyprint")>=3D0){b=3D!0;break}b||((b=3D(b=3Dn.classN=
ame.match(/\blinenums\b(?::(\d+))?/))?b[1]&&b[1].length?+b[1]:!0:!1)&&D(n=
,b),d=3D{g:k,h:n,i:b},E(d))}}p<h.length?setTimeout(m,=0A=
250):a&&a()}for(var =
e=3D[document.getElementsByTagName("pre"),document.getElementsByTagName("=
code"),document.getElementsByTagName("xmp")],h=3D[],k=3D0;k<e.length;++k)=
for(var t=3D0,s=3De[k].length;t<s;++t)h.push(e[k][t]);var =
e=3Dq,l=3DDate;l.now||(l=3D{now:function(){return+new Date}});var =
p=3D0,d,g=3D/\blang(?:uage)?-([\w.]+)(?!\S)/;m()};window.PR=3D{createSimp=
leLexer:x,registerLangHandler:k,sourceDecorator:u,PR_ATTRIB_NAME:"atn",PR=
_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd=
",PR_LITERAL:"lit",=0A=
PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR=
_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ"}})();=0A=

------=_NextPart_000_0000_01CDFD47.C3D51740--
